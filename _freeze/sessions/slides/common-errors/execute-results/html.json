{
  "hash": "075df4cf9146a2d856580b76df937098",
  "result": {
    "markdown": "---\ntitle: \"Common errors and how to fix them\"\nsubtitle: \"Day 1 - Introduction to Data Analysis with R\"\nauthor: \"Selina Baldauf\"\ninstitute: \"Freie UniversitÃ¤t Berlin - Theoretical Ecology\"\ndate: today\ndate-format: long\nformat: \n  revealjs:\n    footer: \"Selina Baldauf // Common errors\"\n    highlight-style: breeze\n    mainfont: Cabinet Grotesk\n    slide-number: true\n    show-slide-number: all\n    incremental: true\n    self-contained: true\n    code-line-numbers: false\n    auto-stretch: false\n    scrollable: true\n    fig-align: center\n    theme: slides.scss\nexecute: \n  echo: true\n  warning: false\n  message: false\n  error: true\nfrom: markdown+emoji\n---\n\n\n\n# {.background-no-title}\n\nWhen learning a programming language, you have to be prepared to spend a lot of \nyour time with fixing bugs in the code. So don't worry: It's not you, it's just how programming works!\n![](img/AllisonHorst/debugging.jpg)\n.footnote-right[Artwork by [Allison Horst](https://twitter.com/allison_horst)]\n\n## Debugging\n\nDebugging can be annoying and we can't avoid it, but ...\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n- ... it's an **effective learning experience** (I actually learned the most from debugging my code)\n\n- ... it will get easier over time\n\n- ... there are some **debugging techniques** to decrease the time in stages 2-7\n\n- ... if nothing helps, there are great people all over the internet willing to help\n\n:::\n\n:::{.column width=\"50%\"}\n\n![Artwork by [Allison Horst](https://twitter.com/allison_horst)](img/AllisonHorst/debugging.jpg)\n\n:::\n\n:::\n\n# Most common errors for beginners {.inverse}\n\n> and how to deal with them\nclass: inverse, center, middle\n\n## Syntax errors\n\n#### Example\n\n```r\nmean(c(1,2,3)na.rm=TRUE)\n```\n\n. . .\n\n#### How to fix\n\n- look for missing commas, misspelled arguments, ...\n- read the error message\n- the RStudio syntax checker warns you before you run code with syntax errors\n  - look for &nbsp;![](img/day1/red_x.png)&nbsp; next to line numbers in your script\n\n![](img/day1/errors_syntax.png)\n\n\n## Error: could not find function\n\n#### Examples\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='common-errors_cache/html/unnamed-chunk-1_bc3a9bd83ef584177fd7459a70134697'}\n\n```{.r .cell-code}\nmutate(penguins, mean = mean(bill_length_mm, na.rm = TRUE))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in mutate(penguins, mean = mean(bill_length_mm, na.rm = TRUE)): could not find function \"mutate\"\n```\n:::\n:::\n\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='common-errors_cache/html/unnamed-chunk-2_d6f120f7255529149f91577164e91f62'}\n\n```{.r .cell-code}\nlenght(my_vector)\n```\n:::\n\n::: {.cell hash='common-errors_cache/html/unnamed-chunk-3_22274644c08cf9864d3d4a4a1dbeae3b'}\n::: {.cell-output .cell-output-error}\n```\nError in lenght(1:10): could not find function \"lenght\"\n```\n:::\n:::\n\n\n\n:::\n\n:::\n\n. . .\n\n#### How to fix\n\n`Could not find function` errors have two main reasons:\n\n1. You forgot to load the package that the function belongs to\n  - load the package using `library()` or call the function with `packageName::functionName()`\n2. You have a typo in your function call (e.g. `lenght()` instead of `length()`)\n\n## Error: object `x` not found\n\n#### Example\n\n\n\n::: {.cell hash='common-errors_cache/html/unnamed-chunk-4_df977b0b8b51e474256983e121f2a87a'}\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'hello' not found\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'variable_A' not found\n```\n:::\n:::\n\n\n\n. . .\n\n#### How to fix\n\n- you are trying to access an object that does not exist\n- Mostly because:\n  - typos in variable name (variable name is `variableA` but you try to access `variable_A`)\n  - forgot to put quotes around string: `print(hello)`\n  `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:currentColor;overflow:visible;position:relative;\"><path d=\"M438.6 278.6c12.5-12.5 12.5-32.8 0-45.3l-160-160c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L338.8 224 32 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l306.7 0L233.4 393.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l160-160z\"/></svg>`{=html} looks for a variable named hello but instead you wanted to print the string `print(\"hello\")`\n\n## Wrong data format\n\n#### Example\n\n- does not necessarily trigger an error message\n\n- if there is an error message, it can also appear later in your code\n\n. . .\n\n#### How to fix it\n\n- Look at `str()` of your data and check whether all columns are there and in correct format\n  - e.g. is a column of type `character` but should be of type `integer`?\n  \n- Do that at multiple locations in your script to find the line where the error actually happens\n  - everytime you change something in your data, check its structure\n\n## R crashes\n\nSometimes R crashes completely and you see this:\n\n![](img/day1/R_Crash.png)\n\n. . .\n\n#### How to fix it\n\n- There is no fix but to start a new session\n\n- Make sure to save your scripts regularly!\n\n## Console prints `+`\n\nR is not running code anymore and the console only prints `+` if you try to execute a command.\n\n![](img/day1/Console_plus.png)\n\n. . .\n\n#### How to fix it\n\n- First, go to the console and hit `Escape`. Then you should see the `>` sign instead of `+` again.\n- Likely you forgot to close a bracket somewhere. Go to your script and check where this happened\n  - look for &nbsp;![](img/day1/red_x.png)&nbsp; next to line numers\n\n## Warnings\n\nR can give you warnings for many reasons, e.g.\n\n- you have `NA` values in your data and try to plot them\n- implicit type conversion returned `NA`\n- the function you are using is deprecated\n- the package you are using was built for another version of R\n\n. . . \n\nWarnings are no errors and can sometimes be ignored but:\n\n- make sure to read and understand warnings\n- only ignore them if you know that that's okay, otherwise fix the underlying issue\n\n# How to troubleshoot R code{.inverse}\n\n> A step by step guide\n\n## Troubleshoot R: Step by step\n\nOften, you don't need to do all the steps but a systemmatic approach to bug fixing is very helpful.\n\n. . . \n\n**Step 1:** Carefully read the error message and try to fix it <br>\n\n. . .\n\n**Step 2:** Is it any of the errors you learned about just now? <br>\n\n. . .\n\n**Step 3:** If the error is about data or other variables: look at the structure using\n`str()`\n\n. . .\n\n**Step 4:** If the error is about a function: Read the documentation using `?functionName`. \n  - Did you use the function correctly?\n  - Did you forget an argument?<br>\n\n. . .\n\n**Step 5:** Look for answers online\n  - often you can also jump directly to this step\n\n. . .\n\n**Step 6:** Ask others for help\n\n## Step 5: Look for answers online\n\n- Search with keywords **R + package name + Error message/Warning**\n If you don't know how do do something try searching **R + package name + What you want to do**, e.g.\n  - \"R ggplot change axis title\"\n  - \"R sort vector\"\n- Usually you can pick any of the top search results, but I recommend results from [Stack Overflow](https://stackoverflow.com/)\n- Always search in English to get more results<br>\n\n. . .\n\n:::{.callout-tip}\nChange language of R messages to English with `Sys.setenv(LANGUAGE='en')`\n:::\n\n## Step 6: Ask others for help\n\nThere are plenty of places where you can ask for help online.\nSome common and good options are:\n\n- Ask a question on [Stack Overflow](https://stackoverflow.com/)\n\n- Ask in the [R Discord server](https://discord.gg/88uG5UVyE2)\n  - usually fast answers\n  - but: you need a Discord account\n  \n. . .\n\n**But**: You have to make sure that before, you tried all the other 5 steps.\n\n. . .\n\nTo ask questions online, you have to learn **how to ask a good R question.**\nThis includes:\n\n- clear question\n- reproducible example\n\nLook [here](https://github.com/selinaZitrone/R_AskQuestions) for more info on how to ask a good question about R\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}