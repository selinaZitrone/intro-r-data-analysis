{
  "hash": "2765c080fedc4cb9b66c13e7bf788ebf",
  "result": {
    "markdown": "---\ntitle: \"Introduction to RStudio\"\nsubtitle: \"Day 1 - Introduction to Data Analysis with R\"\nauthor: \"Selina Baldauf\"\ninstitute: \"Freie Universit√§t Berlin - Theoretical Ecology\"\ndate: today\ndate-format: long\nformat: \n  revealjs:\n    footer: \"Selina Baldauf // Introduction RStudio\"\n    highlight-style: breeze\n    mainfont: Cabinet Grotesk\n    slide-number: true\n    show-slide-number: all\n    incremental: false\n    self-contained: true\n    code-line-numbers: false\n    auto-stretch: false\n    scrollable: false\n    fig-align: center\n    theme: slides.scss\nexecute: \n  echo: true\n  warning: false\n  message: false\nfrom: markdown+emoji\n---\n\n\n\n\n## Difference between R and RStudio\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n![](img/Rlogo.png){fig-align=\"center\" width=15% }<br>\n\n:::\n\n:::{.column width=\"50%\"}\n\n![](img/Rstudio_logo.png){fig-align=\"center\" width=12%}<br>\n\n:::\n\n:::\n\n:::{.columns}\n\n\n\n:::{.column width=\"50%\"}\n\n:::{.fragment}\n\nR is the **programming language** and the **program** that does the actual work\n\n- Can be used with many different programming environments\n\n:::\n\n:::\n  \n:::{.column width=\"50%\"}\n\n:::{.fragment}\n\nRStudio is the **integrated development environment** (IDE)\n\n- Provides an interface to R\n- Specifically built around R code \n- Execute code\n- Syntax highlighting\n- File and project management\n- ...\n\n:::\n\n:::\n\n:::\n\n## Difference between R and RStudio\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n![](img/Rlogo.png){width=15% }<br>\n\n:::\n\n:::{.column width=\"50%\"}\n\n![](img/Rstudio_logo.png){width=12%}<br>\n\n:::\n\n:::\n\n![Analogy and image from \n[ModernDive Book](https://moderndive.com/1-getting-started.html#r-rstudio)](img/day1/car_engine.png)\n\n. . .\n\n::: {.callout-note}\n\n## Summary\n\nYou can use R without RStudio but RStudio without R would be of little use\n\n:::\n\n## Basic idea of writing code for data analysis\n\n::: {.incremental}\n\n1. Break down your process into small steps\n\n2. Write precise instructions in the R language for each step\n  - You do this in a document called an R script\n\n3. Tell R to execute these instructions\n\n4. R will give you the results (or an error message)\n\n:::\n\n# A quick tour around RStudio {.inverse}\n  \n## A quick tour around RStudio\n\n![](img/day1/RStudio_all.png){fig-align=\"center\" width=85%}\n\n## Console pane{.nonincremtal}\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n- Execute R code\n\n- Output from R code in scripts is printed there\n\n- Type a command into the console and execute with `Enter/Return`\n\n::: {.callout-tip}\n\nUse arrow keys to bring back last commands\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n![](img/day1/RStudio_console.png)\n\n:::\n\n:::\n\n## Script pane\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n- Write scripts with R code\n\n  - Scripts are text files with R commands (file ending `.R`)\n  \n  - Use scripts to save commands for reuse\n\n:::\n\n:::{.column width=\"50%\"}\n\n![](img/day1/RStudio_script.png)\n\n:::\n\n:::\n\n## Script pane\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n- Create a new R script: <br> **File -> New File -> R Script**\n- Save an R script:<br> **File->Save (Ctrl/Cmd + S)**\n- Run code line by line with **Run button (Ctrl+Enter/Cmd+Return)**\n- You can open multiple scripts\n\n:::\n\n:::{.column width=\"50%\"}\n\n ![](img/day1/RStudio_script.png)\n\n:::\n\n:::\n\n::: {.callout-note}\n\n## Summary\n\nUse **scripts** for all your analysis and for commands that you want to save.<br>\nUse **console** for temporary commands, e.g. to test something.\n\n:::\n\n## Environment pane\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n- Shows objects currently present in the R session\n\n- Is empty if you start R\n\n:::\n\n:::{.column width=\"50%\"}\n\n![](img/day1/RStudio_environment.png)\n\n:::\n\n:::\n\n## Files pane\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n- Similar to Explorer/Finder\n\n- Browse project structure and files\n  - Find and open files\n  - Create new folders\n  - Delete files\n  - Rename files \n  - ...\n  \n- Practical if you don't want to switch between File Explorer and RStudio all the time\n\n:::\n\n:::{.column width=\"50%\"}\n\n![](img/day1/RStudio_Files.png)\n\n:::\n\n:::\n\n## Plot pane {.nonincremental}\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n- Plots that are created with R will be shown here\n\n:::\n\n:::{.column width=\"50%\"}\n\n![](img/day1/RStudio_plot.png)\n\n:::\n\n:::\n\n# Project oriented workflow {.inverse}\n\n> How to use RStudio to organize your projects\n\n## Project oriented workflow \n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n- One directory with all files relevant for project\n  - Scripts, data, plots, documents, ...\n  \n:::\n\n:::{.column width=\"50%\"}\n\n```md\nMyProject\n|\n|- data\n|\n|- documents\n|   |\n|   |- notes\n|   |\n|   |- reports\n|\n|- analysis\n|   |\n|   |- clean_data.R \n|   |\n|   |- statistics.R\n|\n|\n```\n\n[Example project structure]{.text-small}\n\n:::\n\n:::\n\n## Project oriented workflow \n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n- One directory with all files relevant for project\n  - Scripts, data, plots, documents, ...\n \n- An RStudio project is just a normal directory with an **.Rproj** file\n\n:::\n\n:::{.column width=\"50%\"}\n\n```md\nProject\n|\n|- data\n|\n|- documents\n|   |\n|   |- notes\n|   |\n|   |- reports\n|\n|- analysis\n|   |\n|   |- clean_data.R \n|   |\n|   |- statistics.R\n|\n|- MyProject.RProj\n```\n\n[Example RStudio project structure]{.text-small}\n\n:::\n\n:::\n\n## Project oriented workflow \n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n**Advantages** of using RStudio projects\n\n::: {.incremental}\n\n- Easy to navigate in R Studio (**File pane**)\n- Easy to find and access scripts and data in RStudio\n- Project root is working directory\n- Open multiple projects simultaneously in separate RStudio instances\n\n:::\n    \n:::\n\n:::{.column width=\"50%\"}\n\n```md\nProject\n|\n|- data\n|\n|- documents\n|   |\n|   |- notes\n|   |\n|   |- reports\n|\n|- analysis\n|   |\n|   |- clean_data.R \n|   |\n|   |- statistics.R\n|\n|- *.RProj\n```\n\n[Example RStudio project structure]{.text-small}\n\n:::\n\n:::\n\n\n## Create an RStudio project {.nonincremental}\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\nCreate a project from scratch:\n  \n1. **File -> New Project -> New Directory -> New Project**\n2. Enter a directory name (this will be the name of your project)\n3. Choose the Directory where the project should be initiated\n4. **Create Project**\n\n:::\n\n:::{.column width=\"50%\"}\n\n![[Example RStudio project structure in the Files pane]{.text-small}](img/day1/RStudio_Files.png)\n\n:::\n\n:::\n\nRStudio will now create and open the project for you. \n\n## Navigate an RStudio project\n\n:::{.r-stack}\n\n![](img/day1/RStudio_Files_navig.png)\n\n:::\n\n## Open a project from outside RStudio\n\nTo open an RStudio project from your file explorer/finder, just double click on the **.Rproj** file\n\n![](img/day1/open_project.png){fig-align=center}\n\n## Open a project inside RStudio\n\nTo open an RStudio project from RStudio, click on the project symbol on the top right of R Studio and select the project from the list.\n\n\n![](img/day1/open_project_rstudio.png){fig-align=\"center\" width=45%}\n\n## A tip before we get started\n\nLearn the most important keyboard shortcuts of R Studio.\n\n. . .\n\nFind all shortcuts under **Tools -> Keyboard Shortcuts Help**\n\n:::{.nonincremental}\n- Save active file: Ctrl/Cmd + S\n- Run current line: Ctrl/Cmd + Enter\n- Create new R Script: Ctrl/Cmd + N\n- Undo: Ctrl/Cmd + Z\n- Redo: Ctrl/Cmd + Y\n- Copy/Paste: Ctrl/Cmd + C/V\n:::\n\n# Now you {.inverse}\n\n[Task 1 (25 min)]{.highlight-blue}<br>\n\n[Set up your own RStudio project for this workshop]{.big-text}\n\n**Find the task description [here](https://selinazitrone.github.io/intro-r-data-analysis/sessions/01_intro-rstudio.html)**\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}