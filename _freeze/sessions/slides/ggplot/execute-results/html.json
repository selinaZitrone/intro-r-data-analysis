{
  "hash": "f7bf633ccc6d8fa6c9c4eedf20d3fedb",
  "result": {
    "markdown": "---\ntitle: \"Data visualization with ggplot2\"\nsubtitle: \"Day 2 - Introduction to Data Analysis with R\"\nauthor: \"Selina Baldauf\"\ninstitute: \"Freie Universität Berlin - Theoretical Ecology\"\ndate: today\ndate-format: long\nformat: \n  revealjs:\n    footer: \"Selina Baldauf // Data visualization with ggplot2\"\n    highlight-style: breeze\n    mainfont: Cabinet Grotesk\n    slide-number: true\n    show-slide-number: all\n    incremental: true\n    self-contained: true\n    code-line-numbers: false\n    auto-stretch: false\n    scrollable: false\n    theme: slides.scss\n    fig-align: center\n    fig-width: 6.3\n    fig-height: 6.3\nexecute: \n  echo: true\n  warning: false\n  message: false\n  cache: true\nknitr: \n  opts_chunk: \n    collapse: true\n    comment: \"#>\"\nfrom: markdown+emoji\n---\n\n\n\n\n# A ggplot showcase{.inverse}\n\n> Example plots you can create with ggplot\n\n## A ggplot showcase\n\n:::{.r-stack}\n\n![Visualization by [Jake Kaupp](https://twitter.com/jakekaupp), code available on [Github](https://github.com/jkaupp/tidytuesdays/tree/master/2021/week27)](https://raw.githubusercontent.com/jkaupp/tidytuesdays/master/2021/week27/tw27_plot.png)\n\n:::\n\n## A ggplot showcase\n\n![Visualizations produced by the [BBC News data team](https://github.com/bbc/bbplot)](https://raw.githubusercontent.com/bbc/bbplot/master/chart_examples/bbplot_example_plots.png)\n\n## A ggplot showcase\n\n![Visualization by [Cédric Scherer](https://twitter.com/CedScherer), code available on [Github](https://github.com/z3tt/TidyTuesday/blob/master/R/2020_31_PalmerPenguins.Rmd)](https://raw.githubusercontent.com/Z3tt/TidyTuesday/master/plots/2020_31/2020_31_PalmerPenguins.png){width=35%}\n\n## Advantages of ggplot\n\n- **Consistent** grammar/structure\n- **Flexible** structure allows you to produce any type of plots\n- Highly **customizable appearance** (themes)\n- Many **extension packages** that provide additional plot types, themes, colors, animation, ...\n- Active community that provides help and inspiration\n- Perfect package for **exploratory data analysis** and **beautiful plots**\n\n## The data\n\nData set `and_vertebrates` with measurements of a trout and 2 salamander species in different forest sections.\n\n:::{.columns}\n\n:::{.column width=\"60%\"}\n\n::: {.nonincremental}\n\n::: {.small}\n\n- `year`: observation year\n- `section`: CC (clear cut forest) or OG (old growth forest)\n- `unittype`: channel classification (C = Cascade, P = Pool, ...)\n- `species`: Species measured\n- `length_1_mm`: body length [mm]\n- `weight_g`: body weight [g]\n\n:::\n\n:::\n\n:::{.aside}\nReferences: [Kaylor, M.J. and D.R. Warren. (2017)](https://doi.org/10.1002/ecs2.1845) and<br>[Gregory, S.V. and I. Arismendi. (2020)](https://doi.org/10.6073/pasta/7c78d662e847cdbe33584add8f809165) as provided in the <br>[lterdatasampler package](https://lter.github.io/lterdatasampler/).\n\n:::\n\n:::\n\n:::{.column width=\"40%\"}\n\n![Coastal giant salamander (terrestrial form)<br>Andrews Forest Program by Lina DiGregorio via CC-BY from [https://andrewsforest.oregonstate.edu](https://andrewsforest.oregonstate.edu)](https://andrewsforest.oregonstate.edu/sites/default/files/gallery/afb_037.jpg){width=60%}\n\n:::\n\n:::\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-1_bed3f67833e64564514783375514fb29'}\n\n:::\n\n\n## The data\n\nData set `and_vertebrates` with measurements of a trout and 2 salamander species in different forest sections.\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-2_e827c0c2200d1caed0059e5638dcb2ab'}\n\n```{.r .cell-code}\nlibrary(lterdatasampler)\nand_vertebrates\n#> # A tibble: 32,191 × 6\n#>     year section unittype species         length_1_mm weight_g\n#>    <dbl> <chr>   <chr>    <chr>                 <dbl>    <dbl>\n#>  1  1987 CC      R        Cutthroat trout          58     1.75\n#>  2  1987 CC      R        Cutthroat trout          61     1.95\n#>  3  1987 CC      R        Cutthroat trout          89     5.6 \n#>  4  1987 CC      R        Cutthroat trout          58     2.15\n#>  5  1987 CC      R        Cutthroat trout          93     6.9 \n#>  6  1987 CC      R        Cutthroat trout          86     5.9 \n#>  7  1987 CC      R        Cutthroat trout         107    10.5 \n#>  8  1987 CC      R        Cutthroat trout         131    20.6 \n#>  9  1987 CC      R        Cutthroat trout         103     9.55\n#> 10  1987 CC      R        Cutthroat trout         117    13   \n#> # ℹ 32,181 more rows\n```\n:::\n\n\n# {.background-no-title .inverse}\n\n![Artwork by [Allison Horst](https://twitter.com/allison_horst)](img/AllisonHorst/ggplot2_exploratory.png){width=60%}\n\n## `ggplot(data)`\n\nThe `ggplot()` function initializes a ggplot object. Every ggplot needs this function.\n\n. . .\n\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-3_76d4703286d1768d590a269f94069b20'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n# or library(tidyverse)\n\nggplot(data = and_vertebrates)\n```\n:::\n\n\n- Empty plot because we did not specify the mapping of data variables\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-4_4decd169941827529bd6a839ba8e132d'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-4-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(x, y)`\n\nThe **aes**thetics define how data variables are mapped plot properties.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-5_c2d26871f28d3b00fa8ef4293d7afebc'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  mapping = aes(\n    x = length_1_mm,\n    y = weight_g\n  )\n)\n```\n:::\n\n\n- Map variable `length_1_mm` to x-axis and `weight_g` to y-axis\n- Default scales are automatically adapted to range of data\n\n:::{.fragment}\n\nThis is the same but shorter:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-6_69617bf1d877b71f5692fa5f6f36deeb'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g\n  )\n)\n```\n:::\n\n\nRemember argument matching by position?\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-7_115ef4e6001e60f8234f82cc31ae65c1'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-7-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_*`\n\n`geoms` define how data points are represented. There are many different geoms to chose from\n\n![from [ggplot cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/master/data-visualization-2.1.pdf)](img/day2/geom_ggplot.png){width=60%}\n\n## `geom_point`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-8_bfc6cfe582a5884e42b5bdcd11a69724'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g\n  )\n) +\n  geom_point()\n```\n:::\n\n\n- New plot layers added with `+`\n- Warning that points could not be plotted due to missing values\n- `data` and `aes` defined in `ggplot` call are inherited to all plot layers\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-9_dc9276f8293f14623645fed7e3509479'}\n\n```\n#> Warning: Removed 13270 rows containing missing values (`geom_point()`).\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-9-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_point`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-10_9510256067b1a21465a9b862f4150ab3'}\n\n```{.r .cell-code}\nggplot() +\n  geom_point(\n    data = and_vertebrates,\n    aes(\n      x = length_1_mm,\n      y = weight_g\n    )\n  )\n```\n:::\n\n\n- `data` and `aes` can also be local to a layer:\n\n:::{.fragment}\n\nHere, it does not make a difference in the result.\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-11_102089372c5d56567073a6598129a3af'}\n\n```\n#> Warning: Removed 13270 rows containing missing values (`geom_point()`).\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-11-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(color)`: mapping color to a variable\n\nLooks like there are two groups of data: **Map color of points to a variable** by adding it to aesthetics:\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-12_07649dcdf95455f23d52a6b038a8fc40'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = species\n  )\n) +\n  geom_point()\n```\n:::\n\n\n- Map the `species` variable to the color aesthetic of the plot\n\n:::  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-13_a6d66ad28fe5c6afdc92e7a0e0e3d90a'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-13-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(size)`: mapping size to a variable\n\nWe can do the same with size:\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-14_97803755fe5cc36ea311eaa7e9038545'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    size = species\n  )\n) +\n  geom_point()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-15_d16a8b3a370567f074d7d21b281e4291'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-15-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(shape)`: mapping shape to a variable\n\nWe can do the same with shape:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-16_3a02e28c687f13ca4381283078f319da'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    shape = species\n  )\n) +\n  geom_point()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-17_3be32ecb7d814c1fe31c2bdddb388770'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-17-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Combine color, size and shape\n\nWe can also combine these aesthetics and map different variables\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-18_377428d75380c790be40b738c5764ff6'}\n\n```{.r .cell-code  code-line-numbers=\"4-6\"}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = unittype,\n    shape = species,\n    size = year\n  )\n) +\n  geom_point()\n```\n:::\n\n\n- This is a bit too much for this plot, but sometimes can be useful\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-19_22160b207b2c80c55db4eef5e06e94d7'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-19-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Changing  the scales of the aesthetics\n\nThe scales onto which the aesthetic elements are mapped can be changed.\n\n:::{.columns} \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-20_ab21f3d6db4ae72dcf70d9ce4cf89a5d'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = species\n  )\n) +\n  geom_point()\n```\n:::\n\n\n- Exponential relationship?\n- How does it look like on the log scale?\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-21_6e1f71f7cae668598d42879b3d11901d'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-21-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_x_log10`\n\nThe scales onto which the aesthetic elements are mapped can be changed.\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-22_6da8599ecadd9ed0e3529dc553aef81b'}\n\n```{.r .cell-code  code-line-numbers=\"6-7\"}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = species\n  )\n) +\n  geom_point() +\n  scale_x_log10() +\n  scale_y_log10()\n```\n:::\n\n\n- Scales can be changed for all elements of `aes`\n- The general format of scale functions are:\n\n:::{.fragment}\n\n<code><b>scale\\_[aes-name]{.highlight-ylw}\\_[scale-type]{.highlight-pink}</b></code>\n\nIn this example we scale the <b>[x]{.highlight-ylw}</b> and the  <b>[y]{.highlight-ylw}</b>  aesthetic to <b>[log10]{.highlight-pink}</b>.\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-23_605e68710a6da1dfab94151654aa2a26'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-23-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_smooth`\n\nAdd a smoothing line that helps see patterns in the data\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-24_a54385ff5a50202106e51cf5a4cf0ac9'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = species\n  )\n) +\n  geom_point(alpha = 0.3) +\n  geom_smooth(method = \"lm\") +\n  scale_x_log10() +\n  scale_y_log10()\n```\n:::\n\n\n- With `method = \"lm\"`, a linear regression line is added\n- All geoms are done separately for the species because color is defined globally\n- Alpha makes the points transparent (0-1 with 0 being invisible)\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-25_a3957d9e2bbe52fb29fd2f53ad9d281d'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-25-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nCompare groups using a boxplot\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-26_3c014c8ebce8325eb581dd39395eaa5e'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = species,\n    y = length_1_mm\n  )\n) +\n  geom_boxplot()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-27_10c79b2ede1d40cd7f515de6bee47f52'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-27-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nCompare groups using a boxplot\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-28_b6031baec2f622f19a9303574184b2cd'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(\n  and_vertebrates,\n  aes(\n    x = species,\n    y = length_1_mm\n  )\n) +\n  geom_boxplot(notch = TRUE)\n```\n:::\n\n\n- If notches don't overlap, the medians of the groups are likely different\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-29_843de55e24dd026b37f4b87056550ae2'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-29-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nMap the `unittype` to the **color** aesthetic of the boxplot\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-30_f2290fa73c30dc36cc7d4e2d6e64bacc'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(\n  and_vertebrates,\n  aes(\n    x = species,\n    y = length_1_mm,\n    color = unittype\n  )\n) +\n  geom_boxplot()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-31_fa055bc460eb8a968717b9718c87b20a'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-31-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nMap the `unittype` to the **fill** aesthetic of the box\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-32_b1dfdaea5b9946de6fe7580ce8a129c3'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(\n  and_vertebrates,\n  aes(\n    x = species,\n    y = length_1_mm,\n    fill = unittype\n  )\n) +\n  geom_boxplot(notch = TRUE)\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-33_597529c09e61ead4053ddeb7ed2ff3d6'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-33-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_histogram`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-34_9cde1c09e39ba7b6ffd0a598d9752a5c'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = length_1_mm,\n    fill = section\n  )\n) +\n  geom_histogram()\n```\n:::\n\n\n- Careful: By default the histogram is stacked for the different groups!\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-35_3e6253d5787a53cbe33db605dd946458'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-35-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_histogram`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-36_ad630cad349fbe00c337c5771ffd8c4f'}\n\n```{.r .cell-code  code-line-numbers=\"5-6\"}\nggplot(\n  and_vertebrates,\n  aes(\n    x = length_1_mm,\n    fill = section\n  )\n) +\n  geom_histogram(\n    position = \"identity\",\n    alpha = 0.5\n  )\n```\n:::\n\n\n- Change the position of the histogram to `\"identity\"`, if you\ndon't want it stacked\n- `alpha` makes sure that you see overlapping areas\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-37_f33474eb10b214eea48e9660c28eddb4'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-37-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_tile`\n\nYou can create a simple heatmap with `geom_tile`\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-38_6995babe6a5dec09f2379cf8c8bba794'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = section,\n    y = species,\n    fill = weight_g\n  )\n) +\n  geom_tile()\n```\n:::\n\n\n- Here we would have to choose a different color scheme to see differences\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-39_a32b23e50bb58b4afe9f41df2e7aaf5e'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-39-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Small multiples with `facet_wrap`\n\nSplit your plots along one variable with `facet_wrap`\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-40_481351781a34f1a068f8d1a3f00fd898'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = species\n  )\n) +\n  geom_point() +\n  facet_wrap(~section)\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-41_6e14e88e4fae61eed8a2c3027ebe6ed2'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-41-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Small multiples with `facet_wrap`\n\nSplit your plots along one variable with `facet_wrap`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-42_3f181db8d0331bf920178d53d3cbe078'}\n\n```{.r .cell-code  code-line-numbers=\"7-8\"}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = species\n  )\n) +\n  geom_point() +\n  facet_wrap(~section,\n    nrow = 2,\n    scales = \"free\"\n  )\n```\n:::\n\n\n- Specify number of rows and columns with `nrow`/`ncol`\n\n- Set separate scales for x and y with `scales`\n  - `\"free\"`: x and y axis are free\n  - `\"free_y\"`: only y-axis is free\n  - `\"free_x\"`: only x-axis is free\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-43_5293136208085a7819fb4aac11a3e607'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-43-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Small multiples with `facet_grid`\n\nSplit your plots along two variables with `facet_grid`\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-44_935f51bbb3be241e4ed39a31e2a65d6e'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = unittype\n  )\n) +\n  geom_point() +\n  facet_grid(section ~ species)\n```\n:::\n\n\n- `facet_grid(rows ~ columns)`\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-45_7b28d33b8c0789d5fa5ad4f9292097ac'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-45-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n# Now you {.inverse}\n\n[Task 1.1 - 1.2 (45 min)]{.highlight-blue}<br>\n\n[Exploratory data analysis with the penguin data set]{.big-text}\n\n**Find the task description [here](https://selinazitrone.github.io/intro-r-data-analysis/sessions/07_ggplot.html)**\n\n(Don't do the \"Beautify\" task)\n\n\n# {.background-no-title .inverse}\n\n![Artwork by [Allison Horst](https://twitter.com/allison_horst)](img/AllisonHorst/ggplot2_masterpiece.png){width=60%}\n\n## Change appearance of points\n\n. . . \n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-46_00188409ce506f0a1a94f5bc3a4a3784'}\n\n```{.r .cell-code  code-line-numbers=\"6-9\"}\nggplot(and_vertebrates, aes(\n  x = length_1_mm,\n  y = weight_g\n)) +\n  geom_point(\n    size = 4,\n    shape = 17,\n    color = \"blue\",\n    alpha = 0.5\n  )\n```\n:::\n\n\n:::{.fragment}\n\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-47_a310dd6eb5f2679920b5a5590470df8e'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-47-1.png){width=576}\n:::\n:::\n\n\n[Shape](http://www.cookbook-r.com/Graphs/Shapes_and_line_types/) and [color](https://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf) codes\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-48_5f1d548775a1e8af52265d5e512eee48'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-48-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Change color scale\n\nWe can also save a plot in a variable\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-49_e335703cf67efdcbc568a0d2b3807144'}\n\n```{.r .cell-code}\ng <- ggplot(and_vertebrates, aes(\n  x = length_1_mm,\n  y = weight_g,\n  color = species\n)) +\n  geom_point()\n\ng\n```\n:::\n\n\n<br>\n\n- Other plot layers can still be added to `g`\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-50_4a600f8c06d4e47b8feb3cafc3d38b54'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-50-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_color_viridis_d`\n\nChange the colors of the color aesthetic:\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-51_95d0a41cef9712a907d995617ea79466'}\n\n```{.r .cell-code}\ng +\n  scale_color_viridis_d(\n    option = \"cividis\"\n  )\n```\n:::\n\n\n<br>\n\n- The viridis color palette is designed for viewers with common forms of color blindness\n- Different options of viridis color palettes: \n`\"magma\"`, `\"inferno\"`, `\"plasma\"`, `\"viridis\"`, `\"cividis\"`\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-52_2d35304d704227ca437d92e34771fa1b'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-52-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_color_manual`\n\nWe can also manually specify colors:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-53_b4cd42880e85d8d1ac4bc095213bd246'}\n\n```{.r .cell-code  code-line-numbers=\"2-7\"}\ng +\n  scale_color_manual(\n    values = c(\n      \"darkolivegreen4\",\n      \"darkorchid3\"\n    )\n  )\n```\n:::\n\n\n- Length of color vector has to match number of levels in your aesthetic\n\n:::{.nonincremental}\n\n:::{.fragment}\n\n- Specify colors \n  - Via their [name](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf)\n  - Via their Hex color codes (use websites to generate your own color palettes, e.g. [here](https://coolors.co/))\n\n:::\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-54_a42b3ed4c7c5fefa6e33b20085c33a8f'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-54-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Other color scales\n\nYou can use the `paletteer` package to access color scales from many packages.<br>\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-55_ba69d01697bd990268d4980f1e33cfd2'}\n\n```{.r .cell-code}\n# install.packages(\"paletteer\")\nlibrary(paletteer)\ng <- g +\n  scale_color_paletteer_d(\n    palette = \"ggsci::default_uchicago\"\n  )\ng\n```\n:::\n\n\n- Use `scale_color_paletteer_d` for discrete and `scale_color_paletteer_c` for\ncontinuous color scales\n- Check out all palettes available [here](https://r-charts.com/color-palettes)\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-56_96154351a77936a63a602c40418d764c'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-56-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_fill_*` vs. `scale_color_*`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-57_792112b2420fb4016118f6cf15f74092'}\n\n```{.r .cell-code  code-line-numbers=\"6,8-10\"}\nggplot(\n  and_vertebrates,\n  aes(\n    x = section,\n    y = length_1_mm,\n    color = unittype\n  )\n) +\n  geom_boxplot() +\n  paletteer::scale_color_paletteer_d(\n    palette = \"ggsci::default_uchicago\"\n  )\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-57-1.png){width=604.8}\n:::\n:::\n\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-58_a56b7ac95a9b62c4954b49b8e31551a5'}\n\n```{.r .cell-code  code-line-numbers=\"6,8-10\"}\nggplot(\n  and_vertebrates,\n  aes(\n    x = section,\n    y = length_1_mm,\n    fill = unittype\n  )\n) +\n  geom_boxplot() +\n  paletteer::scale_fill_paletteer_d(\n    palette = \"ggsci::default_uchicago\"\n  )\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-58-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `labs`: Change axis and legend titles and add plot title\n\n\n\n::: {.cell output-location='slide' hash='ggplot_cache/revealjs/unnamed-chunk-59_2cf1307345432563ee4c7aa909270856'}\n\n```{.r .cell-code  code-line-numbers=\"2-9\"}\ng <- g +\n  labs(\n    x = \"Length [mm]\",\n    y = \"Weight [g]\",\n    color = \"Species\",\n    title = \"Length-Weight relationship\",\n    subtitle = \"There seems to be an exponential relationship\",\n    caption = \"Data from the `lterdatasampler` package\"\n  )\ng\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-59-1.png){width=768}\n:::\n:::\n\n\n## `theme_*`: change appearance\n\n`ggplot2` offers many pre-defined themes that we can apply to change the appearance of a plot.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-60_28014522621f18a5264d7b51c5e1a9ab'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng +\n  theme_classic()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-61_d04c09b9523874d6f78597564eda6e88'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-61-1.png){width=604.8}\n:::\n:::\n\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-62_628f25cb70623adb77fe21767b40f113'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng +\n  theme_bw()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-63_25478b0625e99da53959d7a763b18ebd'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-63-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `theme_*`: change appearance\n\n`ggplot2` offers many pre-defined themes that we can apply to change the appearance of a plot.\n\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-64_59fa20a404cead86d73b8c5db3343f3c'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng +\n  theme_minimal()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-65_6dde7c8734fe56bc88ea5c4027114ac3'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-65-1.png){width=604.8}\n:::\n:::\n\n\n:::  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-66_f80a4e488be03ba16faf64943b01ea67'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng +\n  theme_dark()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-67_3a548441dba2d9e5715c684d0301bf84'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-67-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `theme()`: customize theme\n\nYou can manually change a theme or even create an entire theme yourself. \nThe elements you can control in the theme are:\n\n:::{.nonincremental}\n\n- titles (plot, axis, legend, ...)\n- labels\n- background\n- borders\n- grid lines\n- legends\n\n:::\n\n:::{.fragment}\n\nIf you want a full list of what you can customize, have a look at \n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-68_0e3538fa24472b75993942eb8e9ecabd'}\n\n```{.r .cell-code}\n?theme\n```\n:::\n\n\n- Look [here](https://github.com/claragranell/ggplot2/blob/main/ggplot_theme_system_cheatsheet.pdf) for an overview of the elements that you can change and the corresponding functions\n\n:::\n\n## `theme()`: customize theme\n\nTo edit a theme, just add another `theme()` layer to your plot.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-69_3d662a3831d61cc21bc0ca0b45cda8f4'}\n\n```{.r .cell-code  code-line-numbers=\"3-10\"}\ng +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    axis.text = element_text(\n      face = \"bold\"\n    ),\n    plot.background = element_rect(\n      fill = \"lightgrey\",\n      color = \"darkred\"\n    )\n  )\n```\n:::\n\n\n:::{.fragment}\n\nThe basic functioning of theme elements is:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-70_e65cab5bc1330560b7d2c189ba92dd65'}\n\n```{.r .cell-code}\ntheme(\n  element_name = element_function()\n)\n```\n:::\n\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-71_9e6ce03be823608cf8b4fd0bbe0d083b'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-71-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `theme_set()`: set global theme\n\nYou can set a global theme that will be applied to all ggplot objects in the current R session. \n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-72_f6cf7319856aa4ce4cdde7eea71e336e'}\n\n```{.r .cell-code}\n# Globally set theme_minimal as the default theme\ntheme_set(theme_minimal())\n```\n:::\n\n\nAdd this to the beginning of your script.\n\n. . .\n\nYou can also specify some defaults, e.g. the text size:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-73_cc4aadbb0c3a4f67bfcd7fad065d8233'}\n\n```{.r .cell-code}\ntheme_set(theme_minimal(base_size = 16))\n```\n:::\n\n\nThis is very practical if you want to achieve a consistent look, e.g. for a scientific journal.\n\n## `ggsave()`\n\nA ggplot object can be saved on disk in different formats.\n\nWithout specifications:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-74_924a5159ca12057d896ad4a7d0769409'}\n\n```{.r .cell-code}\n# save plot g in img as my_plot.pdf\nggsave(filename = \"img/my_plot.pdf\", plot = g)\n# save plot g in img as my_plot.png\nggsave(filename = \"img/my_plot.png\", plot = g)\n```\n:::\n\n\n. . .\n\nOr with specifications:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-75_0278162d65026fd181a088bf3ff1189f'}\n\n```{.r .cell-code}\n# save a plot named g in the img directory under the name my_plot.png\n# with width 16 cm and height 9 cm\nggsave(\n  filename = \"img/my_plot.png\",\n  plot = g,\n  width = 16,\n  heigth = 9,\n  units = \"cm\"\n)\n```\n:::\n\n\nHave a look at `?ggsave` to see all options.\n\n\n# Now you {.inverse}\n\n[Task 2 (30 min)]{.highlight-blue}<br>\n\n[Make your penguin plots more beautiful]{.big-text}\n\n**Find the task description [here](https://selinazitrone.github.io/intro-r-data-analysis/sessions/07_ggplot.html#beautify-the-plots)**\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}