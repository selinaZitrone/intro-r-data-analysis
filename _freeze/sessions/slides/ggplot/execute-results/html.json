{
  "hash": "e80ccfb734bb3c726dd653577930aec6",
  "result": {
    "markdown": "---\ntitle: \"Data visualization with ggplot2\"\nsubtitle: \"Day 2 - Introduction to Data Analysis with R\"\nauthor: \"Selina Baldauf\"\ninstitute: \"Freie Universität Berlin - Theoretical Ecology\"\ndate: today\ndate-format: long\nformat: \n  revealjs:\n    footer: \"Selina Baldauf // Data visualization with ggplot2\"\n    highlight-style: breeze\n    mainfont: Cabinet Grotesk\n    slide-number: true\n    show-slide-number: all\n    incremental: true\n    self-contained: true\n    code-line-numbers: true\n    auto-stretch: false\n    scrollable: false\n    theme: slides.scss\n    fig-align: center\n    fig-width: 6.3\n    fig-height: 6.3\nexecute: \n  echo: true\n  warning: false\n  message: false\n  cache: true\nknitr: \n  opts_chunk: \n    collapse: true\n    comment: \"#>\"\nfrom: markdown+emoji\ntitle-slide-attributes: \n  data-background-image: img/hex-stickers/ggplot2.png\n  data-background-position: 90% 85%\n  data-background-size: \"20%\"\n---\n\n\n\n\n# A ggplot showcase{.inverse}\n\n> Example plots you can create with ggplot\n\n## A ggplot showcase\n\n![Visualization by [Jake Kaupp](https://twitter.com/jakekaupp), code available on [Github](https://github.com/jkaupp/tidytuesdays/tree/master/2021/week27)](https://raw.githubusercontent.com/jkaupp/tidytuesdays/master/2021/week27/tw27_plot.png)\n\n\n## A ggplot showcase\n\n![Visualizations produced by the [BBC News data team](https://github.com/bbc/bbplot)](https://raw.githubusercontent.com/bbc/bbplot/master/chart_examples/bbplot_example_plots.png)\n\n## A ggplot showcase\n\n![Visualization by [Cédric Scherer](https://twitter.com/CedScherer), code available on [Github](https://github.com/z3tt/TidyTuesday/blob/master/R/2020_31_PalmerPenguins.Rmd)](https://raw.githubusercontent.com/Z3tt/TidyTuesday/master/plots/2020_31/2020_31_PalmerPenguins.png){width=20%}\n\n## Advantages of ggplot\n\n- **Consistent** grammar/structure\n- **Flexible** structure allows you to produce any type of plots\n- Highly **customizable appearance** (themes)\n\n:::{.nonincremental}\n\n- Many **extension packages** that provide \n  - Additional plot types\n\t- Additional themes and colors\n\t- Animation\n\t- Composition of multiple plots\n\t- ...\n\n:::\n\n- Active community that provides help and inspiration\n- Perfect package for **exploratory data analysis** and **beautiful plots**\n\n## The data\n\nData set `and_vertebrates` with measurements of a trout and 2 salamander species in different forest sections.\n\n:::{.columns}\n\n:::{.column width=\"60%\"}\n\n::: {.nonincremental}\n\n::: {.small}\n\n- `year`: observation year\n- `section`: CC (clear cut forest) or OG (old growth forest)\n- `unittype`: channel classification (C = Cascade, P = Pool, ...)\n- `species`: Species measured\n- `length_1_mm`: body length [mm]\n- `weight_g`: body weight [g]\n\n:::\n\n:::\n\n:::{.aside}\nReferences: [Kaylor, M.J. and D.R. Warren. (2017)](https://doi.org/10.1002/ecs2.1845) and<br>[Gregory, S.V. and I. Arismendi. (2020)](https://doi.org/10.6073/pasta/7c78d662e847cdbe33584add8f809165) as provided in the <br>[lterdatasampler package](https://lter.github.io/lterdatasampler/).\n\n:::\n\n:::\n\n:::{.column width=\"40%\"}\n\n![Coastal giant salamander (terrestrial form)<br>Andrews Forest Program by Lina DiGregorio via CC-BY from [https://andrewsforest.oregonstate.edu](https://andrewsforest.oregonstate.edu)](https://andrewsforest.oregonstate.edu/sites/default/files/gallery/afb_037.jpg){width=60%}\n\n:::\n\n:::\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-1_34e5bb63b34bd51ee270f3701a490934'}\n\n:::\n\n\n## The data\n\nData set `and_vertebrates` with measurements of a trout and 2 salamander species in different forest sections.\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-2_ccc8a26d1cf95de78a1aaef546a24f19'}\n\n```{.r .cell-code}\nlibrary(lterdatasampler)\nand_vertebrates\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-3_1a2bdf1f0f558831c81920ab3191fb31'}\n\n```\n#> # A tibble: 32,191 × 6\n#>     year section unittype species         length_1_mm weight_g\n#>    <dbl> <chr>   <chr>    <chr>                 <dbl>    <dbl>\n#>  1  1987 CC      R        Cutthroat trout          58     1.75\n#>  2  1987 CC      R        Cutthroat trout          61     1.95\n#>  3  1987 CC      R        Cutthroat trout          89     5.6 \n#>  4  1987 CC      R        Cutthroat trout          58     2.15\n#>  5  1987 CC      R        Cutthroat trout          93     6.9 \n#>  6  1987 CC      R        Cutthroat trout          86     5.9 \n#>  7  1987 CC      R        Cutthroat trout         107    10.5 \n#>  8  1987 CC      R        Cutthroat trout         131    20.6 \n#>  9  1987 CC      R        Cutthroat trout         103     9.55\n#> 10  1987 CC      R        Cutthroat trout         117    13   \n#> # ℹ 32,181 more rows\n```\n:::\n\n\n# {.background-no-title .inverse}\n\n![Artwork by [Allison Horst](https://twitter.com/allison_horst)](img/AllisonHorst/ggplot2_exploratory.png){width=60%}\n\n## `ggplot(data)`\n\nThe `ggplot()` function initializes a ggplot object. Every ggplot needs this function.\n\n. . .\n\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-4_cc7e34bc5dae98050b9537a03a59471b'}\n\n```{.r .cell-code}\nlibrary(ggplot2) # or library(tidyverse)\n\nggplot(data = and_vertebrates)\n```\n:::\n\n\n- Empty plot because we did not specify the mapping of data variables\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-5_0bbc6278b31e2c3242e61e7e06de8629'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-5-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(x, y)`\n\nThe **aes**thetics define how data variables are mapped plot properties.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-6_034ef4b7df55f99fd9e1497aef2dbe54'}\n\n```{.r .cell-code}\nggplot(data = and_vertebrates,\n       mapping = aes(\n         x = length_1_mm, \n         y = weight_g))\n```\n:::\n\n\n- Map variable `length_1_mm` to x-axis and `weight_g` to y-axis\n- Default scales are automatically adapted to range of data\n\n:::{.fragment}\n\nThis is the same but shorter:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-7_35855baa95f32168941557121750ca74'}\n\n```{.r .cell-code}\nggplot(and_vertebrates, \n       aes(x = length_1_mm,\n           y = weight_g))\n```\n:::\n\n\nRemember argument matching by position?\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-8_8780d4cfff5d064e76175eaa2617740f'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-8-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_*`\n\n`geoms` define how data points are represented. There are many different geoms to chose from\n\n![from [ggplot cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/master/data-visualization-2.1.pdf)](img/day2/geom_ggplot.png){width = 70%}\n\n## `geom_point`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-9_5ac43074330708343c934b9832ce7549'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g)) +\n  geom_point()\n```\n:::\n\n\n- New plot layers added with `+`\n- Warning that points could not be plotted due to missing values\n- `data` and `aes` defined in `ggplot` call are inherited to all plot layers\n- `data` and `aes` can be local to a layer:\n\n:::{.fragment}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-10_3354f4266eed46a5f7328520fba86dfc'}\n\n```{.r .cell-code}\nggplot() +\n  geom_point(\n    data = and_vertebrates,\n    aes(\n      x = length_1_mm,\n      y = weight_g\n    ))\n```\n:::\n\n\nHere, it does not make a difference.\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-11_d4901398b9e9289194e8ed80a1222c0b'}\n\n```\n#> Warning: Removed 13270 rows containing missing values (`geom_point()`).\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-11-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(color)`: mapping color to a variable\n\nLooks like there are two groups of data: **Map color of points to a variable** by adding it to aesthetics:\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-12_30adf95d50fc6b7c8d7f549488b6d0c2'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) +\n  geom_point()\n```\n:::\n\n\n- Map the `species` variable to the color aesthetic of the plot\n\n:::  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-13_ca20fceb00ecee4785776db580a45990'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-13-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(size)`: mapping size to a variable\n\nWe can do the same with size:\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-14_54ebfd75837c466208d7c4cab9393714'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           size = species)) +\n  geom_point()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-15_8bac66b82790bd1a517963797ba18a7e'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-15-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(shape)`: mapping shape to a variable\n\nWe can do the same with shape:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-16_fa2a0f388254108339e89dd38cac6d3f'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           shape = species)) +\n  geom_point()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-17_f4cc6cf94ee75207dfb1ec7740a22e2e'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-17-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Combine color, size and shape\n\nWe can also combine these aesthetics and map different variables\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-18_8dc6d7b0215b652e2393889b6b055cba'}\n\n```{.r .cell-code  code-line-numbers=\"4-6\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = unittype,\n           shape = species,\n           size = year)) +\n  geom_point()\n```\n:::\n\n\n- This is a bit too much for this plot, but sometimes can be useful\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-19_fd6ba901f4bcbcc002218fe5509c186e'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-19-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Changing  the scales of the aesthetics\n\nThe scales onto which the aesthetic elements are mapped can be changed.\n\n:::{.columns} \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-20_a542e2027c2daca114ce088a14776f49'}\n\n```{.r .cell-code}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point()\n```\n:::\n\n\n- Exponential relationship?\n- How does it look like on the log scale?\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-21_889f8acb291db70f778212251e2cc8ab'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-21-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_x_log10`\n\nThe scales onto which the aesthetic elements are mapped can be changed.\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-22_128fdb5ddeb6ffeeb6d5c20144c09c64'}\n\n```{.r .cell-code  code-line-numbers=\"6-7\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point() +\n  scale_x_log10() +\n  scale_y_log10()\n```\n:::\n\n\n- Scales can be changed for all elements of `aes`\n- The general format of scale functions are:\n\n:::{.fragment}\n\n<code><b>scale\\_[aes-name]{.highlight-ylw}\\_[scale-type]{.highlight-pink}</b></code>\n\nIn this example we scale the <b>[x]{.higlight-ylw}</b> and the  <b>[y]{.higlight-ylw}</b>  aesthetic to <b>[log10]{.highlight-pink}</b>.\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-23_55e16fdebe7016bd531e682af3d4ff8d'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-23-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_smooth`\n\nAdd a smoothing line that helps see patterns in the data\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-24_6eca42a44b3501d9cb6febdfc8b0cedc'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point(alpha = 0.3) +\n  geom_smooth(method = \"lm\") +\n  scale_x_log10() + \n  scale_y_log10()\n```\n:::\n\n\n- With `method = \"lm\"`, a linear regression line is added\n- All geoms are done separately for the species because color is defined globally\n- Alpha makes the points transparent (0-1 with 0 being invisible)\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-25_d277bf9a79215c8f0e1d6c0d23a9d34d'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-25-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nCompare groups using a boxplot\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-26_dda6182eade3507b583f102448f2d41f'}\n\n```{.r .cell-code}\nggplot(and_vertebrates, \n       aes(x = species, \n           y = length_1_mm)) +\n  geom_boxplot()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-27_c78894939aee49e1b4775150906abf51'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-27-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nCompare groups using a boxplot\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-28_5a9b0e14f571070d4ce90210ea9ff2ae'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(and_vertebrates, \n       aes(x = species, \n           y = length_1_mm)) +\n  geom_boxplot(notch = TRUE)\n```\n:::\n\n\n- If notches don't overlap, the medians of the groups are likely different\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-29_4f7c6a0db49130cca0c005fbcdf2ed0a'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-29-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nMap the `unittype` to the **color** aesthetic of the boxplot\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-30_c2643a9ad8b47b7a4b2abb4ef42094d2'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(and_vertebrates, \n       aes(x = species, \n           y = length_1_mm,\n           color = unittype)) +\n  geom_boxplot() \n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-31_e9869fb530c97f6bcfe7b3b758770545'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-31-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nMap the `unittype` to the **fill** aesthetic of the box\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-32_6278321507fa8470cf534dbb94562805'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(and_vertebrates, \n       aes(x = species, \n           y = length_1_mm,\n           fill = unittype)) +\n  geom_boxplot(notch = TRUE) \n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-33_1866b33b48f8cd5636db531a66ac9aa6'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-33-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_histogram`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-34_f2d5a59a722c65ade84c2895b8e4bee0'}\n\n```{.r .cell-code}\nggplot(and_vertebrates, \n       aes(x = length_1_mm, \n           fill = section)) +\n  geom_histogram()\n```\n:::\n\n\n- Careful: By default the histogram is stacked for the different groups!\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-35_349f3527b76a5a95c22161324c4bc2a4'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-35-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_histogram`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-36_2fc90711e937bbfe98b09af8ddf508fb'}\n\n```{.r .cell-code  code-line-numbers=\"5-6\"}\nggplot(and_vertebrates, \n       aes(x = length_1_mm, \n           fill = section)) +\n  geom_histogram(\n    position = \"identity\",\n    alpha = 0.5\n    )\n```\n:::\n\n\n- Change the position of the histogram to `\"identity\"`, if you\ndon't want it stacked\n- `alpha` makes sure that you see overlapping areas\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-37_ad50d85ea8e11588a7c626a7760a01af'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-37-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_tile`\n\nYou can create a simple heatmap with `geom_tile`\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-38_cdb34a9266cead550b5ced25327ca071'}\n\n```{.r .cell-code}\nggplot(and_vertebrates, \n       aes(x = section,\n           y = species,\n           fill = weight_g)) +\n  geom_tile()\n```\n:::\n\n\n- Here we would have to choose a different color scheme to see differences\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-39_e9bf861b412dbd7e54e5aff3c5361a6e'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-39-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Small multiples with `facet_wrap`\n\nSplit your plots along one variable with `facet_wrap`\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-40_269dc27622aa899b7253850f4e9deecb'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point() +\n  facet_wrap(~section)\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-41_1e1d357b8f63ea9a2c000ddd0af6a05a'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-41-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Small multiples with `facet_wrap`\n\nSplit your plots along one variable with `facet_wrap`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-42_1c7761da6341711a2683904c6911d566'}\n\n```{.r .cell-code  code-line-numbers=\"7-8\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point() +\n  facet_wrap(~section, \n             nrow = 2,\n             scales = \"free\")\n```\n:::\n\n\n- Specify number of rows and columns with `nrow`/`ncol`\n\n:::{.nonincremental}\n\n- Set separate scales for x and y with `scales`\n  - `\"free\"`: x and y axis are free\n  - `\"free_y\"`: only y-axis is free\n  - `\"free_x\"`: only x-axis is free\n\n:::\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-43_a732337f3e2c00e6421bf3d0de7b34c6'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-43-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Small multiples with `facet_grid`\n\nSplit your plots along two variables with `facet_grid`\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-44_8416c58fc5775ef83577d251a0d90539'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = unittype)) + \n  geom_point() +\n  facet_grid(section ~ species)\n```\n:::\n\n\n- `facet_grid(rows ~ columns)`\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-45_523435671ef4000866f467a646a08f9f'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-45-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n# Now you {.inverse}\n\n[Task 1.1 - 1.3 (45 min)]{.highlight-blue}<br>\n\n[Exploratory data analysis with the penguin data set]{.big-text}\n\n**Find the task description [here](https://selinazitrone.github.io/intro-r-data-analysis/sessions/07_ggplot.html)**\n\n\n# {.background-no-title .inverse}\n\n![Artwork by [Allison Horst](https://twitter.com/allison_horst)](img/AllisonHorst/ggplot2_masterpiece.png){width=60%}\n\n## Change appearance of points\n\n. . . \n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-46_00188409ce506f0a1a94f5bc3a4a3784'}\n\n```{.r .cell-code  code-line-numbers=\"6-9\"}\nggplot(and_vertebrates, aes(\n  x = length_1_mm,\n  y = weight_g\n)) +\n  geom_point(\n    size = 4,\n    shape = 17,\n    color = \"blue\",\n    alpha = 0.5\n  )\n```\n:::\n\n\n:::{.fragment}\n\n- [shape](http://www.cookbook-r.com/Graphs/Shapes_and_line_types/) and [color](https://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf) codes:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-47_0da655a267e15060d500108b7923c0d5'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-47-1.png){width=604.8}\n:::\n:::\n\n\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-48_5f1d548775a1e8af52265d5e512eee48'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-48-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Change color scale\n\nWe can also save a plot in a variable\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-49_1c6de40b4b7824eef1adc43ff056c22b'}\n\n```{.r .cell-code}\ng <- ggplot(and_vertebrates, aes(\n  x = length_1_mm,\n  y = weight_g,\n  color = species\n)) +\n  geom_point()\ng\n```\n:::\n\n\n- Other plot layers can still be added to `g`\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-50_4a600f8c06d4e47b8feb3cafc3d38b54'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-50-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_color_viridis_d`\n\nChange the colors of the color aesthetic:\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-51_95d0a41cef9712a907d995617ea79466'}\n\n```{.r .cell-code}\ng +\n  scale_color_viridis_d(\n    option = \"cividis\"\n  )\n```\n:::\n\n\n<br>\n\n- The viridis color palette is designed for viewers with common forms of color blindness\n- Different options of viridis color palettes: \n`\"magma\"`, `\"inferno\"`, `\"plasma\"`, `\"viridis\"`, `\"cividis\"`\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-52_2d35304d704227ca437d92e34771fa1b'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-52-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_color_manual`\n\nWe can also manually specify colors:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-53_b4cd42880e85d8d1ac4bc095213bd246'}\n\n```{.r .cell-code  code-line-numbers=\"2-7\"}\ng +\n  scale_color_manual(\n    values = c(\n      \"darkolivegreen4\",\n      \"darkorchid3\"\n    )\n  )\n```\n:::\n\n\n<br>\n\n- Length of color vector has to match number of levels in your aesthetic\n\n:::{.nonincremental}\n\n- Specify colors \n  - Via their [name](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf)\n  - Via their Hex color codes (use websites to generate your own color palettes, e.g. [here](https://coolors.co/))\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-54_a42b3ed4c7c5fefa6e33b20085c33a8f'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-54-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Other color scales\n\nYou can use the `paletteer` package to access color scales from many packages.<br>\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-55_ba69d01697bd990268d4980f1e33cfd2'}\n\n```{.r .cell-code}\n# install.packages(\"paletteer\")\nlibrary(paletteer)\ng <- g +\n  scale_color_paletteer_d(\n    palette = \"ggsci::default_uchicago\"\n  )\ng\n```\n:::\n\n\n- Use `scale_color_paletteer_d` for discrete and `scale_color_paletteer_c` for\ncontinuous color scales\n- Check out all palettes available [here](https://r-charts.com/color-palettes)\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-56_96154351a77936a63a602c40418d764c'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-56-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_fill_*` vs. `scale_color_*`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-57_300193b706cbc668c27364a8523b654f'}\n\n```{.r .cell-code  code-line-numbers=\"6,8-10\"}\nggplot(\n  and_vertebrates,\n  aes(\n    x = section,\n    y = length_1_mm,\n    color = unittype )) +\n  geom_boxplot() +\n  paletteer::scale_color_paletteer_d( \n    palette = \"ggsci::default_uchicago\"\n  )\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-57-1.png){width=604.8}\n:::\n:::\n\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-58_8b383076bde1a73d16ebe8c73d473bcb'}\n\n```{.r .cell-code  code-line-numbers=\"6,8-10\"}\nggplot(\n  and_vertebrates,\n  aes(\n    x = section,\n    y = length_1_mm,\n    fill = unittype )) + \n  geom_boxplot() +\n  paletteer::scale_fill_paletteer_d( \n    palette = \"ggsci::default_uchicago\"\n  )\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-58-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `labs`: Change axis and legend titles and add plot title\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-59_602b720f1e9d259c6ed2f8ed3eee2a5f'}\n\n```{.r .cell-code  code-line-numbers=\"2-9\"}\ng <- g +\n  labs(\n    x = \"Length [mm]\", \n    y = \"Weight [g]\",\n    color = \"Species\", \n    title = \"Length-Weight relationship\",\n    subtitle = \"There seems to be an exponential relationship\", \n    caption = \"Data from the `lterdatasampler` package\"\n  ) \ng\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-59-1.png){width=604.8}\n:::\n:::\n\n\n## `theme_*`: change appearance\n\n`ggplot2` offers many pre-defined themes that we can apply to change the appearance of a plot.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-60_0089e4d6c4aa849602581b2264cc769e'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng + \n  theme_classic()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-61_d9e3821d77e1903db2b446ad91843100'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-61-1.png){width=604.8}\n:::\n:::\n\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-62_28faf542a89edb1852f4ed82ac14072e'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng + \n  theme_bw()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-63_3bb50da73583efe53274526816e7566b'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-63-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `theme_*`: change appearance\n\n`ggplot2` offers many pre-defined themes that we can apply to change the appearance of a plot.\n\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-64_bd197ea2ea5e876307916bd1d07f0023'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng + \n  theme_minimal()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-65_ec7a1dabc36a9c7a11a456af0516eb95'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-65-1.png){width=604.8}\n:::\n:::\n\n\n:::  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-66_626a83251dc1be339bfdf4f336e5825e'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng + \n  theme_dark()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-67_9db91e4c7068c1150e63ba6ba45235bd'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-67-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `theme()`: customize theme\n\nYou can manually change a theme or even create an entire theme yourself. \nThe elements you can control in the theme are:\n\n:::{.nonincremental}\n\n- titles (plot, axis, legend, ...)\n- labels\n- background\n- borders\n- grid lines\n- legends\n\n:::\n\n:::{.fragment}\n\nIf you want a full list of what you can customize, have a look at \n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-68_0e3538fa24472b75993942eb8e9ecabd'}\n\n```{.r .cell-code}\n?theme\n```\n:::\n\n\n- Look [here](https://github.com/claragranell/ggplot2/blob/main/ggplot_theme_system_cheatsheet.pdf) for an overview of the elements that you can change and the corresponding functions\n\n:::\n\n## `theme()`: customize theme\n\nTo edit a theme, just add another `theme()` layer to your plot.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-69_083afd6354dcbbdd35a6f18e08cdf782'}\n\n```{.r .cell-code  code-line-numbers=\"3-10\"}\ng + \n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    axis.text = element_text(face = \"bold\"),\n    plot.background = element_rect(\n      fill = \"lightgrey\",\n      color = \"darkred\"\n    )\n  )\n```\n:::\n\n\n:::{.fragment}\n\nThe basic functioning of theme elements is:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-70_e65cab5bc1330560b7d2c189ba92dd65'}\n\n```{.r .cell-code}\ntheme(\n  element_name = element_function()\n)\n```\n:::\n\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-71_2dd00bcda21caba70c24fc5eed35fdb4'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-71-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `theme_set()`: set global theme\n\nYou can set a global theme that will be applied to all ggplot objects in the current R session. \n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-72_f6cf7319856aa4ce4cdde7eea71e336e'}\n\n```{.r .cell-code}\n# Globally set theme_minimal as the default theme\ntheme_set(theme_minimal())\n```\n:::\n\n\n<br>\n\nAdd this to the beginning of your script.\n\n. . .\n\nYou can also specify some defaults, e.g. the text size:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-73_cc4aadbb0c3a4f67bfcd7fad065d8233'}\n\n```{.r .cell-code}\ntheme_set(theme_minimal(base_size = 16))\n```\n:::\n\n\nThis is very practical if you want to achieve a consistent look, e.g. for a scientific journal.\n\n## `ggsave()`\n\nA ggplot object can be saved on disk in different formats.\n\nWithout specifications:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-74_924a5159ca12057d896ad4a7d0769409'}\n\n```{.r .cell-code}\n# save plot g in img as my_plot.pdf\nggsave(filename = \"img/my_plot.pdf\", plot = g)\n# save plot g in img as my_plot.png\nggsave(filename = \"img/my_plot.png\", plot = g)\n```\n:::\n\n\n. . .\n\nOr with specifications:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-75_5e26eabe36a3d8288ec2b0a50ba7fe4e'}\n\n```{.r .cell-code}\n# save a plot named g in the img directory under the name my_plot.png\n# with width 16 cm and height 9 cm\nggsave(filename = \"img/my_plot.png\",\n       plot = g,\n       width = 16,\n       heigth = 9,\n       units = \"cm\")\n```\n:::\n\n\nHave a look at `?ggsave` to see all options.\n\n\n# Now you {.inverse}\n\n[Task 2 (30 min)]{.highlight-blue}<br>\n\n[Make your penguin plots more beautiful]{.big-text}\n\n**Find the task description [here](https://selinazitrone.github.io/intro-r-data-analysis/sessions/07_ggplot.html#beautify-the-plots)**\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}