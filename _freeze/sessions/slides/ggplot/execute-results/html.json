{
  "hash": "988c60604f6fc09db5a5f782c7bee584",
  "result": {
    "markdown": "---\ntitle: \"Data visualization with ggplot2\"\nsubtitle: \"Day 2 - Introduction to Data Analysis with R\"\nauthor: \"Selina Baldauf\"\ninstitute: \"Freie Universität Berlin - Theoretical Ecology\"\ndate: today\ndate-format: long\nformat: \n  revealjs:\n    footer: \"Selina Baldauf // Data visualization with ggplot2\"\n    highlight-style: breeze\n    mainfont: Cabinet Grotesk\n    slide-number: true\n    show-slide-number: all\n    incremental: true\n    self-contained: true\n    code-line-numbers: true\n    auto-stretch: false\n    scrollable: false\n    theme: slides.scss\n    fig-align: center\n    fig-width: 6.3\n    fig-height: 6.3\nexecute: \n  echo: true\n  warning: false\n  message: false\n  cache: true\nknitr: \n  opts_chunk: \n    collapse: true\n    comment: \"#>\"\nfrom: markdown+emoji\ntitle-slide-attributes: \n  data-background-image: img/hex-stickers/ggplot2.png\n  data-background-position: 90% 85%\n  data-background-size: \"20%\"\n---\n\n\n\n\n# A ggplot showcase{.inverse}\n\n> Example plots you can create with ggplot\n\n## A ggplot showcase\n\n![Visualization by [Jake Kaupp](https://twitter.com/jakekaupp), code available on [Github](https://github.com/jkaupp/tidytuesdays/tree/master/2021/week27)](https://raw.githubusercontent.com/jkaupp/tidytuesdays/master/2021/week27/tw27_plot.png)\n\n\n## A ggplot showcase\n\n![Visualizations produced by the [BBC News data team](https://github.com/bbc/bbplot)](https://raw.githubusercontent.com/bbc/bbplot/master/chart_examples/bbplot_example_plots.png)\n\n## A ggplot showcase\n\n![Visualization by [Cédric Scherer](https://twitter.com/CedScherer), code available on [Github](https://github.com/z3tt/TidyTuesday/blob/master/R/2020_31_PalmerPenguins.Rmd)](https://raw.githubusercontent.com/Z3tt/TidyTuesday/master/plots/2020_31/2020_31_PalmerPenguins.png){width=20%}\n\n## Advantages of ggplot\n\n- **Consistent** grammar/structure\n- **Flexible** structure allows you to produce any type of plots\n- Highly **customizable appearance** (themes)\n\n:::{.nonincremental}\n\n- Many **extension packages** that provide \n  - Additional plot types\n\t- Additional themes and colors\n\t- Animation\n\t- Composition of multiple plots\n\t- ...\n\n:::\n\n- Active community that provides help and inspiration\n- Perfect package for **exploratory data analysis** and **beautiful plots**\n\n## The data\n\nData set `and_vertebrates` with measurements of a trout and 2 salamander species in different forest sections.\n\n:::{.columns}\n\n:::{.column width=\"60%\"}\n\n::: {.nonincremental}\n\n::: {.small}\n\n- `year`: observation year\n- `section`: CC (clear cut forest) or OG (old growth forest)\n- `unittype`: channel classification (C = Cascade, P = Pool, ...)\n- `species`: Species measured\n- `length_1_mm`: body length [mm]\n- `weight_g`: body weight [g]\n\n:::\n\n:::\n\n:::{.aside}\nReferences: [Kaylor, M.J. and D.R. Warren. (2017)](https://doi.org/10.1002/ecs2.1845) and<br>[Gregory, S.V. and I. Arismendi. (2020)](https://doi.org/10.6073/pasta/7c78d662e847cdbe33584add8f809165) as provided in the <br>[lterdatasampler package](https://lter.github.io/lterdatasampler/).\n\n:::\n\n:::\n\n:::{.column width=\"40%\"}\n\n![Coastal giant salamander (terrestrial form)<br>Andrews Forest Program by Lina DiGregorio via CC-BY from [https://andrewsforest.oregonstate.edu](https://andrewsforest.oregonstate.edu)](https://andrewsforest.oregonstate.edu/sites/default/files/gallery/afb_037.jpg){width=60%}\n\n:::\n\n:::\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-1_34e5bb63b34bd51ee270f3701a490934'}\n\n:::\n\n\n## The data\n\nData set `and_vertebrates` with measurements of a trout and 2 salamander species in different forest sections.\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-2_abaab87b999b51a2e9f5bcf38b7bc770'}\n\n```{.r .cell-code}\nand_vertebrates\n#> # A tibble: 32,191 × 6\n#>     year section unittype species         length_1_mm weight_g\n#>    <dbl> <chr>   <chr>    <chr>                 <dbl>    <dbl>\n#>  1  1987 CC      R        Cutthroat trout          58     1.75\n#>  2  1987 CC      R        Cutthroat trout          61     1.95\n#>  3  1987 CC      R        Cutthroat trout          89     5.6 \n#>  4  1987 CC      R        Cutthroat trout          58     2.15\n#>  5  1987 CC      R        Cutthroat trout          93     6.9 \n#>  6  1987 CC      R        Cutthroat trout          86     5.9 \n#>  7  1987 CC      R        Cutthroat trout         107    10.5 \n#>  8  1987 CC      R        Cutthroat trout         131    20.6 \n#>  9  1987 CC      R        Cutthroat trout         103     9.55\n#> 10  1987 CC      R        Cutthroat trout         117    13   \n#> # ℹ 32,181 more rows\n```\n:::\n\n\n# {.background-no-title .inverse}\n\n![Artwork by [Allison Horst](https://twitter.com/allison_horst)](img/AllisonHorst/ggplot2_exploratory.png){width=60%}\n\n## `ggplot(data)`\n\nThe `ggplot()` function initializes a ggplot object. Every ggplot needs this function.\n\n. . .\n\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-3_8fa64f81d135265d98bb9bc642893f1a'}\n\n```{.r .cell-code}\nlibrary(ggplot2) # or library(tidyverse)\n\nggplot(data = and_vertebrates)\n```\n:::\n\n\n- Empty plot because we did not specify the mapping of data variables\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-4_4decd169941827529bd6a839ba8e132d'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-4-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(x, y)`\n\nThe **aes**thetics define how data variables are mapped plot properties.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-5_fe4fb0d25c885ad4abd3b51d56e8073a'}\n\n```{.r .cell-code}\nggplot(data = and_vertebrates,\n       mapping = aes(\n         x = length_1_mm, \n         y = weight_g))\n```\n:::\n\n\n- Map variable `length_1_mm` to x-axis and `weight_g` to y-axis\n- Default scales are automatically adapted to range of data\n\n:::{.fragment}\n\nThis is the same but shorter:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-6_f461550592e448ce3c13e596c7964154'}\n\n```{.r .cell-code}\nggplot(and_vertebrates, \n       aes(x = length_1_mm,\n           y = weight_g))\n```\n:::\n\n\nRemember argument matching by position?\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-7_ab7809c9bf82ed95b19fa5a7c30895a1'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-7-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_*`\n\n`geoms` define how data points are represented. There are many different geoms to chose from\n\n![from [ggplot cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/master/data-visualization-2.1.pdf)](img/day2/geom_ggplot.png){width = 70%}\n\n## `geom_point`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-8_c2ed91344318a1db69aa0ba5d2b39dd4'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g)) +\n  geom_point()\n```\n:::\n\n\n- New plot layers added with `+`\n- Warning that points could not be plotted due to missing values\n- `data` and `aes` defined in `ggplot` call are inherited to all plot layers\n- `data` and `aes` can be local to a layer:\n\n:::{.fragment}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-9_0e770d8d25348405be4d445a719ccd71'}\n\n```{.r .cell-code}\nggplot() +\n  geom_point(\n    data = and_vertebrates,\n    aes(\n      x = length_1_mm,\n      y = weight_g\n    ))\n```\n:::\n\n\nHere, it does not make a difference.\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-10_5ab7d4a4f326364ff3a28fac034e88ac'}\n\n```\n#> Warning: Removed 13270 rows containing missing values (`geom_point()`).\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-10-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(color)`: mapping color to a variable\n\nLooks like there are two groups of data: **Map color of points to a variable** by adding it to aesthetics:\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-11_c783d45d7d683ef92d7d2387f479d075'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) +\n  geom_point()\n```\n:::\n\n\n- Map the `species` variable to the color aesthetic of the plot\n\n:::  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-12_1df30d94d58fe65efc929d87a528ec05'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-12-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(size)`: mapping size to a variable\n\nWe can do the same with size:\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-13_41cb2309c163eb614917b291c0eda8e3'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           size = species)) +\n  geom_point()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-14_783f9349f064b9ea70b8e66feaceede5'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-14-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(shape)`: mapping shape to a variable\n\nWe can do the same with shape:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-15_e1649034db32c2663782fc9211659cab'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           shape = species)) +\n  geom_point()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-16_565f1e551c3624689279bd577269fb60'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-16-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Combine color, size and shape\n\nWe can also combine these aesthetics and map different variables\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-17_f9c16688369a558980eb88167be6154f'}\n\n```{.r .cell-code  code-line-numbers=\"4-6\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = unittype,\n           shape = species,\n           size = year)) +\n  geom_point()\n```\n:::\n\n\n- This is a bit too much for this plot, but sometimes can be useful\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-18_575b160976c9f64fe992fc64b6bc8930'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-18-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Changing  the scales of the aesthetics\n\nThe scales onto which the aesthetic elements are mapped can be changed.\n\n:::{.columns} \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-19_13c40e8de1466bc4d2beff009db65cfc'}\n\n```{.r .cell-code}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point()\n```\n:::\n\n\n- Exponential relationship?\n- How does it look like on the log scale?\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-20_b9ae644aa14030f1669680a6ebf1bb7f'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-20-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_x_log10`\n\nThe scales onto which the aesthetic elements are mapped can be changed.\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-21_9451c68cecbe6428d0e9aa40d0c97d7e'}\n\n```{.r .cell-code  code-line-numbers=\"6-7\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point() +\n  scale_x_log10() +\n  scale_y_log10()\n```\n:::\n\n\n- Scales can be changed for all elements of `aes`\n- The general format of scale functions are:\n\n:::{.fragment}\n\n<code><b>scale\\_[aes-name]{.highlight-ylw}\\_[scale-type]{.highlight-pink}</b></code>\n\nIn this example we scale the <b>[x]{.higlight-ylw}</b> and the  <b>[y]{.higlight-ylw}</b>  aesthetic to <b>[log10]{.highlight-pink}</b>.\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-22_0ff0433c11efcf059403c06397823dbe'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-22-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_smooth`\n\nAdd a smoothing line that helps see patterns in the data\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-23_f25e9715ff5e69aaf07b044f94bedd1b'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point(alpha = 0.3) +\n  geom_smooth(method = \"lm\") +\n  scale_x_log10() + \n  scale_y_log10()\n```\n:::\n\n\n- With `method = \"lm\"`, a linear regression line is added\n- All geoms are done separately for the species because color is defined globally\n- Alpha makes the points transparent (0-1 with 0 being invisible)\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-24_3c73eb98bb703685a6ec1be0b519db3e'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-24-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nCompare groups using a boxplot\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-25_fbbe2de94b9196fb6de16d6b66b0776b'}\n\n```{.r .cell-code}\nggplot(and_vertebrates, \n       aes(x = species, \n           y = length_1_mm)) +\n  geom_boxplot()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-26_322a1f3e55e5ff570ae47ccdd764fc9a'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-26-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nCompare groups using a boxplot\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-27_8809f946731262c37ee4fab0ded33df8'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(and_vertebrates, \n       aes(x = species, \n           y = length_1_mm)) +\n  geom_boxplot(notch = TRUE)\n```\n:::\n\n\n- If notches don't overlap, the medians of the groups are likely different\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-28_160da4715ec998bc23daad77ff28b736'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-28-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nMap the `unittype` to the **color** aesthetic of the boxplot\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-29_0c8aceb285425f6cedc131df22e3c09e'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(and_vertebrates, \n       aes(x = species, \n           y = length_1_mm,\n           color = unittype)) +\n  geom_boxplot() \n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-30_946429db009f289b31e8199c48ff3e19'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-30-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nMap the `unittype` to the **fill** aesthetic of the box\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-31_493bf89e82f3108d9d206432a2bd64a2'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(and_vertebrates, \n       aes(x = species, \n           y = length_1_mm,\n           fill = unittype)) +\n  geom_boxplot(notch = TRUE) \n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-32_8253e2f4c1545c543544da9f563339b3'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-32-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_histogram`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-33_732207ee7b731f2f9a77e0d6127424be'}\n\n```{.r .cell-code}\nggplot(and_vertebrates, \n       aes(x = length_1_mm, \n           fill = section)) +\n  geom_histogram()\n```\n:::\n\n\n- Careful: By default the histogram is stacked for the different groups!\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-34_99a32bd0322643fe70d1667db2db10c0'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-34-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_histogram`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-35_b331f5f25804b0a57c3891cfe00255d2'}\n\n```{.r .cell-code  code-line-numbers=\"5-6\"}\nggplot(and_vertebrates, \n       aes(x = length_1_mm, \n           fill = section)) +\n  geom_histogram(\n    position = \"identity\",\n    alpha = 0.5\n    )\n```\n:::\n\n\n- Change the position of the histogram to `\"identity\"`, if you\ndon't want it stacked\n- `alpha` makes sure that you see overlapping areas\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-36_f5623fdd17fbf7af03358bce94ee1926'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-36-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_tile`\n\nYou can create a simple heatmap with `geom_tile`\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-37_d59d838da31427a590734ab9c80679e3'}\n\n```{.r .cell-code}\nggplot(and_vertebrates, \n       aes(x = section,\n           y = species,\n           fill = weight_g)) +\n  geom_tile()\n```\n:::\n\n\n- Here we would have to choose a different color scheme to see differences\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-38_9e44a674611f1e2cbf096f17f0c2d56a'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-38-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Small multiples with `facet_wrap`\n\nSplit your plots along one variable with `facet_wrap`\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-39_246379df2bfccdaca0899b51841c5d0c'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point() +\n  facet_wrap(~section)\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-40_8b354a0233994df3ca2e3fcb89c3a4ce'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-40-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Small multiples with `facet_wrap`\n\nSplit your plots along one variable with `facet_wrap`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-41_f28bbed33119aa692ef690db0a6fdc85'}\n\n```{.r .cell-code  code-line-numbers=\"7-8\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point() +\n  facet_wrap(~section, \n             nrow = 2,\n             scales = \"free\")\n```\n:::\n\n\n- Specify number of rows and columns with `nrow`/`ncol`\n\n:::{.nonincremental}\n\n- Set separate scales for x and y with `scales`\n  - `\"free\"`: x and y axis are free\n  - `\"free_y\"`: only y-axis is free\n  - `\"free_x\"`: only x-axis is free\n\n:::\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-42_8c7016e3436cdc6116cb668cefee9e9d'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-42-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Small multiples with `facet_grid`\n\nSplit your plots along two variables with `facet_grid`\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-43_784d785cbcbef8c28a002f5be8109105'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = unittype)) + \n  geom_point() +\n  facet_grid(section ~ species)\n```\n:::\n\n\n- `facet_grid(rows ~ columns)`\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-44_0798db358376663f06bb220f10b16b77'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-44-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n# Now you {.inverse}\n\n[Task 1.1 - 1.3 (45 min)]{.highlight-blue}<br>\n\n[Exploratory data analysis with the penguin data set]{.big-text}\n\n**Find the task description [here](https://selinazitrone.github.io/intro-r-data-analysis/sessions/07_ggplot.html)**\n\n\n# {.background-no-title .inverse}\n\n![Artwork by [Allison Horst](https://twitter.com/allison_horst)](img/AllisonHorst/ggplot2_masterpiece.png){width=60%}\n\n## Change appearance of points\n\n. . . \n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-45_085d1319cec393b2cc9c01449baaea1f'}\n\n```{.r .cell-code  code-line-numbers=\"6-9\"}\nggplot(and_vertebrates, aes(\n  x = length_1_mm,\n  y = weight_g\n)) +\n  geom_point(\n    size = 4,\n    shape = 17,\n    color = \"blue\",\n    alpha = 0.5\n  )\n```\n:::\n\n\n:::{.fragment}\n\n- [shape](http://www.cookbook-r.com/Graphs/Shapes_and_line_types/) and [color](https://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf) codes:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-46_c9a5c7b67c7f19c2a0ae7f0d0083dbc6'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-46-1.png){width=604.8}\n:::\n:::\n\n\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-47_e953e7e73489cfac5a714636d23b6f7a'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-47-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Change color scale\n\nWe can also save a plot in a variable\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-48_0df201e43dc9989fe07c4dc5638f4ccd'}\n\n```{.r .cell-code}\ng <- ggplot(and_vertebrates, aes(\n  x = length_1_mm,\n  y = weight_g,\n  color = species\n)) +\n  geom_point()\ng\n```\n:::\n\n\n- Other plot layers can still be added to `g`\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-49_5285c20f192601191629930b9b9d97f1'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-49-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_color_viridis_d`\n\nChange the colors of the color aesthetic:\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-50_ad75c417871ecb2256962f1bf5668712'}\n\n```{.r .cell-code}\ng +\n  scale_color_viridis_d(\n    option = \"cividis\"\n  )\n```\n:::\n\n\n<br>\n\n- The viridis color palette is designed for viewers with common forms of color blindness\n- Different options of viridis color palettes: \n`\"magma\"`, `\"inferno\"`, `\"plasma\"`, `\"viridis\"`, `\"cividis\"`\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-51_7b4e444ba1945ccc3cc39788725d83fd'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-51-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_color_manual`\n\nWe can also manually specify colors:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-52_04c33884b84a8df01bf7598cc2f40276'}\n\n```{.r .cell-code  code-line-numbers=\"2-7\"}\ng +\n  scale_color_manual(\n    values = c(\n      \"darkolivegreen4\",\n      \"darkorchid3\"\n    )\n  )\n```\n:::\n\n\n<br>\n\n- Length of color vector has to match number of levels in your aesthetic\n\n:::{.nonincremental}\n\n- Specify colors \n  - Via their [name](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf)\n  - Via their Hex color codes (use websites to generate your own color palettes, e.g. [here](https://coolors.co/))\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-53_42da1b45c9009c50f39e9eb85909dbae'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-53-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Other color scales\n\nYou can use the `paletteer` package to access color scales from many packages.<br>\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-54_c39dbe7162c9a994dd38fcf6a2dfbd7b'}\n\n```{.r .cell-code}\n# install.packages(\"paletteer\")\nlibrary(paletteer)\ng <- g +\n  scale_color_paletteer_d(\n    palette = \"ggsci::default_uchicago\"\n  )\ng\n```\n:::\n\n\n- Use `scale_color_paletteer_d` for discrete and `scale_color_paletteer_c` for\ncontinuous color scales\n- Check out all palettes available [here](https://r-charts.com/color-palettes)\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-55_a424017b65aff4ba793a81c55af0332a'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-55-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_fill_*` vs. `scale_color_*`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-56_759ebdde35f44e1dda79fa0c8130426c'}\n\n```{.r .cell-code  code-line-numbers=\"6,8-10\"}\nggplot(\n  and_vertebrates,\n  aes(\n    x = section,\n    y = length_1_mm,\n    color = unittype )) +\n  geom_boxplot() +\n  paletteer::scale_color_paletteer_d( \n    palette = \"ggsci::default_uchicago\"\n  )\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-56-1.png){width=604.8}\n:::\n:::\n\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-57_be13b22085391ae8de8698d75655c9a9'}\n\n```{.r .cell-code  code-line-numbers=\"6,8-10\"}\nggplot(\n  and_vertebrates,\n  aes(\n    x = section,\n    y = length_1_mm,\n    fill = unittype )) + \n  geom_boxplot() +\n  paletteer::scale_fill_paletteer_d( \n    palette = \"ggsci::default_uchicago\"\n  )\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-57-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `labs`: Change axis and legend titles and add plot title\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-58_ba9cabe82c254a6771e2c33d898212d3'}\n\n```{.r .cell-code  code-line-numbers=\"2-9\"}\ng <- g +\n  labs(\n    x = \"Length [mm]\", \n    y = \"Weight [g]\",\n    color = \"Species\", \n    title = \"Length-Weight relationship\",\n    subtitle = \"There seems to be an exponential relationship\", \n    caption = \"Data from the `lterdatasampler` package\"\n  ) \ng\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-58-1.png){width=604.8}\n:::\n:::\n\n\n## `theme_*`: change appearance\n\n`ggplot2` offers many pre-defined themes that we can apply to change the appearance of a plot.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-59_03c86d7bf85ed60bf132d149fb4f59f9'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng + \n  theme_classic()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-60_0c1538749de3713eb3b631c3ba3969de'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-60-1.png){width=604.8}\n:::\n:::\n\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-61_e2c0705aa382b7e6fb12e1d424d9dab8'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng + \n  theme_bw()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-62_6ce29d39ee87ddf9ba54a6776a6c9330'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-62-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `theme_*`: change appearance\n\n`ggplot2` offers many pre-defined themes that we can apply to change the appearance of a plot.\n\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-63_a465d79bb16569026f6fd2aa21a135b3'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng + \n  theme_minimal()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-64_929af2603c375e539cff9d16580ec350'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-64-1.png){width=604.8}\n:::\n:::\n\n\n:::  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-65_ffe0c05fa280668593774ade90ad3d07'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng + \n  theme_dark()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-66_65c5b8faa2eb2b75a075e0475af8961b'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-66-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `theme()`: customize theme\n\nYou can manually change a theme or even create an entire theme yourself. \nThe elements you can control in the theme are:\n\n:::{.nonincremental}\n\n- titles (plot, axis, legend, ...)\n- labels\n- background\n- borders\n- grid lines\n- legends\n\n:::\n\n:::{.fragment}\n\nIf you want a full list of what you can customize, have a look at \n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-67_267833be31c10176584bf910a8a2c91c'}\n\n```{.r .cell-code}\n?theme\n```\n:::\n\n\n- Look [here](https://github.com/claragranell/ggplot2/blob/main/ggplot_theme_system_cheatsheet.pdf) for an overview of the elements that you can change and the corresponding functions\n\n:::\n\n## `theme()`: customize theme\n\nTo edit a theme, just add another `theme()` layer to your plot.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-68_e688c1a267fbb3362b5581f94c0771d5'}\n\n```{.r .cell-code  code-line-numbers=\"3-10\"}\ng + \n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    axis.text = element_text(face = \"bold\"),\n    plot.background = element_rect(\n      fill = \"lightgrey\",\n      color = \"darkred\"\n    )\n  )\n```\n:::\n\n\n:::{.fragment}\n\nThe basic functioning of theme elements is:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-69_5fdd0bd2b4735b12cb880710d495e51a'}\n\n```{.r .cell-code}\ntheme(\n  element_name = element_function()\n)\n```\n:::\n\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-70_bb251976f05bfae52afefcf874bc77c8'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-70-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `theme_set()`: set global theme\n\nYou can set a global theme that will be applied to all ggplot objects in the current R session. \n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-71_3bf1de8fd11b79e7a5e8f81c3149563a'}\n\n```{.r .cell-code}\n# Globally set theme_minimal as the default theme\ntheme_set(theme_minimal())\n```\n:::\n\n\n<br>\n\nAdd this to the beginning of your script.\n\n. . .\n\nYou can also specify some defaults, e.g. the text size:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-72_d18ceaa4ba6ff05971c6df74720cdc16'}\n\n```{.r .cell-code}\ntheme_set(theme_minimal(base_size = 16))\n```\n:::\n\n\nThis is very practical if you want to achieve a consistent look, e.g. for a scientific journal.\n\n## `ggsave()`\n\nA ggplot object can be saved on disk in different formats.\n\nWithout specifications:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-73_25570f5a077d00d14edeb2de27027fb3'}\n\n```{.r .cell-code}\n# save plot g in img as my_plot.pdf\nggsave(filename = \"img/my_plot.pdf\", plot = g)\n# save plot g in img as my_plot.png\nggsave(filename = \"img/my_plot.png\", plot = g)\n```\n:::\n\n\n. . .\n\nOr with specifications:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-74_d23b8dcc53155d718792d78b3f49f5c3'}\n\n```{.r .cell-code}\n# save a plot named g in the img directory under the name my_plot.png\n# with width 16 cm and height 9 cm\nggsave(filename = \"img/my_plot.png\",\n       plot = g,\n       width = 16,\n       heigth = 9,\n       units = \"cm\")\n```\n:::\n\n\nHave a look at `?ggsave` to see all options.\n\n\n# Now you {.inverse}\n\n[Task 2 (30 min)]{.highlight-blue}<br>\n\n[Make your penguin plots more beautiful]{.big-text}\n\n**Find the task description [here](https://selinazitrone.github.io/intro-r-data-analysis/sessions/07_ggplot.html#beautify-the-plots)**\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}