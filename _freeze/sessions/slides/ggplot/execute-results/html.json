{
  "hash": "e06afb5c520a32b7af3b10a62168df24",
  "result": {
    "markdown": "---\ntitle: \"Data visualization with ggplot2\"\nsubtitle: \"Day 2 - Introduction to Data Analysis with R\"\nauthor: \"Selina Baldauf\"\ninstitute: \"Freie Universität Berlin - Theoretical Ecology\"\ndate: today\ndate-format: long\nformat: \n  revealjs:\n    footer: \"Selina Baldauf // Data visualization with ggplot2\"\n    highlight-style: breeze\n    mainfont: Cabinet Grotesk\n    slide-number: true\n    show-slide-number: all\n    incremental: true\n    self-contained: true\n    code-line-numbers: true\n    auto-stretch: false\n    scrollable: true\n    theme: slides.scss\n    fig-align: center\n    fig-width: 6.3\n    fig-height: 6.3\nexecute: \n  echo: true\n  warning: false\n  message: false\n  cache: true\nfrom: markdown+emoji\ntitle-slide-attributes: \n  data-background-image: img/hex-stickers/ggplot2.png\n  data-background-position: 90% 85%\n  data-background-size: \"20%\"\n---\n\n\n\n\n\n# A ggplot showcase{.inverse}\n\n> Example plots you can create with ggplot\n\n## A ggplot showcase\n\n![Visualization by [Jake Kaupp](https://twitter.com/jakekaupp), code available on [Github](https://github.com/jkaupp/tidytuesdays/tree/master/2021/week27)](https://raw.githubusercontent.com/jkaupp/tidytuesdays/master/2021/week27/tw27_plot.png)\n\n\n## A ggplot showcase\n\n![Visualizations produced by the [BBC News data team](https://github.com/bbc/bbplot)](https://raw.githubusercontent.com/bbc/bbplot/master/chart_examples/bbplot_example_plots.png)\n\n## A ggplot showcase\n\n![Visualization by [Cédric Scherer](https://twitter.com/CedScherer), code available on [Github](https://github.com/z3tt/TidyTuesday/blob/master/R/2020_31_PalmerPenguins.Rmd)](https://raw.githubusercontent.com/Z3tt/TidyTuesday/master/plots/2020_31/2020_31_PalmerPenguins.png){width=50%}\n\n## Advantages of ggplot\n\n- **Consistent** grammar/structure\n- **Flexible** structure allows you to produce any type of plots\n- Highly **customizable appearance** (themes)\n- Many **extension packages** that provide \n  - Additional plot types\n\t- Additional themes and colors\n\t- Animation\n\t- Composition of multiple plots\n\t- ...\n- Active community that provides help and inspiration\n- Perfect package for **exploratory data analysis** and **beautiful plots**\n\n## The data\n\nThe [lterdatasampler package](https://lter.github.io/lterdatasampler/) contains a\ndata set called `and_vertebrates` with the length and weight of a fish and a salamander\nspecies in both clear cut and old growth coniferous forest sections. \n\nData variables (among others):\n\n::: {.nonincremental}\n\n- `year`: observation year\n- `section`: CC (clear cut forest) or OG (old growht forest)\n- `unittype`: channel unit classification (C = Cascade, P = Pool, ...)\n- `species`: Species measured\n- `length_1_mm`: body length [mm]\n- `weight_g`: body weight [g]\n\n:::\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-1_24df5687b2c0bb84dd834994b2ea11d9'}\n\n:::\n\n\n\n## {background-image=\"img/AllisonHorst/ggplot2_exploratory.png\" background-size=\"40%\"}\n\n:::{.aside}\n\nArtwork by [Allison Horst](https://twitter.com/allison_horst)\n\n:::\n\n## `ggplot(data)`\n\nThe `ggplot()` function initializes a ggplot object. Every ggplot needs this function.\n\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-2_2cb5f78558cd6f719482c38357b92959'}\n\n```{.r .cell-code}\nlibrary(ggplot2) # or library(tidyverse)\n\nggplot(data = and_vertebrates)\n```\n:::\n\n\n\n- Empty plot because we did not specify the mapping of data variables\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-3_53fbc85276ff2f4a3f324feee6016772'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `aes(x, y)`\n\nThe **aes**thetic mapping defines how variables are mapped to aesthetic properties of the plot.\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-4_7c24a67cb05d66e2c4a0dc6cc6c34cd8'}\n\n```{.r .cell-code}\nggplot(data = and_vertebrates,\n       mapping = aes(\n         x = length_1_mm, \n         y = weight_g))\n```\n:::\n\n\n\n- Map variable `length_1_mm` to x-axis and `weight_g` to y-axis\n- Default scales are automatically adapted to range of data\n\n:::{.fragment}\n\nThis is the same but shorter:\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-5_57a471b1cdcc4e823d54f183434a2691'}\n\n```{.r .cell-code}\nggplot(and_vertebrates, \n       aes(x = length_1_mm,\n           y = weight_g))\n```\n:::\n\n\n\nRemember argument matching by position?\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-6_bc5f2774bd35a77a0c99d1e52a91ffa5'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `geom_*`\n\n`geoms` define how data points are represented. There are many different geoms to chose from\n\n![from [ggplot cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/master/data-visualization-2.1.pdf)](img/day2/geom_ggplot.png)\n\n## `geom_point`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-7_30875a11c8eb6be6abfa18f208387e26'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g)) +\n  geom_point()\n```\n:::\n\n\n\n- New plot layers added with `+`\n- Warning that points could not be plotted due to missing values\n- `data` and `aes` defined in `ggplot` call are inherited to all plot layers\n- `data` and `aes` can be local to a layer:\n\n:::{.fragment}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-8_4261001466dc2c6065d32f4714097778'}\n\n```{.r .cell-code}\nggplot(data = and_vertebrates,) +\n  geom_point(aes(x = length_1_mm, #<<\n                 y = weight_g)) #<<\n```\n:::\n\n\n\nHere, it does not make a difference.\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-9_9e1f661779ab6f2df0fa0f0b60759772'}\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 13270 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `aes(color)`: mapping color to a variable\n\nLooks like there are two groups of data: **Map color of points to a variable** by adding it to aesthetics:\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-10_a210987ffb535dc50f3003abf6af06a3'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) +\n  geom_point()\n```\n:::\n\n\n\n- Map the `species` variable to the color aesthetic of the plot\n\n:::  \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-11_ff1671db382e0e890dccd213fe060d4d'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `aes(size)`: mapping size to a variable\n\nWe can do the same with size:\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-12_b5680eafd6b84afa78642376827a062f'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           size = species)) +\n  geom_point()\n```\n:::\n\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-13_836b662627e80504b896c80602f04143'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `aes(shape)`: mapping shape to a variable\n\nWe can do the same with shape:\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-14_c3bc3139ebbb36c97003ef8c309554fb'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           shape = species)) +\n  geom_point()\n```\n:::\n\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-15_e21bb2502f4a2667ce25bf6f20ebe12b'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Combine color, size and shape\n\nWe can also combine these aesthetics and map different variables\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-16_b3ade2af661ac48e9c02dc4fce451215'}\n\n```{.r .cell-code  code-line-numbers=\"4-6\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = unittype,\n           shape = species,\n           size = year)) +\n  geom_point()\n```\n:::\n\n\n\n- This is a bit too much for this plot, but sometimes can be useful\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-17_7e5791f79c16869bec07c9f6216d724d'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Changing  the scales of the aesthetics\n\nThe scales onto which the aesthetic elements are mapped can be changed.\n\n:::{.columns} \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-18_0eaa292542599c4e63cce615b2831318'}\n\n```{.r .cell-code}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point()\n```\n:::\n\n\n\n- Exponential relationship?\n- How does it look like on the log scale?\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-19_930d0fddb3af5269063ef6bdf7d1e706'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `scale_x_log10`\n\nThe scales onto which the aesthetic elements are mapped can be changed.\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-20_12686d4c1ca057bb84338d90f2522598'}\n\n```{.r .cell-code  code-line-numbers=\"6-7\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point() +\n  scale_x_log10() +\n  scale_y_log10()\n```\n:::\n\n\n\n- Scales can be changed for all elements of `aes`\n\n:::{.fragment}\n\n- The general format of scale functions are:\n\n<code><b>scale\\_[aes-name]{.col-green}\\_[scale-type]{.col-pink}</b></code>\n\nIn this example we scale the <b>.[x]{.col-green}</b> and the  <b>[y]{.col-green}</b>  aesthetic to <b>[log10]{.col-pink}</b>.\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-21_3a77f6446c20bc90b20ad10bb9bb480d'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `geom_smooth`\n\nAdd a smoothing line that helps see patterns in the data\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-22_7123e53f90a0497e8513085bcac74a43'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point(alpha = 0.3) +\n  geom_smooth(method = \"lm\") +\n  scale_x_log10() + \n  scale_y_log10()\n```\n:::\n\n\n\n- With `method = \"lm\"`, a linear regression line is added\n- All geoms are done separately for the species\n  - Color is defined globally\n- alpha makes the points transparent (0-1 with 0 being invisible)\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-23_1525cd0d72ab9cf49b284bf1d44c65c2'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nCompare groups using a boxplot\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-24_b752cef59d32085ee460b3b75c1c6045'}\n\n```{.r .cell-code}\nggplot(and_vertebrates, \n       aes(x = species, \n           y = length_1_mm)) +\n  geom_boxplot()\n```\n:::\n\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-25_3591089a61d835fec6ee4207444dc233'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nCompare groups using a boxplot\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-26_52a91210f8d1280c38f33a9c8e43bef1'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(and_vertebrates, \n       aes(x = species, \n           y = length_1_mm)) +\n  geom_boxplot(notch = TRUE)\n```\n:::\n\n\n\n- If notches don't overlap, the medians of the groups are likely different\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-27_813fc5c49fdbb494252be204d812a658'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nMap the `unittype` to the **color** aesthetic of the box\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-28_01e3c5ef25f83f3e5f4e984eec4e2183'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(and_vertebrates, \n       aes(x = species, \n           y = length_1_mm,\n           color = unittype)) +\n  geom_boxplot() \n```\n:::\n\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-29_628f03f7eff55b33907e8d550ff0356b'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nMap the `unittype` to the **fill** aesthetic of the box\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-30_17277c77aedd677d4a1c7650edde52ee'}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\nggplot(and_vertebrates, \n       aes(x = species, \n           y = length_1_mm,\n           fill = unittype)) +\n  geom_boxplot(notch = TRUE) \n```\n:::\n\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-31_a2fdd0e18b9b4bc1f30d7e2c9a826fda'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `geom_histogram`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-32_8e018e2294bccb0748a336e8791122ad'}\n\n```{.r .cell-code}\nggplot(and_vertebrates, \n       aes(x = length_1_mm, \n           fill = section)) +\n  geom_histogram()\n```\n:::\n\n\n\n- Careful: By default the histogram is stacked for the different groups!\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-33_c3b4adf8c01491c4562c581e127580f7'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `geom_histogram`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-34_0a63f84638897e084070aa41f510f32c'}\n\n```{.r .cell-code  code-line-numbers=\"5-6\"}\nggplot(and_vertebrates, \n       aes(x = length_1_mm, \n           fill = section)) +\n  geom_histogram(\n    position = \"identity\",\n    alpha = 0.5\n    ) #<<\n```\n:::\n\n\n\n- Change the position of the histogram to `\"identity\"`, if you\ndon't want it stacked\n- `alpha` makes sure that you see overlapping areas\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-35_3b5e7259ad4a9f00c1e945f50d04248e'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `geom_tile`\n\nYou can create a simple heatmap with `geom_tile`\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-36_f1f0604ca8fbd077922d56a72b196515'}\n\n```{.r .cell-code}\nggplot(and_vertebrates, \n       aes(x = section,\n           y = species,\n           fill = weight_g)) +\n  geom_tile()\n```\n:::\n\n\n\n- Here we would have to chose a different color scheme to see differences\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-37_e8cb36c72526c362fc1cef2746179d2e'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Small multiples with `facet_wrap`\n\nSplit your plots along one variable with `facet_wrap`\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-38_4661eb3cc72e58ccf36a3544d0315fef'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point() +\n  facet_wrap(~section)\n```\n:::\n\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-39_df3cd0cabbb415cb735e322b8b13cda2'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Small multiples with `facet_wrap`\n\nSplit your plots along one variable with `facet_wrap`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-40_a58b3710b0f27e1a4e91d9b7046d1c08'}\n\n```{.r .cell-code  code-line-numbers=\"7-8\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = species)) + \n  geom_point() +\n  facet_wrap(~section, \n             nrow = 2,#<<\n             scales = \"free\")\n```\n:::\n\n\n\n- Specify number of rows and columns with `nrow`/`ncol`\n- Set separate scales for x and y with `scales`\n  - `\"free\"`: x and y axis are free\n  - `\"free_y\"`: only y-axis is free\n  - `\"free_x\"`: only x-axis is free\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-41_a8ccd0fe542aaf85cb8f87182d6ed919'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-41-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Small multiples with `facet_grid`\n\nSplit your plots along two variables with `facet_grid`\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-42_19abbd2d34e13b2bf67e1d06204c0296'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = and_vertebrates,\n       aes(x = length_1_mm, \n           y = weight_g,\n           color = unittype)) + \n  geom_point() +\n  facet_grid(section ~ species)\n```\n:::\n\n\n\n- `facet_grid(rows ~ columns)`\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-43_c219ca13656486362f16554310647c20'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-43-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n# Now you {.inverse}\n\n[Task 1 (45 min)]{.highlight-blue}<br>\n\n[Exploratory data analysis with the penguin data set]{.big-text}\n\n**Find the task description [here](https://selinazitrone.github.io/intro-r-data-analysis/02_tasks_controller.html#ggplot2)**\n\n## {background-image=\"img/AllisonHorst/ggplot2_masterpiece.png\" background-size=\"50%\"}\n\n:::{.aside}\n\nArtwork by [Allison Horst](https://twitter.com/allison_horst)\n\n:::\n\n## Change appearance of points\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-44_ba7457c810d4cbb55e332a83785bc9d7'}\n\n```{.r .cell-code  code-line-numbers=\"6-9\"}\nggplot(and_vertebrates, aes(\n  x = length_1_mm,\n  y = weight_g\n)) +\n  geom_point(\n    size = 4,\n    shape = 17,\n    color = \"blue\",\n    alpha = 0.5\n  )\n```\n:::\n\n\n\n:::{.fragment}\n\n- [shape](http://www.cookbook-r.com/Graphs/Shapes_and_line_types/) and [color](https://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf) codes:\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-45_964f433a3274cf1ab8374431703e703e'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-45-1.png){width=672}\n:::\n:::\n\n\n\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-46_206466bf9d05f80c4d1efec310b96c5c'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Change color scale\n\nWe can also save a plot in a variable\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-47_eef13472f8d224fc1e47ea6868148d2c'}\n\n```{.r .cell-code}\ng <- ggplot(and_vertebrates, aes(\n  x = length_1_mm,\n  y = weight_g,\n  color = species\n)) +\n  geom_point()\ng\n```\n:::\n\n\n\n- Other plot layers can still be added to `g`\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-48_b2a7d6324a5aea5634b9bc89a1f00d57'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `scale_color_viridis_d`\n\nChange the colors of the color aesthetic:\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-49_0026ddee8af4ef926236aa0a8857c100'}\n\n```{.r .cell-code}\ng +\n  scale_color_viridis_d()\n```\n:::\n\n\n\n- The viridis color palette is designed for viewers with common forms of color blindness\n- Different options of viridis color palettes are are:\n  - `\"magma\"`, `\"inferno\"`, `\"plasma\"`, `\"viridis\"`, `\"cividis\"`\n  - use the options with `scale_color_viridis_d(option = \"cividis\")`\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-50_b89e3af98ae7da7907375ceb9e0cc47e'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-50-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `scale_color_viridis_d`\n\nChange the colors of the color aesthetic:\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-51_c17c65004b6944f87e493ebc0e579c0b'}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\ng +\n  scale_color_viridis_d(\n    option = \"cividis\"\n  )\n```\n:::\n\n\n\n- Different options of viridis color palettes: \n`\"magma\"`, `\"inferno\"`, `\"plasma\"`, `\"viridis\"`, `\"cividis\"`\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-52_9318fd326d3bf6e0a1f82481de101c81'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-52-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `scale_color_manual`\n\nWe can also manually specify colors:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-53_c325957e3561417ee070bdf01c0b803b'}\n\n```{.r .cell-code}\ng +\n  scale_color_manual(\n    values = c(\n      \"darkolivegreen4\",\n      \"darkorchid3\"\n    )\n  )\n```\n:::\n\n\n\n- Length of color vector has to match number of levels in your aesthetic\n- Specify colors \n  - Via their [name](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf)\n  - Via their Hex color codes (use websites to generate your own color palettes, e.g. [here](https://coolors.co/))\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-54_797fbe8c16da339c77ae8af674799669'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-54-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Other color scales\n\nYou can use the `paletteer` package to access color scales from many packages.\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-55_b87f780585da73eeeed91a2e2001c0b8'}\n\n```{.r .cell-code}\n# install.packages(\"paletteer\")\nlibrary(paletteer)\ng <- g +\n  scale_color_paletteer_d(\n    palette = \"ggsci::default_uchicago\"\n  )\ng\n```\n:::\n\n\n\n- Use `scale_color_paletteer_d` for discrete and `scale_color_paletteer_c` for\ncontinuous color scales\n- Check out all palettes available [here](https://r-charts.com/color-palettes)\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-56_d5c7faec513e7eb6f562075a12ce6a64'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-56-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `scale_fill_*` vs. `scale_color_*`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-57_beabf391e9b4d7da535f6de94694afa0'}\n\n```{.r .cell-code  code-line-numbers=\"6,8-10\"}\nggplot(\n  and_vertebrates,\n  aes(\n    x = section,\n    y = length_1_mm,\n    color = unittype )) +\n  geom_boxplot() +\n  paletteer::scale_color_paletteer_d( \n    palette = \"ggsci::default_uchicago\"\n  )\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-57-1.png){width=672}\n:::\n:::\n\n\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-58_b21ce97d65c7665e02de2473a1e36a21'}\n\n```{.r .cell-code  code-line-numbers=\"6,8-10\"}\nggplot(\n  and_vertebrates,\n  aes(\n    x = section,\n    y = length_1_mm,\n    fill = unittype )) + \n  geom_boxplot() +\n  paletteer::scale_fill_paletteer_d( \n    palette = \"ggsci::default_uchicago\"\n  )\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-58-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `labs`: Change axis and legend titles and add plot title\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-59_6ef4161494fd174e66da12c5bd6ac13f'}\n\n```{.r .cell-code  code-line-numbers=\"2-9\"}\ng <- g +\n  labs(\n    x = \"Length [mm]\", \n    y = \"Weight [g]\",\n    color = \"Species\", \n    title = \"Length-Weight relationship\",\n    subtitle = \"There seems to be an exponential relationship\", \n    caption = \"Data from the `lterdatasampler` package\"\n  ) \ng\n```\n:::\n\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-60_7ed76c7ee29abf6139a519313a3d6256'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `theme_*`: change appearance\n\n`ggplot2` offers many pre-defined themes that we can apply to change the appearance of a plot.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-61_69380c32a2dfee0e1df6e04d807623a6'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng + \n  theme_classic()\n```\n:::\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-62_f8385ebba3993d6a1385e6fb9ef5e299'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-62-1.png){width=672}\n:::\n:::\n\n\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-63_3532cdc14dead5dffac23340ffb3a365'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng + \n  theme_bw()\n```\n:::\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-64_f930767ae05b77cda44a17fa0cc8998d'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-64-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `theme_*`: change appearance\n\n`ggplot2` offers many pre-defined themes that we can apply to change the appearance of a plot.\n\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-65_656eff8bb8756f945c97f6e22eaeda1e'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng + \n  theme_minimal()\n```\n:::\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-66_63552bf3e75d40307c33e1467050bf5f'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-66-1.png){width=672}\n:::\n:::\n\n\n\n:::  \n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-67_af95b55a7ad796942bed328a1f006f7a'}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\ng + \n  theme_dark()\n```\n:::\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-68_4111de360bb146cf1ea2becfd35e9f94'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-68-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `theme()`: customize theme\n\nYou can manually change a theme or even create an entire theme yourself. \nThe elements you can control in the theme are:\n\n:::{.nonincremental}\n\n- titles (plot, axis, legend, ...)\n- labels\n- background\n- borders\n- grid lines\n- legends\n\n:::\n\n:::{.fragment}\n\nIf you want a full list of what you can customize, have a look at \n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-69_4593a18ff027ec8fe7c51527e670ee86'}\n\n```{.r .cell-code}\n?theme\n```\n:::\n\n\n\n- Look [here](https://github.com/claragranell/ggplot2/blob/main/ggplot_theme_system_cheatsheet.pdf) for an overview of the elements that you can change and the corresponding functions\n\n:::\n\n## `theme()`: customize theme\n\nTo edit a theme, just add another `theme()` layer to your plot.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-70_f348b6b1942b566355adf36de48cc93d'}\n\n```{.r .cell-code  code-line-numbers=\"3-10\"}\ng + \n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    axis.text = element_text(face = \"bold\"),\n    plot.background = element_rect(\n      fill = \"lightgrey\",\n      color = \"darkgrey\"\n    )\n  )\n```\n:::\n\n\n\n:::{.fragment}\n\n- The basic functioning is:\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-71_b5e5d8033c922b0432df980b375c8248'}\n\n```{.r .cell-code}\ntheme(\n  element_name = element_function()\n)\n```\n:::\n\n\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-72_bcfabbb3a3f19fde4fa977347ac6efef'}\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-72-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## `theme_set()`: set global theme\n\nYou can set a global theme that will be applied to all ggplot objects in the current R session. \n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-73_f25c1e0323a2eeaacceca6d611404ef2'}\n\n```{.r .cell-code}\n# Globally set theme_minimal as the default theme\ntheme_set(theme_minimal())\n```\n:::\n\n\n\nAdd this to the beginning of your script.\n\n. . .\n\nYou can also specify some defaults, e.g. the text size:\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-74_516aec4d843c4bac8b6949a45b6325bf'}\n\n```{.r .cell-code}\ntheme_set(theme_minimal(base_size = 16))\n```\n:::\n\n\n\nThis is very practical if you want to achieve a consistent look, e.g. for a scientific journal.\n\n## `ggsave()`\n\nA ggplot object can be saved on disk in different formats.\n\nWithout specifications:\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-75_566a633608bd02ae765cfc35886f340f'}\n\n```{.r .cell-code}\n# save plot g in img as my_plot.pdf\nggsave(filename = \"img/my_plot.pdf\", plot = g)\n# save plot g in img as my_plot.png\nggsave(filename = \"img/my_plot.png\", plot = g)\n```\n:::\n\n\n\n. . .\n\nOr with specifications:\n\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-76_c091912755277dba7a52c0fd1481c625'}\n\n```{.r .cell-code}\n# save a plot named g in the img directory under the name my_plot.png\n# with width 16 cm and height 9 cm\nggsave(filename = \"img/my_plot.png\",\n       plot = g,\n       width = 16,\n       heigth = 9,\n       units = \"cm\")\n```\n:::\n\n\n\nHave a look at `?ggsave` to see all options.\n\n\n# Now you {.inverse}\n\n[Task 1 (30 min)]{.highlight-blue}<br>\n\n[Make your penguin plots more beautiful]{.big-text}\n\n**Find the task description [here](https://selinazitrone.github.io/intro-r-data-analysis/02_tasks_controller.html#beautify-the-plots)**\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}