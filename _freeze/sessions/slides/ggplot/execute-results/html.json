{
  "hash": "6ce4cd031a6dd24c2b5fb0e00bd3246b",
  "result": {
    "markdown": "---\ntitle: \"Data visualization with ggplot2\"\nsubtitle: \"Day 2 - Introduction to Data Analysis with R\"\nauthor: \"Selina Baldauf\"\ninstitute: \"Freie Universität Berlin - Theoretical Ecology\"\ndate: today\ndate-format: long\nformat: \n  revealjs:\n    footer: \"Selina Baldauf // Data visualization with ggplot2\"\n    highlight-style: breeze\n    mainfont: Cabinet Grotesk\n    slide-number: true\n    show-slide-number: all\n    incremental: true\n    self-contained: true\n    code-line-numbers: false\n    auto-stretch: false\n    scrollable: false\n    theme: slides.scss\n    fig-align: center\n    fig-width: 6.3\n    fig-height: 6.3\nexecute: \n  echo: true\n  warning: false\n  message: false\n  cache: true\nknitr: \n  opts_chunk: \n    collapse: true\n    comment: \"#>\"\nfrom: markdown+emoji\n---\n\n\n\n\n# A ggplot showcase{.inverse}\n\n> Example plots you can create with ggplot\n\n## A ggplot showcase\n\n:::{.r-stack}\n\n![Visualization by [Jake Kaupp](https://twitter.com/jakekaupp), code available on [Github](https://github.com/jkaupp/tidytuesdays/tree/master/2021/week27)](https://raw.githubusercontent.com/jkaupp/tidytuesdays/master/2021/week27/tw27_plot.png)\n\n:::\n\n## A ggplot showcase\n\n![Visualizations produced by the [BBC News data team](https://github.com/bbc/bbplot)](https://raw.githubusercontent.com/bbc/bbplot/master/chart_examples/bbplot_example_plots.png)\n\n## A ggplot showcase\n\n![Visualization by [Cédric Scherer](https://twitter.com/CedScherer), code available on [Github](https://github.com/z3tt/TidyTuesday/blob/master/R/2020_31_PalmerPenguins.Rmd)](https://raw.githubusercontent.com/Z3tt/TidyTuesday/master/plots/2020_31/2020_31_PalmerPenguins.png){width=35%}\n\n## Advantages of ggplot\n\n- **Consistent** grammar/structure\n- **Flexible** structure allows you to produce any type of plots\n- Highly **customizable appearance** (themes)\n- Many **extension packages** that provide additional plot types, themes, colors, animation, ...\n- Active community that provides help and inspiration\n- Perfect package for **exploratory data analysis** and **beautiful plots**\n\n## The data\n\nData set `and_vertebrates` with measurements of a trout and 2 salamander species in different forest sections.\n\n:::{.columns}\n\n:::{.column width=\"60%\"}\n\n::: {.nonincremental}\n\n::: {.small}\n\n- `year`: observation year\n- `section`: CC (clear cut forest) or OG (old growth forest)\n- `unittype`: channel classification (C = Cascade, P = Pool, ...)\n- `species`: Species measured\n- `length_1_mm`: body length [mm]\n- `weight_g`: body weight [g]\n\n:::\n\n:::\n\n:::{.aside}\nReferences: [Kaylor, M.J. and D.R. Warren. (2017)](https://doi.org/10.1002/ecs2.1845) and<br>[Gregory, S.V. and I. Arismendi. (2020)](https://doi.org/10.6073/pasta/7c78d662e847cdbe33584add8f809165) as provided in the <br>[lterdatasampler package](https://lter.github.io/lterdatasampler/).\n\n:::\n\n:::\n\n:::{.column width=\"40%\"}\n\n![Coastal giant salamander (terrestrial form)<br>Andrews Forest Program by Lina DiGregorio via CC-BY from [https://andrewsforest.oregonstate.edu](https://andrewsforest.oregonstate.edu)](https://andrewsforest.oregonstate.edu/sites/default/files/gallery/afb_037.jpg){width=60%}\n\n:::\n\n:::\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-1_bed3f67833e64564514783375514fb29'}\n\n:::\n\n\n## The data\n\nData set `and_vertebrates` with measurements of a trout and 2 salamander species in different forest sections.\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-2_e827c0c2200d1caed0059e5638dcb2ab'}\n\n```{.r .cell-code}\nlibrary(lterdatasampler)\nand_vertebrates\n#> # A tibble: 32,191 × 6\n#>     year section unittype species         length_1_mm weight_g\n#>    <dbl> <chr>   <chr>    <chr>                 <dbl>    <dbl>\n#>  1  1987 CC      R        Cutthroat trout          58     1.75\n#>  2  1987 CC      R        Cutthroat trout          61     1.95\n#>  3  1987 CC      R        Cutthroat trout          89     5.6 \n#>  4  1987 CC      R        Cutthroat trout          58     2.15\n#>  5  1987 CC      R        Cutthroat trout          93     6.9 \n#>  6  1987 CC      R        Cutthroat trout          86     5.9 \n#>  7  1987 CC      R        Cutthroat trout         107    10.5 \n#>  8  1987 CC      R        Cutthroat trout         131    20.6 \n#>  9  1987 CC      R        Cutthroat trout         103     9.55\n#> 10  1987 CC      R        Cutthroat trout         117    13   \n#> # ℹ 32,181 more rows\n```\n:::\n\n\n# {.background-no-title .inverse}\n\n![Artwork by [Allison Horst](https://twitter.com/allison_horst)](img/AllisonHorst/ggplot2_exploratory.png){width=60%}\n\n## `ggplot(data)`\n\nThe `ggplot()` function initializes a ggplot object. Every ggplot needs this function.\n\n. . .\n\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-3_76d4703286d1768d590a269f94069b20'}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n# or library(tidyverse)\n\nggplot(data = and_vertebrates)\n```\n:::\n\n\n- Empty plot because we did not specify the mapping of data variables\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-4_4decd169941827529bd6a839ba8e132d'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-4-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(x, y)`\n\nThe **aes**thetics define how data variables are mapped plot properties.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-5_c2d26871f28d3b00fa8ef4293d7afebc'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  mapping = aes(\n    x = length_1_mm,\n    y = weight_g\n  )\n)\n```\n:::\n\n\n- Map variable `length_1_mm` to x-axis and `weight_g` to y-axis\n- Default scales are automatically adapted to range of data\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-6_46cf356b1394bb38fc6a090f32a303d4'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-6-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(x, y)`\n\nThe **aes**thetics define how data variables are mapped plot properties.\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-7_a20fd827948f5e26d107f16254fa35e0'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  mapping = aes(\n    x = length_1_mm,\n    y = weight_g\n  )\n)\n```\n:::\n\n\nThis is the same but shorter:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-8_72f688c9237172a551599e17c63f28ac'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = length_1_mm, \n    y = weight_g)\n)\n```\n:::\n\n\nRemember argument matching by position?\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-9_cd12958e12593d74ecc81c1364f2e83d'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-9-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_*`\n\n`geoms` define how data points are represented. There are many different geoms to chose from\n\n![from [ggplot cheatsheet](https://raw.githubusercontent.com/rstudio/cheatsheets/master/data-visualization-2.1.pdf)](img/day2/geom_ggplot.png){width=60%}\n\n## `geom_point`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-10_26035ca51fdaf13ec8a4a7f1378ae652'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g\n  )\n) +\n  geom_point()\n```\n:::\n\n\n- New plot layers added with `+`\n- Warning that points could not be plotted due to missing values\n- `data` and `aes` defined in `ggplot` call are inherited to all plot layers\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-11_102089372c5d56567073a6598129a3af'}\n\n```\n#> Warning: Removed 13270 rows containing missing values (`geom_point()`).\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-11-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_point`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-12_fa0c6904893244f4a304b37931512da4'}\n\n```{.r .cell-code}\nggplot() +\n  geom_point(\n    data = and_vertebrates,\n    aes(\n      x = length_1_mm,\n      y = weight_g\n    )\n  )\n```\n:::\n\n\n- `data` and `aes` can also be local to a layer:\n\n:::{.fragment}\n\nHere, it does not make a difference in the result.\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-13_f0e4695b716035822dfe66fb83a0f520'}\n\n```\n#> Warning: Removed 13270 rows containing missing values (`geom_point()`).\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-13-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(color)`: mapping color to a variable\n\nLooks like there are two groups of data: **Map color of points to a variable** by adding it to aesthetics:\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-14_10840702d1438268b90f80bf91259656'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = species\n  )\n) +\n  geom_point()\n```\n:::\n\n\n- Map the `species` variable to the color aesthetic of the plot\n\n:::  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-15_60d018e05c23f3ff9142c54a726da304'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-15-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(size)`: mapping size to a variable\n\nWe can do the same with size:\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-16_7d9f2dbc640784b1ea36f3856c06ed92'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    size = species\n  )\n) +\n  geom_point()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-17_7e423778a00092c0ce005f33b558e2f6'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-17-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `aes(shape)`: mapping shape to a variable\n\nWe can do the same with shape:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-18_7974dbb31131f29df0b05e1c4a6db9d5'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    shape = species\n  )\n) +\n  geom_point()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-19_83f52d60cdefd325326e07ebdf598039'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-19-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Combine color, size and shape\n\nWe can also combine these aesthetics and map different variables\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-20_8785f568469f61aa69332a3f3cf5b2a7'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = unittype,\n    shape = species,\n    size = year\n  )\n) +\n  geom_point()\n```\n:::\n\n\n- This is a bit too much for this plot, but sometimes can be useful\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-21_22f45f8ffee5e3deb6f70d252066cfa7'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-21-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Changing  the scales of the aesthetics\n\nThe scales onto which the aesthetic elements are mapped can be changed.\n\n:::{.columns} \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-22_18a6d0497ebc2edf0f0f91af8437b1b1'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = species\n  )\n) +\n  geom_point()\n```\n:::\n\n\n- Exponential relationship?\n- How does it look like on the log scale?\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-23_21fc5a634087ab020bd629c7458228e5'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-23-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_x_log10`\n\nThe scales onto which the aesthetic elements are mapped can be changed.\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-24_5aec9f0db425895b4177ba392b2f05b5'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = species\n  )\n) +\n  geom_point() +\n  scale_x_log10() +\n  scale_y_log10()\n```\n:::\n\n\n- Scales can be changed for all elements of `aes`:\n\n:::{.fragment}\n\n<code><b>scale\\_[aes-name]{.highlight-ylw}\\_[scale-type]{.highlight-pink}</b></code>\n\nIn this example we scale the <b>[x]{.highlight-ylw}</b> and the  <b>[y]{.highlight-ylw}</b>  aesthetic to <b>[log10]{.highlight-pink}</b>.\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-25_1808369596a180b1fa65b8b636537d07'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-25-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_smooth`\n\nAdd a smoothing line that helps see patterns in the data\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-26_7a4cdd87addf3dd851712e2d1c9e393f'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = species\n  )\n) +\n  geom_point(alpha = 0.3) +\n  geom_smooth(method = \"lm\") +\n  scale_x_log10() +\n  scale_y_log10()\n```\n:::\n\n\n- With `method = \"lm\"`, a linear regression line is added\n- All geoms done separately for species because color is defined globally\n- Alpha makes points transparent (0-1)\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-27_c12cf04ad35a84e07641b560fe75a3ef'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-27-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nCompare groups using a boxplot\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-28_443e18b8fcc5c6eb7388b85cac3fa97e'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = species,\n    y = length_1_mm\n  )\n) +\n  geom_boxplot()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-29_c1b882f8e38fd64b774a6215a6aaaa99'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-29-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nCompare groups using a boxplot\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-30_a2ea74d4e23b2bff505a27a95292289b'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = species,\n    y = length_1_mm\n  )\n) +\n  geom_boxplot(notch = TRUE)\n```\n:::\n\n\n- If notches don't overlap, the medians of the groups are likely different\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-31_ae75d309af697ae1493b097dd1cbcbac'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-31-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nMap the `unittype` to the **color** aesthetic of the boxplot\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-32_57d4884f7cf1218b0f80b366b29f4374'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = species,\n    y = length_1_mm,\n    color = unittype\n  )\n) +\n  geom_boxplot()\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-33_913d8b8fb9dcb16e819b18078693958e'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-33-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_boxplot`\n\nMap the `unittype` to the **fill** aesthetic of the box\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-34_31f7f06b7a480ca9e4dda646f7455099'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = species,\n    y = length_1_mm,\n    fill = unittype\n  )\n) +\n  geom_boxplot(notch = TRUE)\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-35_65209326a31aa1172480e121c0b6b701'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-35-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_histogram`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-36_b40d0cd5e006ccafa6fda185100244f3'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = length_1_mm,\n    fill = section\n  )\n) +\n  geom_histogram()\n```\n:::\n\n\n- Careful: By default the histogram is stacked for the different groups!\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-37_0714877128fa2713ecacb12f6e3e1b60'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-37-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_histogram`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-38_5a8edda6914a510fc57561ac1b6a0390'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = length_1_mm,\n    fill = section\n  )\n) +\n  geom_histogram(\n    position = \"identity\",\n    alpha = 0.5\n  )\n```\n:::\n\n\n- Change the position of the histogram to `\"identity\"`, if you\ndon't want it stacked\n- `alpha` makes sure that you see overlapping areas\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-39_3674af039c075751d5ee8c38bc32b1e8'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-39-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `geom_tile`\n\nYou can create a simple heatmap with `geom_tile`\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-40_035559167024862790da831d64f9ef0f'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = section,\n    y = species,\n    fill = weight_g\n  )\n) +\n  geom_tile()\n```\n:::\n\n\n- Here we would have to choose a different color scheme to see differences\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-41_f96cfd69a8bde101b34b9b79728deb0c'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-41-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Small multiples with `facet_wrap`\n\nSplit your plots along one variable with `facet_wrap`\n\n. . .\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-42_53f09612fbe5059858daf6bd69a38f69'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = species\n  )\n) +\n  geom_point() +\n  facet_wrap(~section)\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-43_bda64f805577f0064d7a14d1a92dd1f3'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-43-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Small multiples with `facet_wrap`\n\nSplit your plots along one variable with `facet_wrap`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-44_b6ca4eb508f468cacfded527243fd89a'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = species\n  )\n) +\n  geom_point() +\n  facet_wrap(~section,\n    nrow = 2,\n    scales = \"free\"\n  )\n```\n:::\n\n\n- Specify number of rows and columns with `nrow`/`ncol`\n- Set separate scales for x and y with `scales` (one of `\"free\"`, `\"free_y\"`, `\"free_x\"`)\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-45_9d92f899ece6b463ce7aa72b1a552387'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-45-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Small multiples with `facet_grid`\n\nSplit your plots along two variables with `facet_grid`\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-46_5705c12a4d7497a5a166354a1a35bcec'}\n\n```{.r .cell-code}\nggplot(\n  data = and_vertebrates,\n  aes(\n    x = length_1_mm,\n    y = weight_g,\n    color = unittype\n  )\n) +\n  geom_point() +\n  facet_grid(section ~ species)\n```\n:::\n\n\n- `facet_grid(rows ~ columns)`\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-47_eba87043a0f9cf04576952bdbd9d0641'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-47-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n# Now you {.inverse}\n\n[Task 1.1 - 1.2 (45 min)]{.highlight-blue}<br>\n\n[Exploratory data analysis with the penguin data set]{.big-text}\n\n**Find the task description [here](https://selinazitrone.github.io/intro-r-data-analysis/sessions/07_ggplot.html)**\n\n(Don't do the \"Beautify\" task)\n\n\n# {.background-no-title .inverse}\n\n![Artwork by [Allison Horst](https://twitter.com/allison_horst)](img/AllisonHorst/ggplot2_masterpiece.png){width=60%}\n\n## Change appearance of points\n\n. . . \n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-48_4de3784b6300486753871bac4e959ef9'}\n\n```{.r .cell-code}\nggplot(and_vertebrates, aes(\n  x = length_1_mm,\n  y = weight_g\n)) +\n  geom_point(\n    size = 4,\n    shape = 17,\n    color = \"blue\",\n    alpha = 0.5\n  )\n```\n:::\n\n\n:::{.fragment}\n\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-49_f9a1bd3342af9ce49df01bc3992d59ba'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-49-1.png){width=576}\n:::\n:::\n\n\n[Shape](http://www.cookbook-r.com/Graphs/Shapes_and_line_types/) and [color](https://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf) codes\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-50_b7df6e40d1b7240a74f1e14d6bbe9b66'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-50-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Change color scale\n\nWe can also save a plot in a variable\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-51_408a7bde201815eb05b2905356302157'}\n\n```{.r .cell-code}\ng <- ggplot(and_vertebrates, aes(\n  x = length_1_mm,\n  y = weight_g,\n  color = species\n)) +\n  geom_point()\n\ng\n```\n:::\n\n\n<br>\n\n- Other plot layers can still be added to `g`\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-52_0cf9c59376d7eb78c399006dcb4314f9'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-52-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_color_viridis_d`\n\nChange the colors of the color aesthetic:\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-53_0f182b9cdb1cc647801f431353015511'}\n\n```{.r .cell-code}\ng +\n  scale_color_viridis_d(\n    option = \"cividis\"\n  )\n```\n:::\n\n\n<br>\n\n- The viridis color palette is designed for viewers with common forms of color blindness\n- Different options of viridis color palettes: \n`\"magma\"`, `\"inferno\"`, `\"plasma\"`, `\"viridis\"`, `\"cividis\"`\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-54_7a7ff2d1dc9d5e815bf1f47a3fed8cf3'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-54-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_color_manual`\n\nWe can also manually specify colors:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-55_9ce64655a13b211b1bef1dcbf75488e2'}\n\n```{.r .cell-code}\ng +\n  scale_color_manual(\n    values = c(\n      \"darkolivegreen4\",\n      \"darkorchid3\"\n    )\n  )\n```\n:::\n\n\n- Length of color vector has to match number of levels in your aesthetic\n\n:::{.nonincremental}\n\n:::{.fragment}\n\n- Specify colors \n  - Via their [name](https://derekogle.com/NCGraphing/resources/colors)\n  - Via their Hex color codes (use websites to generate your own color palettes, e.g. [here](https://coolors.co/))\n\n:::\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-56_54a45535951fe16d6bcb23147df42b5f'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-56-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Other color scales\n\nYou can use the `paletteer` package to access color scales from many packages.<br>\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-57_5b21775fc101392bc0d5f67ac075ffe1'}\n\n```{.r .cell-code}\n# install.packages(\"paletteer\")\nlibrary(paletteer)\ng <- g +\n  scale_color_paletteer_d(\n    palette = \"ggsci::default_uchicago\"\n  )\ng\n```\n:::\n\n\n- Use `scale_color_paletteer_d` for discrete and `scale_color_paletteer_c` for\ncontinuous color scales\n- Check out all palettes available [here](https://r-charts.com/color-palettes)\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-58_eedd6e7712d6d7c8b640f7faebe641d2'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-58-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `scale_fill_*` vs. `scale_color_*`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-59_cf2a033dd769ba12f349aa37a00af2ad'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = section,\n    y = length_1_mm,\n    color = unittype)) +\n  geom_boxplot() +\n  paletteer::scale_color_paletteer_d(\n    palette = \"ggsci::default_uchicago\"\n  )\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-59-1.png){width=604.8}\n:::\n:::\n\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-60_d3a70a68ba791eb95c25f3dc6d72ed50'}\n\n```{.r .cell-code}\nggplot(\n  and_vertebrates,\n  aes(\n    x = section,\n    y = length_1_mm,\n    fill = unittype)) +\n  geom_boxplot() +\n  paletteer::scale_fill_paletteer_d(\n    palette = \"ggsci::default_uchicago\"\n  )\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-60-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `labs`: Change axis and legend titles and add plot title\n\n\n\n::: {.cell output-location='slide' hash='ggplot_cache/revealjs/unnamed-chunk-61_6dff69925db6d7a90c556b5c3c11be34'}\n\n```{.r .cell-code}\ng <- g +\n  labs(\n    x = \"Length [mm]\",\n    y = \"Weight [g]\",\n    color = \"Species\",\n    title = \"Length-Weight relationship\",\n    subtitle = \"There seems to be an exponential relationship\",\n    caption = \"Data from the `lterdatasampler` package\"\n  )\ng\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-61-1.png){width=768}\n:::\n:::\n\n\n## `theme_*`: change appearance\n\n`ggplot2` offers many pre-defined themes that we can apply to change the appearance of a plot.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-62_e57bfd11712cb76c9c2d9dc1f3c4a4b4'}\n\n```{.r .cell-code}\ng +\n  theme_classic()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-63_1f18ae9f405e709ebcac7c872251e90c'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-63-1.png){width=604.8}\n:::\n:::\n\n\n::: \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-64_b8930327d0432bceea5f85c5320571d8'}\n\n```{.r .cell-code}\ng +\n  theme_bw()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-65_ab95383d6aa9a3ed1d6fcc9a82e7f83f'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-65-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `theme_*`: change appearance\n\n`ggplot2` offers many pre-defined themes that we can apply to change the appearance of a plot.\n\n\n:::{.columns}  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-66_e755ca80e9f2ab4cb3c98a9900298968'}\n\n```{.r .cell-code}\ng +\n  theme_minimal()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-67_0719066b25d1f53e9a4056f16c580719'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-67-1.png){width=604.8}\n:::\n:::\n\n\n:::  \n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-68_6bd929aabb8c5b6888b77acfe77d9fab'}\n\n```{.r .cell-code}\ng +\n  theme_dark()\n```\n:::\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-69_ff2f709a6091cff7f9fa89f52fb4145f'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-69-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `theme()`: customize theme\n\nYou can manually change a theme or even create an entire theme yourself. \nThe elements you can control in the theme are:\n\n:::{.nonincremental}\n\n- titles (plot, axis, legend, ...)\n- labels\n- background\n- borders\n- grid lines\n- legends\n\n:::\n\n:::{.fragment}\n\nIf you want a full list of what you can customize, have a look at \n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-70_8d630c881a4f32c10698ad6df58279f6'}\n\n```{.r .cell-code}\n?theme\n```\n:::\n\n\n- Look [here](https://github.com/claragranell/ggplot2/blob/main/ggplot_theme_system_cheatsheet.pdf) for an overview of the elements that you can change and the corresponding functions\n\n:::\n\n## `theme()`: customize theme\n\nTo edit a theme, just add another `theme()` layer to your plot.\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-71_592dbfe40b7b8b2d139be71aac7eeab7'}\n\n```{.r .cell-code}\ng +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    axis.text = element_text(\n      face = \"bold\"\n    ),\n    plot.background = element_rect(\n      fill = \"lightgrey\",\n      color = \"darkred\"\n    )\n  )\n```\n:::\n\n\n:::{.fragment}\n\nThe basic functioning of theme elements is:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-72_71e0e81c3634e03c888aec961c66ada0'}\n\n```{.r .cell-code}\ntheme(\n  element_name = element_function()\n)\n```\n:::\n\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-73_94d564df90883d93f8ca0e40827ba4e4'}\n::: {.cell-output-display}\n![](ggplot_files/figure-revealjs/unnamed-chunk-73-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## `theme_set()`: set global theme\n\nYou can set a global theme that will be applied to all ggplot objects in the current R session. \n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-74_d46aeacb8e7d44a40098bb67ee74a9ef'}\n\n```{.r .cell-code}\n# Globally set theme_minimal as the default theme\ntheme_set(theme_minimal())\n```\n:::\n\n\nAdd this to the beginning of your script.\n\n. . .\n\nYou can also specify some defaults, e.g. the text size:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-75_b67bab22a33c2c8699c0a3f3d328dd80'}\n\n```{.r .cell-code}\ntheme_set(theme_minimal(base_size = 16))\n```\n:::\n\n\nThis is very practical if you want to achieve a consistent look, e.g. for a scientific journal.\n\n## `ggsave()`\n\nA ggplot object can be saved on disk in different formats.\n\nWithout specifications:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-76_8d70a8302e3cbe286f16d8b208c383c8'}\n\n```{.r .cell-code}\n# save plot g in img as my_plot.pdf\nggsave(filename = \"img/my_plot.pdf\", plot = g)\n# save plot g in img as my_plot.png\nggsave(filename = \"img/my_plot.png\", plot = g)\n```\n:::\n\n\n. . .\n\nOr with specifications:\n\n\n::: {.cell hash='ggplot_cache/revealjs/unnamed-chunk-77_3de6fbcec6e3128d7139e1b9447ba015'}\n\n```{.r .cell-code}\n# save a plot named g in the img directory under the name my_plot.png\n# with width 16 cm and height 9 cm\nggsave(\n  filename = \"img/my_plot.png\",\n  plot = g,\n  width = 16,\n  heigth = 9,\n  units = \"cm\"\n)\n```\n:::\n\n\nHave a look at `?ggsave` to see all options.\n\n\n# Now you {.inverse}\n\n[Task 2 (30 min)]{.highlight-blue}<br>\n\n[Make your penguin plots more beautiful]{.big-text}\n\n**Find the task description [here](https://selinazitrone.github.io/intro-r-data-analysis/sessions/07_ggplot.html#beautify-the-plots)**\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}