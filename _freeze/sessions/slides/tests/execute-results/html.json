{
  "hash": "9aac276f662990a67cbc548f0ce53327",
  "result": {
    "markdown": "---\ntitle: \"Statistical tests\"\nsubtitle: \"Day 3 - Introduction to Data Analysis with R\"\nauthor: \"Selina Baldauf\"\ninstitute: \"Freie UniversitÃ¤t Berlin - Theoretical Ecology\"\ndate: today\ndate-format: long\nformat: \n  revealjs:\n    footer: \"Selina Baldauf // Statistical tests\"\n    highlight-style: breeze\n    mainfont: Cabinet Grotesk\n    slide-number: true\n    show-slide-number: all\n    incremental: true\n    self-contained: true\n    code-line-numbers: false\n    auto-stretch: false\n    scrollable: false\n    theme: slides.scss\n    fig-align: center\n    fig-width: 6.3\n    fig-height: 6.3\nexecute: \n  echo: true\n  warning: false\n  message: false\n  cache: true\nknitr: \n  opts_chunk: \n    collapse: true\n    comment: \"#>\"\nfrom: markdown+emoji\n---\n\n\n\n\n## Overview of tests\n\n![](img/day3/tests_overview.png)\n\n:::{.aside}\n\nPlease note the discussion going on about p-values as a basis for binary decisions.\n  See e.g. [here](https://www.nature.com/articles/s41592-019-0470-3) or [here](https://www.nature.com/articles/d41586-019-00857-9) as a starting point\n  \n:::\n\n# Tests for normal distribution{.inverse}\n\n## Test for normal distribution\n\nThere are **various tests** and the outcome might differ!\n\n. . .\n\n**Shapiro-Wilk-Test**\n\n- How much does variance of observed data differ from normal distribution\n- Specific test only for normal distribution\n- High power, also for few data points\n\n. . .\n\n**Visual tests: QQ-Plot**\n\n- Quantiles of observed data plotted against quantiles of normal distribution\n- Scientist has to decide if normal or not\n\n## The data\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\nA tibble with two variables\n\n:::{.nonincremental}\n\n- `normal`: 200 normally distributed values with mean 50 and standard deviation 5\n- `non_normal`: 200 uniformly distributed values between 45 and 55\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-1_f14cc482f006d188a9da34e15c11c44b'}\n\n:::\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-2_17fd9ee360a102228a009c7b7c8acbed'}\n::: {.cell-output-display}\n![](tests_files/figure-revealjs/unnamed-chunk-2-1.png){width=576}\n:::\n:::\n\n\n:::\n\n:::\n\n## Shapiro-Wilk-Test\n\n$H_0$: Data does not differ from a normal distribution\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-3_ec08b7783518ab72abed6d1d01388e65'}\n\n```{.r .cell-code}\nshapiro.test(mydata$normal)\n#> \n#> \tShapiro-Wilk normality test\n#> \n#> data:  mydata$normal\n#> W = 0.99076, p-value = 0.2298\n```\n:::\n\n\n:::{.fragment}\n\n:::{.nonincremental}\n\n- W: test statistic\n- p-value: probability to observe the data if $H_0$ was true\n\n:::\n\n:::\n\n:::{.fragment}\n\nThe data does not deviate significantly from a normal distribution (Shapiro-Wilk-Test, W = 0.991, p = 0.23).\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n::: {.fragment}\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-4_802563378613152794d7e729d48d535e'}\n\n```{.r .cell-code}\nshapiro.test(mydata$non_normal)\n#> \n#> \tShapiro-Wilk normality test\n#> \n#> data:  mydata$non_normal\n#> W = 0.95114, p-value = 2.435e-06\n```\n:::\n\n\n:::\n\n:::{.fragment}\n\nThe data deviates significantly from a normal distribution (Shapiro-Wilk-Test, W = 0.95, p < 0.001).\n\n:::\n\n:::\n\n:::\n\n## Visual test with QQ-Plot\n\nPoints should match the straight line. Small deviations are okay.\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-5_0b9945a0b325327cfb8c0b3b6efef2e3'}\n\n```{.r .cell-code}\n# ggplot(mydata, aes(sample = normal)) +\n#   stat_qq() + stat_qq_line()\nggpubr::ggqqplot(mydata$normal)\n```\n\n::: {.cell-output-display}\n![](tests_files/figure-revealjs/unnamed-chunk-5-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-6_cdc223286c103e1fe793180f9be5f3c2'}\n\n```{.r .cell-code}\n# ggplot(mydata,aes(sample = non_normal))+\n#   stat_qq() + stat_qq_line()\nggpubr::ggqqplot(mydata$non_normal)\n```\n\n::: {.cell-output-display}\n![](tests_files/figure-revealjs/unnamed-chunk-6-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n# Tests for equal variance{.inverse}\n\n## The data\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-7_bef63a2e266d387c715474d692638d59'}\n\n:::\n\n\nCounts of insects in agricultural units treated with different insecticides.\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\nCompare treatments A, B and C:\n\nCreate subsets before: count variable for each treatment as a vector\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-8_0174b4a9a88e765c593c8837faba0560'}\n\n```{.r .cell-code}\nTreatA <- filter(\n  InsectSprays,\n  spray == \"A\")$count\nTreatB <- filter(\n  InsectSprays,\n  spray == \"B\")$count\nTreatC <- filter(\n  InsectSprays,\n  spray == \"C\")$count\n```\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-9_46e3cfc426347a0cf143c2f0ed6839a7'}\n::: {.cell-output-display}\n![](tests_files/figure-revealjs/unnamed-chunk-9-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Test for equal variance\n\nFirst, test for normal distribution!\n\n**F-Test**\n\n- **Normal distribution** of groups\n- Calculates ratio of variances (if equal, ratio = 1)\n- p: How likely is ratio if variances were equal?\n\n**Levene test**\n\n- **Non-normal distribution** of groups\n- Compare difference between data sets with difference within data sets\n\n## Test for equal variance\n\nFirst, test for normal distribution\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-10_0cb3a3dec05bc2a4b73079140a7ec138'}\n\n```{.r .cell-code}\nshapiro.test(TreatA)\n#> \n#> \tShapiro-Wilk normality test\n#> \n#> data:  TreatA\n#> W = 0.95757, p-value = 0.7487\nshapiro.test(TreatB)\n#> \n#> \tShapiro-Wilk normality test\n#> \n#> data:  TreatB\n#> W = 0.95031, p-value = 0.6415\nshapiro.test(TreatC)\n#> \n#> \tShapiro-Wilk normality test\n#> \n#> data:  TreatC\n#> W = 0.92128, p-value = 0.2967\n```\n:::\n\n\nResult: All 3 treatments are normally distributed.\n\n## F-Test\n\n$H_0$: Variances do not differ between groups\n\n. . .\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-11_4d54f2c579535344575461a6e21f992e'}\n\n```{.r .cell-code}\nvar.test(TreatA, TreatB)\n#> \n#> \tF test to compare two variances\n#> \n#> data:  TreatA and TreatB\n#> F = 1.2209, num df = 11, denom df = 11, p-value = 0.7464\n#> alternative hypothesis: true ratio of variances is not equal to 1\n#> 95 percent confidence interval:\n#>  0.3514784 4.2411442\n#> sample estimates:\n#> ratio of variances \n#>            1.22093\n```\n:::\n\n\n. . .\n\n\n:::{.nonincremental}\n\n- F: test statistics, ratio of variances (if F = 1, variances are equal)\n- df: degrees of freedom of both groups\n- p-value: how likely is it to observe the data if $H_0$ was true?\n\n:::\n\nVariances of sprays A & B don't differ significantly (F-Test, $F_{11,11}$ = 1.22, p = 0.75)\n\n## F-Test\n\n$H_0$: Variances do not differ between groups\n\n. . .\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-12_b65f504d90c361a1552a27f9c6123ddf'}\n\n```{.r .cell-code}\nvar.test(TreatA, TreatC)\n#> \n#> \tF test to compare two variances\n#> \n#> data:  TreatA and TreatC\n#> F = 7.4242, num df = 11, denom df = 11, p-value = 0.002435\n#> alternative hypothesis: true ratio of variances is not equal to 1\n#> 95 percent confidence interval:\n#>   2.137273 25.789584\n#> sample estimates:\n#> ratio of variances \n#>           7.424242\n```\n:::\n\n\nVariances of sprays A & C differ significantly (F-Test, $F_{11,11}$ = 7.42, p = 0.002)\n\n# Test for equal means{.inverse}\n\n## Test for equal means\n\n**t-test**\n\n- **Normal distribution** AND **equal variance**\n- Compares if mean values are within range of standard error of each other\n- p: how likely is the difference if the means were equal\n\n. . .\n\n**Welch-Test**\n\n- **Normal distribution** but **unequal variance**\n- Corrected t-test\n\n. . .\n\n**Wilcoxon rank sum test**\n\n- **Non-normal distribution** and **unequal variance**\n- Compares rank sums of the data\n- Non-parametric\n\n## t-test\n\n$H_0$: The samples do not differ in their mean\n\n. . .\n\nTreatment A and B: **normally distributed** and **equal variance**\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-13_9e147dd87893e20f13a214debad8e457'}\n\n```{.r .cell-code}\nt.test(TreatA, TreatB, var.equal = TRUE)\n#> \n#> \tTwo Sample t-test\n#> \n#> data:  TreatA and TreatB\n#> t = -0.45352, df = 22, p-value = 0.6546\n#> alternative hypothesis: true difference in means is not equal to 0\n#> 95 percent confidence interval:\n#>  -4.643994  2.977327\n#> sample estimates:\n#> mean of x mean of y \n#>  14.50000  15.33333\n```\n:::\n\n\n:::{.nonincremental}\n\n- t: test statistics (t = 0 means equal means)\n- df: degrees of freedom of t-statistics\n- p-value: how likely is it to observe the data if $H_0$ was true?\n\n:::\n\n## t-test\n\n$H_0$: The samples do not differ in their mean\n\nTreatment A and B: **normally distributed** and **equal variance**\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-14_6ab4cf01fdcac80f003d41718d90d9b6'}\n\n```{.r .cell-code}\nt.test(TreatA, TreatB, var.equal = TRUE)\n#> \n#> \tTwo Sample t-test\n#> \n#> data:  TreatA and TreatB\n#> t = -0.45352, df = 22, p-value = 0.6546\n#> alternative hypothesis: true difference in means is not equal to 0\n#> 95 percent confidence interval:\n#>  -4.643994  2.977327\n#> sample estimates:\n#> mean of x mean of y \n#>  14.50000  15.33333\n```\n:::\n\n\n**Result:** The means of spray A and B don't differ significantly (t = -0.45, df = 22, p = 0.66)\n\n## Welch-Test\n\n$H_0$: The samples do not differ in their mean\n\n. . .\n\nTreatment A and C: **normally distributed** and **non-equal variance**\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-15_d415e41e33994562d8a1686c3d865131'}\n\n```{.r .cell-code}\nt.test(TreatA, TreatC, var.equal = FALSE)\n#> \n#> \tWelch Two Sample t-test\n#> \n#> data:  TreatA and TreatC\n#> t = 7.5798, df = 13.91, p-value = 2.655e-06\n#> alternative hypothesis: true difference in means is not equal to 0\n#> 95 percent confidence interval:\n#>   7.885546 14.114454\n#> sample estimates:\n#> mean of x mean of y \n#>      14.5       3.5\n```\n:::\n\n\n. . .\n\n**Result:** The means of spray A and C do differ significantly (t = 7.58, df = 13.9, p < 0.001)\n\n## Wilcoxon-rank-sum Test\n\n$H_0$: The samples do not differ in their mean\n\n. . .\n\nWe don't need the Wilcoxon test to compare treatment A and B, but for the sake of an example:\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-16_5fef0cd4a2e8eff7a704217e8f0d2db0'}\n\n```{.r .cell-code}\nwilcox.test(TreatA, TreatB)\n#> \n#> \tWilcoxon rank sum test with continuity correction\n#> \n#> data:  TreatA and TreatB\n#> W = 62, p-value = 0.5812\n#> alternative hypothesis: true location shift is not equal to 0\n```\n:::\n\n\n. . .\n\n**Result:** The means of spray A and B do not differ significantly (W = 62, p = 0.58)\n\n## Paired values\n\nAre there pairs of data points?\n\n**Example:** samples of invertebrates across various rivers before and after sewage plants.\n\n:::{.fragment}\n\n:::{.nonincremental}\n\n- For each plant, there is a pair of data points (before and after the plant)\n- Question: Is the change (before-after) significant\n\n:::\n\n:::\n\n. . .\n\nUse `paired = TRUE` in the test.\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-17_3d18fe84fccd7aa04d8437c68c18d313'}\n\n```{.r .cell-code}\nt.test(TreatA, TreatB, var.equal = TRUE, paired = TRUE)\nt.test(TreatA, TreatB, var.equal = FALSE, paired = TRUE)\nwilcox.test(TreatA, TreatB, paired = TRUE)\n```\n:::\n\n\nCareful: your treatment vector both have to have the same order\n\n## Plot test results with `ggsignif`\n\nThe [`ggsignif`](https://const-ae.github.io/ggsignif/) package offers a `geom_signif()`\nlayer that can be added to a ggplot to annotate significance levels\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-18_e63a75aa4569c490737318ea522fc5f0'}\n\n```{.r .cell-code}\n# install.packages(\"ggsignif\")\nlibrary(ggsignif)\n```\n:::\n\n\n## Plot test results with `geom_signif()`\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-19_801f125885bfc2fd8f97af1435802150'}\n\n:::\n\n::: {.cell output-location='column' hash='tests_cache/revealjs/unnamed-chunk-20_e337d63ef23a986442149fb5989d20df'}\n\n```{.r .cell-code  code-line-numbers=\"6-14\"}\nggplot(\n  InsectSprays,\n  aes(x = spray, y = count)\n) +\n  geom_boxplot(notch = TRUE) +\n  geom_signif( \n    comparisons = list(\n      c(\"A\", \"B\"), \n      c(\"B\", \"C\"), \n      c(\"A\", \"C\") \n    ), \n    map_signif_level = TRUE, \n    y_position = c(23, 24, 25) \n  )\n```\n\n::: {.cell-output-display}\n![](tests_files/figure-revealjs/unnamed-chunk-20-1.png){width=604.8}\n:::\n:::\n\n\n- By default, a Wilcoxon test is performed\n\n## Plot test results with `geom_signif()`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-21_a72e026f874d400bd14c9df87fd6667a'}\n\n```{.r .cell-code  code-line-numbers=\"12-15\"}\nggplot(\n  InsectSprays,\n  aes(x = spray, y = count)\n) +\n  geom_boxplot(notch = TRUE) +\n  geom_signif(\n    comparisons = list(\n      c(\"A\", \"B\"),\n      c(\"B\", \"C\"),\n      c(\"A\", \"C\")\n    ),\n    test = \"t.test\", \n    test.args = list( \n      var.equal = TRUE \n    ), \n    map_signif_level = TRUE,\n    y_position = c(23, 24, 25)\n  )\n```\n:::\n\n\n- `test`: run specific test\n- `test.args`: pass additional arguments in a list\n- `?geom_signif` for more options\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-22_9eb1347d53dbc2e996ff42eea8ec5129'}\n::: {.cell-output-display}\n![](tests_files/figure-revealjs/unnamed-chunk-22-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Plot mean +- se using `stat_summary`\n\nAnother way to plot the results is to plot mean and standard error of the mean:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-23_0c8decd03bb4cb081c17582b8049bfa2'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n  InsectSprays,\n  aes(x = spray, y = count)\n) +\n  stat_summary()\n```\n:::\n\n\n- By default `stat_summary` adds mean and standard error of the mean as pointrange\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-24_62ab12822c00096e3d8b15a6fed07d52'}\n::: {.cell-output-display}\n![](tests_files/figure-revealjs/unnamed-chunk-24-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Plot mean +- se using `stat_summary`\n\nAnother way to plot the results is to plot mean and standard error of the mean:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-25_c3ec29e79fc82719dbc8cbf5fd222c82'}\n\n```{.r .cell-code  code-line-numbers=\"5-14\"}\nggplot(\n  InsectSprays,\n  aes(x = spray, y = count)\n) +\n  stat_summary(\n    fun.data = mean_se,\n    geom = \"errorbar\"\n  ) +\n  stat_summary(\n    fun.y = mean,\n    geom = \"point\",\n    color = \"#28a87d\",\n    size = 4\n  )\n```\n:::\n\n\n:::{.nonincremental}\n\n- Inside `stat_summary`, define summary function\n  - `fun.data` for errorbars, `fun.y` for points (e.g. mean)\n\n:::\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n::: {.cell hash='tests_cache/revealjs/unnamed-chunk-26_f5c8bc9fa1ace703c130cf78cccedb2f'}\n::: {.cell-output-display}\n![](tests_files/figure-revealjs/unnamed-chunk-26-1.png){width=604.8}\n:::\n:::\n\n\n:::\n\n:::\n\n## Plot mean +- se using `stat_summary`\n\nAnother way to plot the results is to plot mean and standard error of the mean:\n\n\n::: {.cell output-location='column' hash='tests_cache/revealjs/unnamed-chunk-27_f232dfa31215bdebd92b951104c5fd29'}\n\n```{.r .cell-code  code-line-numbers=\"12\"}\nggplot(\n  InsectSprays,\n  aes(x = spray, y = count)\n) +\n  stat_summary(\n    fun.data = mean_se,\n    geom = \"errorbar\",\n    width = 0.3\n  ) +\n  stat_summary(\n    fun.y = mean,\n    geom = \"bar\",\n    size = 4\n  )\n```\n\n::: {.cell-output-display}\n![](tests_files/figure-revealjs/unnamed-chunk-27-1.png){width=604.8}\n:::\n:::\n\n\n## Plot mean +- se using `stat_summary`\n\nJust like before, you can also add a `geom_signif` to a barplot:\n\n\n::: {.cell output-location='column' hash='tests_cache/revealjs/unnamed-chunk-28_494090385bfb07bc5a19f2ea290ced45'}\n\n```{.r .cell-code  code-line-numbers=\"14-23\"}\nggplot(\n  InsectSprays,\n  aes(x = spray, y = count)\n) +\n  stat_summary(\n    fun.data = mean_se,\n    geom = \"errorbar\",\n    width = 0.3\n  ) +\n  stat_summary(\n    fun.y = mean,\n    geom = \"bar\"\n  ) +\n  ggsignif::geom_signif(\n    comparisons = list(\n      c(\"A\", \"B\"),\n      c(\"B\", \"C\"),\n      c(\"A\", \"C\")\n    ),\n    test = \"t.test\",\n    map_signif_level = TRUE,\n    y_position = c(17, 18, 19)\n  )\n```\n\n::: {.cell-output-display}\n![](tests_files/figure-revealjs/unnamed-chunk-28-1.png){width=604.8}\n:::\n:::\n\n\n\n# Now you {.inverse}\n\n[Task 1 (45) min)]{.highlight-blue}<br>\n\n[Statistical tests]{.big-text}\n\n**Find the task description [here](https://selinazitrone.github.io/intro-r-data-analysis/sessions/10_tests.html)**\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}