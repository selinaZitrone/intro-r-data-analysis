{
  "hash": "633d4bb5b4dfb68eb0de16da5e8b7d38",
  "result": {
    "markdown": "---\ntitle: \"Statistical tests\"\nsubtitle: \"Day 3 - Introduction to Data Analysis with R\"\nauthor: \"Selina Baldauf\"\ninstitute: \"Freie Universit√§t Berlin - Theoretical Ecology\"\ndate: today\ndate-format: long\nformat: \n  revealjs:\n    footer: \"Selina Baldauf // Statistical tests\"\n    highlight-style: breeze\n    mainfont: Cabinet Grotesk\n    slide-number: true\n    show-slide-number: all\n    incremental: true\n    self-contained: true\n    code-line-numbers: false\n    auto-stretch: false\n    scrollable: true\n    theme: slides.scss\n    fig-align: center\n    fig-width: 6.3\n    fig-height: 6.3\nexecute: \n  echo: true\n  warning: false\n  message: false\n  cache: true\nfrom: markdown+emoji\n---\n\n\n\n\n\n## Overview of tests\n\n![](img/day3/tests_overview.png)\n\n:::{.aside}\n\nPlease note the discussion going on about p-values as a basis for binary decisions.\n  See e.g. [here](https://www.nature.com/articles/s41592-019-0470-3) or [here](https://www.nature.com/articles/d41586-019-00857-9) as a starting point\n  \n:::\n\n# Tests for normal distribution{.inverse}\n\n## Test for normal distribution\n\nThere are **various tests** and the outcome might differ!\n\n. . .\n\n**Shapiro-Wilk-Test**\n\n- How much does variance of observed data differ from normal distribution\n- Specific test only for normal distribution\n- High power, also for few data points\n\n. . .\n\n**Visual tests: QQ-Plot**\n\n- Quantiles of observed data plotted against quantiles of normal distribution\n- Scientist has to decide if normal or not\n\n## The data\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\nCreate a tibble with two variables\n\n:::{.nonincremental}\n\n- `normal`: 200 normally distributed values with mean 50 and standard deviation 5\n- `non_normal`: 200 uniformly distributed values between 45 and 55\n\n:::\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-1_a7075042fd43772d43ac06d5d04d58cc'}\n\n```{.r .cell-code}\nset.seed(123)\nmydata <- tibble(\n  normal = rnorm(\n    n = 200,\n    mean = 50,\n    sd = 5\n  ),\n  non_normal = runif(\n    n = 200,\n    min = 45,\n    max = 55\n  )\n)\n```\n:::\n\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-2_6bfdcad10e4042e9398ed0d5b429d6eb'}\n::: {.cell-output-display}\n![](tests_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Shapiro-Wilk-Test\n\n$H_0$: Data does not differ from a normal distribution\n\n. . .\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-3_789f7cfbfb0d9cdf17d09db1dff516f9'}\n\n```{.r .cell-code}\nshapiro.test(mydata$normal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  mydata$normal\nW = 0.99076, p-value = 0.2298\n```\n:::\n:::\n\n\n\n:::{.fragment}\n\n:::{.nonincremental}\n\n- W: test statistic\n- p-value: probability to observe the data if $H_0$ was true\n\n:::\n\n:::\n\n:::{.fragment}\n\nThe data does not deviate significantly from a normal distribution (Shapiro-Wilk-Test, W = 0.991, p = 0.23).\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n::: {.fragment}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-4_c26086e2252021f6bc455af5ca07b1f8'}\n\n```{.r .cell-code}\nshapiro.test(mydata$non_normal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  mydata$non_normal\nW = 0.95114, p-value = 2.435e-06\n```\n:::\n:::\n\n\n\n:::\n\n:::{.fragment}\n\nThe data deviates significantly from a normal distribution (Shapiro-Wilk-Test, W = 0.95, p < 0.001).\n\n:::\n\n:::\n\n:::\n\n## Visual test with QQ-Plot\n\nPoints should match the straight line. Small deviations are okay.\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-5_ae7b582097a0e3710d16777b72b86945'}\n\n```{.r .cell-code}\n# ggplot(mydata, aes(sample = normal)) +\n#   stat_qq() + stat_qq_line()\nggpubr::ggqqplot(mydata$normal)\n```\n\n::: {.cell-output-display}\n![](tests_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-6_33b0baeba30121788f5af7d298f121ba'}\n\n```{.r .cell-code}\n# ggplot(mydata, aes(sample = non_normal))+\n#   stat_qq() + stat_qq_line()\nggpubr::ggqqplot(mydata$non_normal)\n```\n\n::: {.cell-output-display}\n![](tests_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n# Tests for equal variance{.inverse}\n\n## The data\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-7_169b8892434a19fccffa031ce8d4be75'}\n\n:::\n\n\n\nCounts of insects in agricultural units treated with different insecticides.\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\nCompare treatments A, B and C:\n\nCreate subsets before: count variable for each treatment as a vector\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-8_49454fa9011d793c3babeba16d4192f3'}\n\n```{.r .cell-code}\nTreatA <- filter(\n  InsectSprays,\n  spray == \"A\"\n)$count\nTreatB <- filter(\n  InsectSprays,\n  spray == \"B\"\n)$count\nTreatC <- filter(\n  InsectSprays,\n  spray == \"C\"\n)$count\n```\n:::\n\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-9_6b50b193d6ecc839c32bf026c1c900dc'}\n::: {.cell-output-display}\n![](tests_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Test for equal variance\n\nFirst, test for normal distribution!\n\n**F-Test**\n\n- **Normal distribution** of groups\n- Calculates ratio of variances (if equal, ratio = 1)\n- p: How likely is ratio if variances were equal?\n\n**Levene test**\n\n- **Non-normal distribution** of groups\n- Compare difference between data sets with difference within data sets\n\n## Test for equal variances\n\nIf we want to compare variances between treatments A, B and C, we first test for normal distribution\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-10_a4fc51a9b601c2ab5b1cad4906d837e4'}\n\n```{.r .cell-code}\nshapiro.test(TreatA)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  TreatA\nW = 0.95757, p-value = 0.7487\n```\n:::\n\n```{.r .cell-code}\nshapiro.test(TreatB)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  TreatB\nW = 0.95031, p-value = 0.6415\n```\n:::\n\n```{.r .cell-code}\nshapiro.test(TreatC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tShapiro-Wilk normality test\n\ndata:  TreatC\nW = 0.92128, p-value = 0.2967\n```\n:::\n:::\n\n\n\nResult: All 3 treatments are normally distributed.\n\n## F-Test\n\n$H_0$: Variances do not differ between groups\n\n. . .\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-11_104c5ba3f8be99e2fee7d7ac981c267c'}\n\n```{.r .cell-code}\nvar.test(TreatA, TreatB)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tF test to compare two variances\n\ndata:  TreatA and TreatB\nF = 1.2209, num df = 11, denom df = 11, p-value = 0.7464\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.3514784 4.2411442\nsample estimates:\nratio of variances \n           1.22093 \n```\n:::\n:::\n\n\n\n. . .\n\n\n:::{.nonincremental}\n\n- F: test statistics, ratio of variances (if F = 1, variances are equal)\n- df: degrees of freedom of both groups\n- p-value: how likely is it to observe the data if $H_0$ was true?\n\n:::\n\nResult: The variances of sprays A and B do not differ significantly (F-Test, $F_{11,11}$ = 1.22, p = 0.75)\n\n## F-Test\n\n$H_0$: Variances do not differ between groups\n\n. . .\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-12_d7af23af285c7a573cb93286f8b82507'}\n\n```{.r .cell-code}\nvar.test(TreatA, TreatC)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tF test to compare two variances\n\ndata:  TreatA and TreatC\nF = 7.4242, num df = 11, denom df = 11, p-value = 0.002435\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n  2.137273 25.789584\nsample estimates:\nratio of variances \n          7.424242 \n```\n:::\n:::\n\n\n\nResult: The variances of sprays A and C differ significantly (F-Test, $F_{11,11}$ = 7.42, p = 0.002)\n\n# Test for equal means{.inverse}\n\n## Test for equal means\n\n**t-test**\n\n- **Normal distribution** AND **equal variance**\n- Compares if mean values are within range of standard error of each other\n- p: how likely is the difference if the means were equal\n\n. . .\n\n**Welch-Test**\n\n- **Normal distribution** but **unequal variance**\n- Corrected t-test\n\n. . .\n\n**Wilcoxon rank sum test**\n\n- **Non-normal distribution** and **unequal variance**\n- Compares rank sums of the data\n- Non-parametric\n\n## t-test\n\n$H_0$: The samples do not differ in their mean\n\n. . .\n\nTreatment A and B: **normally distributed** and **equal variance**\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-13_1960072b858d18b21292d8fb23f8dbd8'}\n\n```{.r .cell-code}\nt.test(TreatA, TreatB, var.equal = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tTwo Sample t-test\n\ndata:  TreatA and TreatB\nt = -0.45352, df = 22, p-value = 0.6546\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -4.643994  2.977327\nsample estimates:\nmean of x mean of y \n 14.50000  15.33333 \n```\n:::\n:::\n\n\n\n:::{.nonincremental}\n\n- t: test statistics (t = 0 means equal means)\n- df: degrees of freedom of t-statistics\n- p-value: how likely is it to observe the data if $H_0$ was true?\n\n:::\n\n. . .\n\n**Result:** The means of spray A and B don't differ significantly (t = -0.45, df = 22, p = 0.66)\n\n## Welch-Test\n\n$H_0$: The samples do not differ in their mean\n\n. . .\n\nTreatment A and C: **normally distributed** and **non-equal variance**\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-14_573cf1f81d427c3aaab0d330414ef00d'}\n\n```{.r .cell-code}\nt.test(TreatA, TreatC, var.equal = FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  TreatA and TreatC\nt = 7.5798, df = 13.91, p-value = 2.655e-06\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n  7.885546 14.114454\nsample estimates:\nmean of x mean of y \n     14.5       3.5 \n```\n:::\n:::\n\n\n\n. . .\n\n**Result:** The means of spray A and C do differ significantly (t = 7.58, df = 13.9, p < 0.001)\n\n## Wilcoxon-rank-sum Test\n\n$H_0$: The samples do not differ in their mean\n\n. . .\n\nWe don't need the Wilcoxon test to compare treatment A and B, but for the sake of an example:\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-15_9a7d84f2a4b4ab4e3428f8e7cfa29925'}\n\n```{.r .cell-code}\nwilcox.test(TreatA, TreatB)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWilcoxon rank sum test with continuity correction\n\ndata:  TreatA and TreatB\nW = 62, p-value = 0.5812\nalternative hypothesis: true location shift is not equal to 0\n```\n:::\n:::\n\n\n\n. . .\n\n**Result:** The means of spray A and B do not differ significantly (W = 62, p = 0.58)\n\n## Paired values\n\nAre there pairs of data points?\n\n**Example:** samples of invertebrates across various rivers before and after sewage plants.\n\n:::{.fragment}\n\n:::{.nonincremental}\n\n- For each plant, there is a pair of data points (before and after the plant)\n- Question: Is the change (before-after) significant\n\n:::\n\n:::\n\nUse `paired = TRUE` in the test.\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-16_2ea97046b0c6830585cff0dc64c617a2'}\n\n```{.r .cell-code}\nt.test(TreatA, TreatB, var.equal = TRUE, paired = TRUE)\nt.test(TreatA, TreatB, var.equal = FALSE, paired = TRUE)\nwilcox.test(TreatA, TreatB, paired = TRUE)\n```\n:::\n\n\n\nCareful: your treatment vector both have to have the same order\n\n## Plot test results with `ggsignif`\n\nThe [`ggsignif`](https://const-ae.github.io/ggsignif/) package offers a `geom_signif()`\nlayer that can be added to a ggplot to annotate significance levels\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-17_8da078d5d01d74ce2f164e0e3cceaa6c'}\n\n```{.r .cell-code}\n# install.packages(\"ggsignif\")\nlibrary(ggsignif)\n```\n:::\n\n\n\n## Plot test results with `geom_signif()`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-18_e26239fa0939490028ba1041d0db0a45'}\n\n```{.r .cell-code  code-line-numbers=\"6-14\"}\nggplot(\n  InsectSprays,\n  aes(x = spray, y = count)\n) +\n  geom_boxplot(notch = TRUE) +\n  geom_signif( \n    comparisons = list(\n      c(\"A\", \"B\"), \n      c(\"B\", \"C\"), \n      c(\"A\", \"C\") \n    ), \n    map_signif_level = TRUE, \n    y_position = c(23, 24, 25) \n  )\n```\n:::\n\n\n\n- By default, a Wilcoxon test is performed\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-19_aeca73b1840fa749642c3a5a9a0c592d'}\n::: {.cell-output-display}\n![](tests_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Plot test results with `geom_signif()`\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-20_fd5a2a501d4a9e084cb00b6f4a26c481'}\n\n```{.r .cell-code  code-line-numbers=\"12-15\"}\nggplot(\n  InsectSprays,\n  aes(x = spray, y = count)\n) +\n  geom_boxplot(notch = TRUE) +\n  geom_signif(\n    comparisons = list(\n      c(\"A\", \"B\"),\n      c(\"B\", \"C\"),\n      c(\"A\", \"C\")\n    ),\n    test = \"t.test\", \n    test.args = list( \n      var.equal = TRUE \n    ), \n    map_signif_level = TRUE,\n    y_position = c(23, 24, 25)\n  )\n```\n:::\n\n\n\n- `test`: run specific test\n- `test.args`: pass additional arguments in a list\n- `?geom_signif` for more options\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-21_3a89574a7a0762b8183c2eb4ce492322'}\n::: {.cell-output-display}\n![](tests_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Plot mean +- se using `stat_summary`\n\nAnother way to plot the results is to plot mean and standard error of the mean:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-22_c864396950429da2b345b892a97021f4'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(\n  InsectSprays,\n  aes(x = spray, y = count)\n) +\n  stat_summary()\n```\n:::\n\n\n\n- By default `stat_summary` adds mean and standard error of the mean as pointrange\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-23_e8d7cf76dcf7e168d21dcde231237947'}\n::: {.cell-output-display}\n![](tests_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Plot mean +- se using `stat_summary`\n\nAnother way to plot the results is to plot mean and standard error of the mean:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-24_f6aa36b61960222204083449e2430a94'}\n\n```{.r .cell-code}\nggplot(\n  InsectSprays,\n  aes(x = spray, y = count)\n) +\n  stat_summary(\n    fun.data = mean_se,\n    geom = \"errorbar\"\n  ) +\n  stat_summary(\n    fun.y = mean,\n    geom = \"point\",\n    color = \"#28a87d\",\n    size = 4\n  )\n```\n:::\n\n\n\n:::{.nonincremental}\n\n- Inside `stat_summary`, define summary function\n  - `fun.data` for errorbars\n  - `fun.y` for point values (e.g. mean)\n- Define the geom that represents the summary\n\n:::\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-25_52c242cae4cefd362fab1056415fff9c'}\n::: {.cell-output-display}\n![](tests_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Plot mean +- se using `stat_summary`\n\nAnother way to plot the results is to plot mean and standard error of the mean:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-26_38cb7095887a9879406b235a00d327a8'}\n\n```{.r .cell-code  code-line-numbers=\"12\"}\nggplot(\n  InsectSprays,\n  aes(x = spray, y = count)\n) +\n  stat_summary(\n    fun.data = mean_se,\n    geom = \"errorbar\",\n    width = 0.3\n  ) +\n  stat_summary(\n    fun.y = mean,\n    geom = \"bar\", #<<\n    size = 4\n  )\n```\n:::\n\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-27_37191093a386d51b253c29d4deed5e09'}\n::: {.cell-output-display}\n![](tests_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n## Plot mean +- se using `stat_summary`\n\nJust like before, you can also add a `geom_signif` to a barplot:\n\n:::{.columns}\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-28_c3f73676223df5df9752642e54bc4dd1'}\n\n```{.r .cell-code}\nggplot(\n  InsectSprays,\n  aes(x = spray, y = count)\n) +\n  stat_summary(\n    fun.data = mean_se,\n    geom = \"errorbar\",\n    width = 0.3\n  ) +\n  stat_summary(\n    fun.y = mean,\n    geom = \"bar\"\n  ) +\n  ggsignif::geom_signif(\n    comparisons = list(\n      c(\"A\", \"B\"),\n      c(\"B\", \"C\"),\n      c(\"A\", \"C\")\n    ),\n    test = \"t.test\",\n    map_signif_level = TRUE,\n    y_position = c(17, 18, 19)\n  )\n```\n:::\n\n\n\n:::\n\n:::{.column width=\"50%\"}\n\n\n\n::: {.cell hash='tests_cache/html/unnamed-chunk-29_a64c048219e969ef7c067c64f521f004'}\n::: {.cell-output-display}\n![](tests_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n:::\n\n# Now you {.inverse}\n\n[Task 1 (45) min)]{.highlight-blue}<br>\n\n[Statistical tests]{.big-text}\n\n**Find the task description [here](https://selinazitrone.github.io/intro-r-data-analysis/03_tasks_controller.html#statistical-tests)**\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}