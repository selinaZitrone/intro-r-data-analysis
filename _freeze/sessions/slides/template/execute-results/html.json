{
  "hash": "e2c1bd76220adac38bbe54d818ce3607",
  "result": {
    "markdown": "---\ntitle: \"Introduction to version control with Git\"\nsubtitle: \"Day 2: Branching, Merging and collaboration workflows\"\nauthor: \"Selina Baldauf\"\ninstitute: \"Freie UniversitÃ¤t Berlin - Theoretical Ecology\"\ndate: today\ndate-format: long\nformat: \n  revealjs:\n    footer: \"Branching, Merging and Collaboration with Git\"\n    highlight-style: breeze\n    mainfont: Cabinet Grotesk\n    slide-number: true\n    show-slide-number: all\n    incremental: true\n    self-contained: true\n    code-line-numbers: false\n    auto-stretch: false\n    scrollable: true\n    fig-align: center\n    theme: slides.scss\nexecute: \n  echo: true\n  warning: false\n  message: false\n  collapse: true\nfrom: markdown+emoji\n---\n\n\n# {.background-no-title .inverse}\n\n![Artwork by [Allison Horst](https://twitter.com/allison_horst)](img/AllisonHorst/ggplot2_exploratory.png){widht=70%}\n\n## `ggplot(data)`\n\nThe `ggplot()` function initializes a ggplot object. Every ggplot needs this function.\n\n. . .\n\n\n::: {.cell output-location='column-fragment' hash='template_cache/revealjs/unnamed-chunk-1_8cf8bce09d9db52a24832bbf62e05d21'}\n\n```{.r .cell-code}\nlibrary(ggplot2) # or library(tidyverse)\nlibrary(lterdatasampler)\n\nggplot(data = and_vertebrates)\n```\n\n::: {.cell-output-display}\n![](template_files/figure-revealjs/unnamed-chunk-1-1.png){width=604.8}\n:::\n:::\n\n\n- Empty plot because we did not specify the mapping of data variables\n\n\n# Examples in light mode\n\n> And a block quote\n\n## Heading 2\n\n### Heading 3\n\nSome text with [some yellow]{.highlight-ylw} and with [some green]{.highlight-grn} and [some pink]{.highlight-pink} and [some blue]{.highlight-blue}\n\n[And a test of ]{.circle-sketch-highlight} a circle highlight.\n\n#### Heading 4\n\nHere we have [a link](google.com) and some **bold** and **italic**\n\n```r\nlibrary(ggplot2)\nggplot(penugins, aes(1:10,1:0)) +\n  geom_point(\"test\")\n```\n\n\n::: {.cell hash='template_cache/revealjs/unnamed-chunk-2_95e4a706a35962e1e04c2dd1231347bf'}\n\n```{.r .cell-code}\nhead(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n```\n:::\n:::\n\n\nHere we have some `inline code`, or even real code `mean(1:10)`\n\n# Examples in dark mode {.inverse}\n\n> And a block quote\n\n## Heading 2 {.inverse}\n\n### Heading 3\n\nSome text with [some yellow]{.highlight-ylw} and with [some green]{.highlight-grn} and [some pink]{.highlight-pink} and [some blue]{.highlight-blue}\n\n\n[And a test of ]{.circle-sketch-highlight} a circle highlight.\n\n#### Heading 4\n\nHere we have [a link](google.com) and some **bold** and **italic**\n\n```r\nlibrary(ggplot2)\nggplot(penugins, aes(1:10,1:0)) +\n  geom_point()\n```\n\nHere we have some `inline code`, or even real code `mean(1:10)`\n\n# Examples in blue mode {.inverse}\n\n> And a block quote\n\n## Heading 2 {.inverse}\n\n### Heading 3\n\nSome text with [some yellow]{.highlight-ylw} and with [some green]{.highlight-grn} and [some pink]{.highlight-pink} and [some blue]{.highlight-blue}\n\n\n[And a test of ]{.circle-sketch-highlight} a circle highlight.\n\n#### Heading 4\n\nHere we have [a link](google.com) and some **bold** and **italic**\n\n```r\nlibrary(ggplot2)\nggplot(penugins, aes(1:10,1:0)) +\n  geom_point()\n```\n\nHere we have some `inline code`, or even real code `mean(1:10)`\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}