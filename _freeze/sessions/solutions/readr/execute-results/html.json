{
  "hash": "c7fcd9fbcf5fb6365749a3e3b8b0c445",
  "result": {
    "markdown": "---\ntitle: \"Solution to readr task\"\ncode-line-numbers: false\n---\n\n\n## Write a tibble to disk\n\nFirst, I load the `tidyverse` package to have all readr functions available. Then I will write the tibble that I called `animals` from the [previous task](02_data-tibbles.qmd).\n\n\n\n\n::: {.cell hash='readr_cache/html/unnamed-chunk-2_d339e943dd5d9414b9d32ef83d456ada'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n::: {.cell hash='readr_cache/html/unnamed-chunk-3_7cbd396372db732aa53b342fb7ba7613'}\n\n```{.r .cell-code}\n# The variable animals with the tibble from the previous task\nanimals\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 28 × 3\n   species        bodywt_kg brainwt_kg\n   <chr>              <dbl>      <dbl>\n 1 MountainBeaver       1.4     0.0081\n 2 Cow                465       0.423 \n 3 GreyWolf            36.3     0.120 \n 4 Goat                27.7     0.115 \n 5 GuineaPig            1       0.0055\n 6 Diplodocus       11700       0.05  \n 7 AsianElephant     2547       4.60  \n 8 Donkey             187.      0.419 \n 9 Horse              521       0.655 \n10 PotarMonkey         10       0.115 \n# ℹ 18 more rows\n```\n:::\n:::\n\n\nNow I write the `animals` table into my project's `data/` folder:\n\n\n\n::: {.cell hash='readr_cache/html/unnamed-chunk-4_b7382c624a2ff6c810b20465488d8356'}\n\n```{.r .cell-code}\nwrite_csv(x = animals, file = \"data/animals.csv\") # write as csv\nwrite_tsv(x = animals, file = \"data/animals.txt\") # write as txt\n```\n:::\n\n\n:::{.callout-note}\n\nIn order for this command to work, the `/data` directory must already be present in your working directory. Otherwise the path cannot be found\nand you will get an error message.\n\n:::\n\n\n## Read data into R\n\nNow I take the same data that I just wrote and read it back into R:\n\n\n::: {.cell hash='readr_cache/html/unnamed-chunk-5_d8d0f274255101ba81b3cb276edb25a4'}\n\n```{.r .cell-code}\nanimals_csv <- read_csv(\"data/animals.csv\") # read the csv\nanimals_tsv <- read_tsv(\"data/animals.txt\") # read the txt\n```\n:::\n\n\n:::{.callout-note}\n\nI saved the data that I read in in two new variables: `animals_csv` and `animals_tsv`. You always need to do this, otherwise you don't have the data available for the following analysis.\n\n:::\n\n## Extra\n\nYou can use the **Files pane** to import csv files. Just click on the csv file and then click on the **Import Dataset** button:\n\n\n::: {.cell hash='readr_cache/html/unnamed-chunk-6_6069e712e31311397dce29ad1a4ca2ab'}\n::: {.cell-output-display}\n![](../tasks/img/readr_import_button.png){width=344}\n:::\n:::\n\n\nNow have the possibility to import a data set via a graphical user interface. \n\n\n::: {.cell hash='readr_cache/html/unnamed-chunk-7_f09244eb89495a2b288c20739875ffad'}\n::: {.cell-output-display}\n![](../tasks/img/readr_import_options.png){width=729}\n:::\n:::\n\n\nThis is quite useful because you can preview your data and make sure that all the options are set correctly for importing. You can do this if you are not sure about the correct `read_*()` function arguments. \n\nJust play with these different options of reading data into R and find one that fits you best.\n\n:::{callout-warning}\n\nThis workflow is not reproducible. If you use this option to import data, you have to click the button every time you want to import the data set.\n\nImporting the data set directly in your script using R code is the much better option. But check out the **Code Preview** window in the bottom right. You can just copy the code from there, paste it in your script and next time use the code instead of the graphical user interface.\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}