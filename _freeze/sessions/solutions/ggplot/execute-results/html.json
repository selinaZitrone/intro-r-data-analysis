{
  "hash": "603165ba7494ea7bbaa89a99dc614cb7",
  "result": {
    "markdown": "---\ntitle: \"Solution to ggplot tasks\"\ncode-line-numbers: false\n---\n\n\n## Get started\n\nFirst we need to load the packages needed to complete this task:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-1_52f61377fc1b492d5100e5bedafcebe2'}\n\n```{.r .cell-code}\n# install.packages(\"tidyverse\")\n# install.packages(\"palmerpenguins\")\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n```\n:::\n\n\n- Have a look at the penguin data set\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-2_b2f5ee55cffe9a1c07f0032734e209ff'}\n\n```{.r .cell-code}\npenguins\n```\n:::\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-3_e806f07253b2c6181e9bf6a37e797724'}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n6 Adelie  Torgersen           39.3          20.6               190        3650\n# ℹ 338 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n:::\n:::\n\n\n## Exploratory plotting\n\n### Relationship between bill length and bill depth (scatterplot)\n\nWhat is the relationship between bill length and bill depth?\n\nFirst, I created a scatter plot and added a linear regression line. From the plot, \nIt looks like bill length is decreasing with increasing bill depth.\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-4_dcf66a166eef65d0d21a4cdf73fe2b6c'}\n\n```{.r .cell-code}\n# Bill length vs. bill depth scatterplot with regression line\nggplot(\n  data = penguins,\n  aes(\n    x = bill_length_mm,\n    y = bill_depth_mm\n  )\n) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_smooth()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-5_a9418ed5aad3645935bdbe2ddde11568'}\n\n```{.r .cell-code}\n# or short\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n```\n:::\n\n\nIf we add the color aesthetic locally to the point layer, only this layer will be affected by it. The regression line is not separated by species but still calculated and plotted for all data points together:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-6_6827efca3fdcee729128f0f66d18c32c'}\n\n```{.r .cell-code}\n# Bill length vs. bill depth scatterplot with regression line\n# color as aesthetic local to the point layer\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\n  geom_point(aes(color = species)) +\n  geom_smooth(method = \"lm\", se = FALSE)\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nWe can see an example of the Simpson's paradox here. If you don't consider species, it looks like the bill depth decreases with bill length. But after separating the data by species, we see that the effect is actually the opposite.\n\nTo draw separate regression lines for the species, we need to either add the color aesthetic to the smooth layer as well, or define the color aesthetic globally in the top layer `ggplot` call:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-7_c3da984cdc982cf89fb59a7705c0d1ef'}\n\n```{.r .cell-code}\n# Define color aesthetic once globally\nggplot(penguins, aes(\n  x = bill_length_mm,\n  y = bill_depth_mm,\n  color = species\n)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n### Difference in flipper length between species (boxplot)\n\nIs there a difference in flipper length between the species?\n\nFirst I created a simple boxplot with notches:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-8_4d88f95eb91fefc7836354fa63fdbbf4'}\n\n```{.r .cell-code}\n# Basic boxplot of flipper length with notches\nggplot(penguins, aes(species, flipper_length_mm)) +\n  geom_boxplot(notch = TRUE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nA `geom_point` with `position = position_jitter()` will add the individual data points to the plot. It's important to set a seed here to get the same result for the point position on the x-axis every time. Otherwise your plot is not reproducible.\nI added `width = 0.5` to make the jittering a bit narrower:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-9_322d36f2df29ef36adb11f8da6c90e7f'}\n\n```{.r .cell-code}\nggplot(penguins, aes(species, flipper_length_mm)) +\n  geom_boxplot() +\n  geom_point(position = position_jitter(\n    seed = 123,\n    width = 0.5\n  ))\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n### Differences between body mass of male and female penguins (boxplot)\n\nAre male penguins heavier than female penguins? And is this different between the 3 species?\n\nFirst, a basic boxplot of the body mass by sex:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-10_08f61da242e75f379f2fdba1130e33ed'}\n\n```{.r .cell-code}\n#|warning: false\n# Basic boxplot of body mass for penguins of different sex\nggplot(penguins, aes(x = sex, y = body_mass_g)) +\n  geom_boxplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nI added species as color aesthetic:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-11_2cbb93f54c7db152be974bb315cfa328'}\n\n```{.r .cell-code}\n#|warning: false\nggplot(penguins, aes(x = sex, \n                     y = body_mass_g)) +\n  geom_boxplot(aes(color = species))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nAlternatively, I could also specify the fill aesthetic:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-12_a8c77e702944acc4ca80b6baa4746f7b'}\n\n```{.r .cell-code}\n#|warning: false\nggplot(penguins, aes(x = sex, y = body_mass_g)) +\n  geom_boxplot(aes(fill = species))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nSpecies as facets:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-13_ae21c74cc9f65b2f3388173ac367f76b'}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = sex, y = body_mass_g)) +\n  geom_boxplot() +\n  facet_wrap(~species)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nI added a violin plot in the background to show the distribution of the \ndatapoints. To make the violins visible, I changed the width of the boxplot\nto 0.4:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-14_09b978ceab4be2df69d7d4da565c2ac0'}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = sex, y = body_mass_g)) +\n  geom_violin() +\n  geom_boxplot(width = .04) +\n  facet_wrap(~species)\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n### Distribution of flipper length between species (histogram)\n\nMake a histogram of the the flipper length separated by species.\n\nThe default histogram is a histogram where the different groups are stacked:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-15_2494358b25e28e0d1a4180509d8f79f2'}\n\n```{.r .cell-code}\nggplot(penguins, aes(\n  x = flipper_length_mm,\n  fill = species\n)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n```\n:::\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nTo unstack the groups, you have to use `position = \"identity\"`. Also, it's a good idea\nto make the histogram slightly transparent (`alpha = 0.4`) to see the overlapping\nareas.\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-16_6087b58eb13d8519ecc8c38e0b184904'}\n\n```{.r .cell-code}\nggplot(penguins, aes(\n  x = flipper_length_mm,\n  fill = species\n)) +\n  geom_histogram(\n    alpha = 0.5,\n    position = \"identity\"\n  )\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nSeparated by facets (no need to specify the position here, because there is only one group per plot).\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-17_6b31cbcc65f72c9c627ce71ba9b8b6c1'}\n\n```{.r .cell-code}\nggplot(penguins, aes(\n  x = flipper_length_mm,\n  fill = species\n)) +\n  geom_histogram() +\n  facet_wrap(~species, ncol = 1)\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n### Penguin flipper length by species and sex (heatmap)\n\nFor this data it does not make too much sense, but a heat map would look like this:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-18_9fb13d0daa060a6f97357959b8037fa5'}\n\n```{.r .cell-code}\nggplot(penguins, aes(\n  x = species,\n  y = sex,\n  fill = flipper_length_mm\n)) +\n  geom_tile()\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n## Beautify the plots\n\n### Beautify plots from Task 1\n\nHere are just some examples of how to make the plots from before prettier. Of course there a many other options as well.\n\n**Example one: Boxplot of flipper length and species**\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-19_12c84e61c628633441f33c958163c101'}\n\n```{.r .cell-code}\nggplot(penguins, aes(species, flipper_length_mm, color = species)) +\n  geom_boxplot(width = 0.3) +\n  geom_point(\n    alpha = 0.5,\n    position = position_jitter(width = 0.1, seed = 123)\n  ) +\n  ggsci::scale_color_uchicago() +\n  labs(x = \"Species\", y = \"Flipper length (mm)\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nWhat was changed compared to the basic plot?\n\n- Add color for each species by setting a global `color` aesthetic\n- Make boxes and jitter points less wide by setting `width` for both layers\n- Make jitter points slightly transparent by specifying `alpha = 0.5` for the jitter layer\n- Change the color to nicer colors from the `ggsci` package\n- Change from default theme to `theme_minimal()`\n- Remove the legend with `legend.position = \"none\"`\n- Change the axis labels with `labs()`\n\n\n**Example two: Reproducing the plot from the presentation**\n\nThe following code is adapted from the [palmerpengins package website](https://allisonhorst.github.io/palmerpenguins/articles/examples.html).\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-20_519c305c7de6364e8bd54d928ad3c4dd'}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  aes(\n    x = bill_length_mm,\n    y = bill_depth_mm,\n    color = species,\n    shape = species\n  )\n) +\n  geom_point(size = 3, alpha = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_color_manual(values = c(\"darkorange\", \"purple\", \"cyan4\")) +\n  labs(\n    title = \"Penguin bill dimensions\",\n    subtitle = \"Bill length and depth for Adelie, Chinstrap and \n    Gentoo Penguins at Palmer Station LTER\",\n    x = \"Bill length (mm)\",\n    y = \"Bill depth (mm)\",\n    color = \"Penguin species\",\n    shape = \"Penguin species\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = c(0.85, 0.15),\n    legend.background = element_rect(fill = \"white\", color = NA)\n  )\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\nWhat was changed compared to the basic plot?\n\n- Make points larger and slightly transparent by setting `size` and `alpha` for the point layer\n- Change to custom color scale\n- Add title and subtitle with `labs`\n- Change title of x-axis, y-axis and legend for color and shape aesthetic with `labs`\n- Use `theme_minimal()` instead of default theme\n- Change legend position to bottom right corner within the plot\n  - Positions are relative to the bottom left corner of the plot\n  - 0.85 (85% of plot width) to the right\n  - 0.15 (15% of plot height) towards the top\n\n## Save one of the plots on your machine\n\nExample with one of the plots from above:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-21_1577850d122211fbe46214ca79201552'}\n\n```{.r .cell-code}\n# First save the plot in a variable\nflipper_box <- ggplot(penguins, aes(species, flipper_length_mm, color = species)) +\n  geom_boxplot(width = 0.3) +\n  geom_jitter(alpha = 0.5, position = position_jitter(width = 0.2, seed = 123)) +\n  ggsci::scale_color_uchicago() +\n  labs(x = \"Species\", y = \"Flipper length (mm)\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n:::\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-22_5f3300a1366b83851708bb7645b4aea6'}\n\n```{.r .cell-code}\n# save as png in /img directory of the project\nggsave(filename = \"img/flipper_box.png\", plot = flipper_box)\n# save as pdf in /img directory of the project\nggsave(filename = \"img/flipper_box.pdf\", plot = flipper_box)\n```\n:::\n\n\n\n## Some more examples\n\n**Histogram**\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-23_b99c33c050a62e1b301bf9605974d176'}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = flipper_length_mm, fill = species)) +\n  geom_histogram(alpha = 0.6) +\n  ggsci::scale_fill_d3() +\n  labs(\n    y = \"Frequency\",\n    x = \"Flipper length [mm]\",\n    fill = \"Penguin species\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_bin()`).\n```\n:::\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n**Heat map**\n\nFor the penguin data set a heat map does not make that much sense. But an example would be:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-24_e93065dde079d83149238d3236ba6c6e'}\n\n```{.r .cell-code}\nggplot(penguins, aes(\n  x = species,\n  y = sex,\n  fill = flipper_length_mm\n)) +\n  geom_tile() +\n  scale_fill_viridis_c() +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n### The `patchwork` package\n\nWith the `patchwork` package, you can combine multiple ggplots into one plot. The package allows you to add annotations to the plot and to control the layout and appearance.\n\nBelow you find a simple example of two different penugin scatterplots. For more explanation and an overview of what is possible with the package, please have a look at the [package documentation](https://patchwork.data-imaginist.com/)\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-25_310534d995f410a583df0211b759481c'}\n\n```{.r .cell-code}\nlibrary(patchwork)\n# Collecting legends and defining a common theme\nplot_1 <- ggplot(penguins, aes(\n  x = bill_length_mm, y = bill_depth_mm,\n  color = species\n)) +\n  geom_point()\n\nplot_2 <- ggplot(penguins, aes(\n  x = bill_length_mm, y = body_mass_g,\n  color = species\n)) +\n  geom_point()\n\n# Simple combination of 2 plots in patchwork\nplot_1 + plot_2\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\nAnd a more complex example where shared layers are defined for both plots:\n\n\n::: {.cell hash='ggplot_cache/html/unnamed-chunk-26_2b59c5333dda490cf71b2bf81d6db06c'}\n\n```{.r .cell-code}\n# more complex combination with annotation and definition of shared layers\nfinal_plot <- plot_1 + plot_2 +\n  plot_layout(guides = \"collect\") +\n  plot_annotation(tag_levels = \"a\", tag_prefix = \"(\", tag_suffix = \")\") &\n  theme_minimal() &\n  scale_color_manual(values = c(\"darkorange\", \"purple\", \"cyan4\")) &\n  labs(\n    color = \"Penguin species\"\n  ) &\n  theme(\n    plot.tag.position = c(0.1, 0.95),\n    plot.tag = element_text(face = \"bold\")\n  )\n\nfinal_plot\n```\n\n::: {.cell-output-display}\n![](ggplot_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n## References\n\nCheck out the [package website](https://allisonhorst.github.io/palmerpenguins/articles/examples.html) of the `palmerpenguin` package. They have more nice examples of data visualizations that you can do with ggplot.\n\nHorst AM, Hill AP, Gorman KB (2020). palmerpenguins: Palmer Archipelago (Antarctica) penguin data. R package version 0.1.0. https://allisonhorst.github.io/palmerpenguins/. doi: 10.5281/zenodo.3960218.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}