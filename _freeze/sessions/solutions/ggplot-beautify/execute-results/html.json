{
  "hash": "0e6cd6ad0c74daf02e0f6deabd2d255b",
  "result": {
    "markdown": "### 1.4 Beautify the plots\n\n#### 1.4.1 Beatuify plots from 1.3\n\nHere are just some examples of how to make the plots from before prettier. Of course there a many other options as well.\n\n**Example one: Boxplot of flipper length and species**\n\n\n::: {.cell hash='ggplot-beautify_cache/html/unnamed-chunk-1_cf3830263e00e29091c6a43282e5749e'}\n\n```{.r .cell-code}\nggplot(penguins, aes(species, flipper_length_mm, color = species)) +\n  geom_boxplot(width = 0.3) +\n  geom_point(\n    alpha = 0.5,\n    position = position_jitter(width = 0.1, seed = 123)\n  ) +\n  ggsci::scale_color_uchicago() +\n  labs(x = \"Species\", y = \"Flipper length (mm)\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(penguins, aes(species, flipper_length_mm, color = species)): could not find function \"ggplot\"\n```\n:::\n:::\n\n\nWhat was changed compared to the basic plot?\n\n- Add color for each species by setting a global `color` aesthetic\n- Make boxes and jitter points less wide by setting `width` for both layers\n- Make jitter points slightly transparent by specifying `alpha = 0.5` for the jitter layer\n- Change the color to nicer colors from the `ggsci` package\n- Change from default theme to `theme_minimal()`\n- Remove the legend with `legend.position = \"none\"`\n- Change the axis labels with `labs()`\n\n\n**Example two: Reproducing the plot from the presentation**\n\nThe following code is adapted from the [palmerpengins package website](https://allisonhorst.github.io/palmerpenguins/articles/examples.html).\n\n\n::: {.cell hash='ggplot-beautify_cache/html/unnamed-chunk-2_d88c2852a2ff091bcb8968f0240cd844'}\n\n```{.r .cell-code}\nggplot(\n  data = penguins,\n  aes(\n    x = bill_length_mm,\n    y = bill_depth_mm,\n    color = species,\n    shape = species\n  )\n) +\n  geom_point(size = 3, alpha = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  scale_color_manual(values = c(\"darkorange\", \"purple\", \"cyan4\")) +\n  labs(\n    title = \"Penguin bill dimensions\",\n    subtitle = \"Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER\",\n    x = \"Bill length (mm)\",\n    y = \"Bill depth (mm)\",\n    color = \"Penguin species\",\n    shape = \"Penguin species\"\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = c(0.85, 0.15),\n    legend.background = element_rect(fill = \"white\", color = NA)\n  )\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(data = penguins, aes(x = bill_length_mm, y = bill_depth_mm, : could not find function \"ggplot\"\n```\n:::\n:::\n\n\nWhat was changed compared to the basic plot?\n\n- Make points larger and slightly transparent by setting `size` and `alpha` for the point layer\n- Change to custom color scale\n- Add title and subtitle with `labs`\n- Change title of x-axis, y-axis and legend for color and shape aesthetic with `labs`\n- Use `theme_minimal()` instead of default theme\n- Change legend position to bottom right corner within the plot\n  - Positions are relative to the bottom left corner of the plot\n  - 0.85 (85% of plot width) to the right\n  - 0.15 (15% of plot height) towards the top\n\n### 1.5 Save one of the plots on your machine\n\nExample with one of the plots from above:\n\n\n::: {.cell hash='ggplot-beautify_cache/html/unnamed-chunk-3_30bae74868ef3d15b15104b95874b6a2'}\n\n```{.r .cell-code}\nflipper_box <- ggplot(penguins, aes(species, flipper_length_mm, color = species)) +\n  geom_boxplot(width = 0.3) +\n  geom_jitter(alpha = 0.5, position = position_jitter(width = 0.2, seed = 123)) +\n  ggsci::scale_color_uchicago() +\n  labs(x = \"Species\", y = \"Flipper length (mm)\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(penguins, aes(species, flipper_length_mm, color = species)): could not find function \"ggplot\"\n```\n:::\n:::\n\n::: {.cell hash='ggplot-beautify_cache/html/unnamed-chunk-4_10fc8dad0e67f3db1751a8575353b559'}\n\n```{.r .cell-code}\n# save as png in /img directory of the project\nggsave(filename = \"./img/flipper_box.png\", flipper_box)\n# save as pdf in /img directory of the project\nggsave(filename = \"./img/flipper_box.pdf\", flipper_box)\n```\n:::\n\n\n\n### Some more examples\n\n**Histogram**\n\n\n::: {.cell hash='ggplot-beautify_cache/html/unnamed-chunk-5_ec73002d13c085e7215b021f3fbec88f'}\n\n```{.r .cell-code}\nggplot(penguins, aes(x = flipper_length_mm, fill = species)) +\n  geom_histogram(alpha = 0.6) +\n  ggsci::scale_fill_d3() +\n  labs(\n    y = \"Frequency\",\n    x = \"Flipper length [mm]\",\n    fill = \"Penguin species\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(penguins, aes(x = flipper_length_mm, fill = species)): could not find function \"ggplot\"\n```\n:::\n:::\n\n\n**Heat map**\n\nFor the penguin data set a heat map does not make that much sense. But an example would be:\n\n\n::: {.cell hash='ggplot-beautify_cache/html/unnamed-chunk-6_9e876099d5f13c522d3b9b825fb66962'}\n\n```{.r .cell-code}\nggplot(penguins, aes(\n  x = species,\n  y = sex,\n  fill = flipper_length_mm\n)) +\n  geom_tile() +\n  scale_fill_viridis_c() +\n  theme_classic()\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in ggplot(penguins, aes(x = species, y = sex, fill = flipper_length_mm)): could not find function \"ggplot\"\n```\n:::\n:::\n\n\n### The `plotly` package\n\nYou can use the `plotly package` to create interactive plots where you can e.g. hover over an area of your plot with the mouse and the respective values will be displayed.\n\nTo get started, you have to install the plotly package\n\n\n::: {.cell hash='ggplot-beautify_cache/html/unnamed-chunk-7_abb93e9932358e3500e66c32ffef2081'}\n\n```{.r .cell-code}\ninstall.packages(\"plotly\")\n```\n:::\n\n\nYou can use any ggplot and wrap it in the `ggplotly` function from the `plotly` package to make it interactive, e.g.\n\n\n::: {.cell hash='ggplot-beautify_cache/html/unnamed-chunk-8_eaeb8d13b37d9aa9aedc873074ec405f'}\n\n```{.r .cell-code}\nplotly::ggplotly(flipper_box)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'flipper_box' not found\n```\n:::\n:::\n\n\n### The `patchwork` package\n\nWith the `patchwork` package, you can combine multiple ggplots into one plot. The package allows you to add annotations to the plot and to control the layout and appearance.\n\nBelow you find a simple example of two different penugin scatterplots. For more explanation and an overview of what is possible with the package, please have a look at the [package documentation](https://patchwork.data-imaginist.com/)\n\n\n::: {.cell hash='ggplot-beautify_cache/html/unnamed-chunk-9_9c91f278dd47985e9eb247459e22321c'}\n\n```{.r .cell-code}\n# library(patchwork)\n# # Collecting legends and defining a common theme\n# plot_1 <- ggplot(penguins, aes(\n#   x = bill_length_mm, y = bill_depth_mm,\n#   color = species\n# )) +\n#   geom_point()\n# \n# plot_2 <- ggplot(penguins, aes(\n#   x = bill_length_mm, y = body_mass_g,\n#   color = species\n# )) +\n#   geom_point()\n# \n# # Simple combination of 2 plots in patchwork\n# plot_1 + plot_2\n# \n# # more complex combination with annotation and definition of shared layers\n# final_plot <- plot_1 + plot_2 +\n#   plot_layout(guides = \"collect\") +\n#   plot_annotation(tag_levels = \"a\", tag_prefix = \"(\", tag_suffix = \")\") &\n#   theme_minimal() &\n#   scale_color_manual(values = c(\"darkorange\", \"purple\", \"cyan4\")) &\n#   labs(\n#     color = \"Penguin species\"\n#   ) &\n#   theme(\n#     plot.tag.position = c(0.1, 0.95),\n#     plot.tag = element_text(face = \"bold\")\n#   )\n```\n:::\n\n\n\n### References\n\nCheck out the [package website](https://allisonhorst.github.io/palmerpenguins/articles/examples.html) of the `palmerpenguin` package. They have more nice examples of data visualizations that you can do with ggplot.\n\nHorst AM, Hill AP, Gorman KB (2020). palmerpenguins: Palmer Archipelago (Antarctica) penguin data. R package version 0.1.0. https://allisonhorst.github.io/palmerpenguins/. doi: 10.5281/zenodo.3960218.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}