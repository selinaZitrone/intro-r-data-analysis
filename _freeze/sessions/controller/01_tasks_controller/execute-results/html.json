{
  "hash": "5ac1cb4fc56c9fc1b10b817298f0e010",
  "result": {
    "markdown": "---\ntitle: \"Tasks for day 1\"\nformat:\n  html:\n    toc: true\n    toc_float: true\n    number_sections: true\nexecute: \n  echo: false\n---\n\n\n## 1 Set up an RStudio project\n\n\n\n### 1.1 Change settings\n\nBefore you get started, there is an important setting that you should change in RStudio.\nBy default, RStudio will save the workspace of your current session in an `.Rdata` file. This would allow you to start the next session exactly where you left it by loading the `.Rdata` file.\n\nThis is not a good default. We always want to start R from a clean slate to ensure reproducibility and minimize error potential.\n\nIn RStudio go to `Tools -> Global Options -> General` and \n\n- Remove the check mark for \"Restore `.RData` into workspace at startup\"\n- **Never** save workspace to `.RData` on exit\n\n::: {.cell hash='01_tasks_controller_cache/html/unnamed-chunk-1_b48ff85c8292f49825619575ae47d34b'}\n::: {.cell-output-display}\n![](../tasks/img/setting_workspace.png){width=320}\n:::\n:::\n\n### 1.2 Create an RStudio project\n\nCreate an RStudio project for all the scripts, notes, data, etc. from this workshop.\n\n- Create a project in a directory of your choice following the instructions from the slides\n- Use the `File` pane in RStudio to create a basic folder structure in your project which will be filled with files in the next days\n  - E.g. create the folders `data`, `R`, `documents`,...\n  - You can always change the structure of your project later, but for now, we want some basic folders that we can navigate\n\nYou can add files to your project either directly in RStudio, or in the file explorer of your operating system.\n\n### 1.3 Add an R script to the project\n\n- Create a new R script and save it in the appropriate folder of your project (e.g. `scripts` or `R`)\n- Copy and paste the code from below into your script\n  - Don't worry if you don't understand the code yet, we will learn all this later\n- Run the code in the script line by line. Try both, running code using the `Run` button (in the top right corner of your script pane) and the keyboard shortcut `Ctrl/Cmd + Enter/Return`\n  - For each line that you run, observe what is happening to the different panes (console, environment, ...) in RStudio. Can you explain what is happening?\n\n::: {.cell hash='01_tasks_controller_cache/html/unnamed-chunk-2_f75b7645c3453299dc3d03cbbd7ce58c'}\n\n```{.r .cell-code}\n# Look at the first lines of the iris dataset\nhead(iris)\n# What is the iris dataset -> Call the help\n?iris\n# How many rows and columns does the data set have?\nrownum <- nrow(iris)\ncolnum <- ncol(iris)\nprint(paste0(\"The iris dataset has \", rownum, \" rows and \", colnum, \" columns.\"))\n# Some summary statistics on the iris data set\nsummary(iris)\n\n# create a plot\nplot(iris$Petal.Length, iris$Petal.Width,\n  xlab = \"Petal Length\",\n  ylab = \"Petal Width\",\n  main = \"Petal Width vs Petal Length\",\n  pch = 20,\n  col = ifelse(iris$Species == \"setosa\", \"coral1\",\n    ifelse(iris$Species == \"virginica\", \"cyan4\",\n      ifelse(iris$Species == \"versicolor\",\n        \"darkgoldenrod2\", \"grey\"\n      )\n    )\n  )\n)\n# add a legend\nlegend(\"bottomright\", c(\"setosa\", \"virginica\", \"versicolor\"),\n  col = c(\"coral1\", \"cyan4\", \"darkgoldenrod2\"), pch = 20\n)\n```\n:::\n\n\n## 2 Working with vectors\n\n\n\nYou have the following three vectors:\n\n- `species`: name of the species\n- `bodywt_kg`: body weight of the species in kg\n- `brainwt_g`: brain weight of the species in g\n\n::: {.cell hash='01_tasks_controller_cache/html/unnamed-chunk-3_e01b3483298240b33c5b67ac6f54fc21'}\n\n```{.r .cell-code}\nspecies <- c(\n  \"MountainBeaver\", \"Cow\", \"GreyWolf\", \"Goat\",\n  \"GuineaPig\", \"Diplodocus\", \"AsianElephant\", \"Donkey\",\n  \"Horse\", \"PotarMonkey\", \"Cat\", \"Giraffe\",\n  \"Gorilla\", \"Human\", \"AfricanElephant\", \"Triceratops\",\n  \"RhesusMonkey\", \"Kangaroo\", \"GoldenHamster\", \"Mouse\",\n  \"Rabbit\", \"Sheep\", \"Jaguar\", \"Chimpanzee\",\n  \"Rat\", \"Brachiosaurus\", \"Mole\", \"Pig\"\n)\n\nbodywt_kg <- c(\n  1.4, 465, 36.3, 27.7, 1., 11700, 2547, 187.1,\n  521, 10, 3.3, 529, 207, 62, 6654, 9400,\n  6.8, 35, 0.1, 0.02, 2.5, 55.5, 100, 52.2,\n  0.3, 87000, 0.1, 192\n)\n\nbrainwt_kg <- c(\n  0.0081, 0.423, 0.1195, 0.115, 0.0055, 0.05, \n  4.603, 0.419, 0.655, 0.115, 0.0256, 0.68, \n  0.406, 1.32, 5.712, 0.07, 0.179, 0.056,\n  0.001, 0.0004, 0.0121, 0.175, 0.157, 0.44,\n  0.0019, 0.1545, 0.003, 0.18\n)\n```\n:::\n\nCopy and paste the vectors into your R script and solve the following tasks.\n\n## Tasks\n\n- Check which of the following animals are contained in the `species` vector:\n\n::: {.cell hash='01_tasks_controller_cache/html/unnamed-chunk-4_452f51b46f0703668a1f55bb7b916890'}\n\n```{.r .cell-code}\nanimals_to_check <- c(\"Snail\", \"Goat\", \"Chimpanzee\", \"Rat\", \"Dragon\", \"Eagle\")\n```\n:::\n\n- Calculate mean and standard deviation of the brain weight\n  - Hint: have a look at the summary slides to find the functions\n- Which species have a brain weight larger than the mean brain weight of all species?\n- Calculate the ratio of brain weight to body weight in percent for all animals and save the result in a new vector\n- Are there any animals with a larger brain to body weight ratio than humans? If yes, which ones?\n  - Hint: calculate the ratio for humans and save it in a separate variable first\n\n---\n\n## Extras\n\n- Round the ratio vector to 4 decimal places with the `round` function\n  - Type `?round` into the console to open the help of the `round` function\n- Which animal has the smallest brain to body weight ratio?\n  - Hint: have a look at the `min` function\n- Add the following three animals to the data vectors\n\n::: {.cell hash='01_tasks_controller_cache/html/unnamed-chunk-5_3807569e528715952dcbd4a50073c674'}\n\n```{.r .cell-code}\nspecies_new <- c(\"Eagle\", \"Snail\", \"Lion\")\nbrainwt_kg_new <- c(0.0004, NA, 0.5)\nbodywt_kg_new <- c(18, 0.01, 550)\n```\n:::\n\n Now calculate the mean brain weight again. Can you explain what happens? Can you fix it?\n \n - Hint: have a look at `?mean`\n\n\n## 3 Tibbles\n\n\n\n## 1 Getting started with tibbles\n\nBefore you start the task:\n\n- Install the tibble package by calling `install.packages(\"tibble\")` in the console.\n- Open your script for the task and put `library(tibble)` on top\n- Execute this line and the tibble package is loaded into your R session and ready to use\n\n## 2 Creating a tibble\n\nUse the vectors `species`, `brainwt_kg`, `bodywt_kg` from before and combine them in a tibble.\n\n## 3 Exploring the tibble\n\nExplore the tibble you created with the different functions that you learned in the presentation.\nYou can for example try \n\n- `view()` and explore what you can do in the view window that opens: searching, filtering, sorting columns\n- `str()` to view the structure of the data\n- `summary()`\n- ...\n\n\n## 4 Indexing and selecting\n\nNow let's try some indexing on the data.\n\nSelect\n\n- Rows 1, 5, and 7 and the columns `species` and `bodywt_kg`\n- select rows 1 to 10, all columns\n- select the column `bodywt_kg` as a vector\n\n---\n\n## Extra\n\n- Select the last column of the last row without using the row and column index (so don't use any numbers in this command)\n- Calculate the mean of the `bodywt_kg` column and save it in a variable\n- Add a new column to the data called `ratio_body_brain` with the ratio of the columns `bodywt_kg` and `brainwt_kg`\n\n\n## 4 Reading and writing tibbles\n\n\n\n## 1 Getting started with readr and the tidyverse\n\nBefore you start, make sure to install the `tidyverse` packages by calling\n\n::: {.cell hash='01_tasks_controller_cache/html/unnamed-chunk-6_17aa6d8c9488015e99af511551935056'}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\n```\n:::\n\nThis will install readr along with other tidyverse packages.\n\nRemember to put `library(tidyverse)` (or `library(readr)`) on top of your script to access the readr functions.\n\n### 2 Write a tibble to disk\n\nLet's use the `animals` tibble from the previous task and write it into the data folder in our project.\n\nBefore writing the tibble\n\n- Create a `data` sub-directory in your RStudio project (if you don't have one yet)\n  - Hint: You can do that from within RStudio by using the `New Folder` button in the *Files pane* \n\nNow write the `animals` tibble to that `/data` sub-directory as `animals.csv` using a comma separator.\n\nCheck if the file was written into the correct folder.\n\n## 3 Read data into R\n\nNow, try to read the data set back into R using the appropriate `read_*` function.\n\n---\n\n#### Extra\n\nNavigate to your `data` directory using the `Files` pane of RStudio.\nClick on both the `.csv` file that you just saved there. What can you do? Try the `Import Dataset` button and see what you can do there.\n\n- Try reading some `xlsx` or `csv` tables that you have on your machine into R\n\n\n# Reference\n\nWolfram Research, \"Sample Data: Animal Weights\" from the Wolfram Data Repository (2016) https://doi.org/10.24097/wolfram.43616.data\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}