{
  "articles": [
    {
      "path": "01_solutions_controller.html",
      "title": "Solutions for day 1",
      "author": [],
      "contents": "\r\n\r\nContents\r\n2 Working with vectors\r\n3 Tibbles\r\n4 Reading and writing tibbles\r\nReference\r\n\r\n\r\n\r\n\r\n2 Working with vectors\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n3 Tibbles\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n4 Reading and writing tibbles\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\nReference\r\nWolfram Research, “Sample Data: Animal Weights” from the Wolfram Data Repository (2016) https://doi.org/10.24097/wolfram.43616.data\r\n\r\n\r\n\r\n",
      "last_modified": "2023-02-25T22:02:54+01:00"
    },
    {
      "path": "01_tasks_controller.html",
      "title": "Tasks for day 1",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 Set up an RStudio project\r\n1.1 Change settings\r\n1.2 Create an RStudio project\r\n1.3 Add an R script to the project\r\n\r\n2 Working with vectors\r\n3 Tibbles\r\n3.1 Getting started with tibbles\r\n3.2 Creating a tibble\r\n3.3 Exploring the tibble\r\n3.4 Indexing and selecting\r\n\r\n4 Reading and writing tibbles\r\n3.1 Getting started with readr and the tidyverse\r\n3.2 Write a tibble to disk\r\n3.3 Read data into R\r\n\r\nReference\r\n\r\n1 Set up an RStudio project\r\n1.1 Change settings\r\nBefore you get started, there is an important setting that you should change in RStudio.\r\nBy default, RStudio will save the workspace of your current session in an .Rdata file. This would allow you to start the next session exactly where you left it by loading the .Rdata file.\r\nThis is not a good default. We always want to start R from a clean slate to ensure reproducibility and minimize error potential.\r\nIn RStudio go to Tools -> Global Options -> General and\r\nRemove the check mark for “Restore .RData into workspace at startup”\r\nNever save workspace to .RData on exit\r\n\r\n\r\n\r\n1.2 Create an RStudio project\r\nCreate an RStudio project for all the scripts, notes, data, etc. from this workshop.\r\nCreate a project in a directory of your choice following the instructions from the slides\r\nUse the File pane in RStudio to create a basic folder structure in your project which will be filled with files in the next days\r\nE.g. create the folders data, R, documents,…\r\nYou can always change the structure of your project later, but for now, we want some basic folders that we can navigate\r\n\r\nYou can add files to your project either directly in RStudio, or in the file explorer of your operating system.\r\n1.3 Add an R script to the project\r\nCreate a new R script and save it in the appropriate folder of your project (e.g. scripts or R)\r\nCopy and paste the code from below into your script\r\nDon’t worry if you don’t understand the code yet, we will learn all this later\r\n\r\nRun the code in the script line by line. Try both, running code using the Run button (in the top right corner of your script pane) and the keyboard shortcut Ctrl/Cmd + Enter/Return\r\nFor each line that you run, observe what is happening to the different panes (console, environment, …) in RStudio. Can you explain what is happening?\r\n\r\n\r\n\r\n# Look at the first lines of the iris dataset\r\nhead(iris)\r\n# What is the iris dataset -> Call the help\r\n?iris\r\n# How many rows and columns does the data set have?\r\nrownum <- nrow(iris)\r\ncolnum <- ncol(iris)\r\nprint(paste0(\"The iris dataset has \", rownum, \" rows and \", colnum, \" columns.\"))\r\n# Some summary statistics on the iris data set\r\nsummary(iris)\r\n\r\n# create a plot\r\nplot(iris$Petal.Length, iris$Petal.Width,\r\n  xlab = \"Petal Length\",\r\n  ylab = \"Petal Width\",\r\n  main = \"Petal Width vs Petal Length\",\r\n  pch = 20,\r\n  col = ifelse(iris$Species == \"setosa\", \"coral1\",\r\n    ifelse(iris$Species == \"virginica\", \"cyan4\",\r\n      ifelse(iris$Species == \"versicolor\",\r\n        \"darkgoldenrod2\", \"grey\"\r\n      )\r\n    )\r\n  )\r\n)\r\n# add a legend\r\nlegend(\"bottomright\", c(\"setosa\", \"virginica\", \"versicolor\"),\r\n  col = c(\"coral1\", \"cyan4\", \"darkgoldenrod2\"), pch = 20\r\n)\r\n\r\n\r\n\r\n2 Working with vectors\r\n\r\n\r\nYou have the following three vectors:\r\nspecies: name of the species\r\nbodywt_kg: body weight of the species in kg\r\nbrainwt_g: brain weight of the species in g\r\n\r\n\r\nspecies <- c(\r\n  \"MountainBeaver\", \"Cow\", \"GreyWolf\", \"Goat\",\r\n  \"GuineaPig\", \"Diplodocus\", \"AsianElephant\", \"Donkey\",\r\n  \"Horse\", \"PotarMonkey\", \"Cat\", \"Giraffe\",\r\n  \"Gorilla\", \"Human\", \"AfricanElephant\", \"Triceratops\",\r\n  \"RhesusMonkey\", \"Kangaroo\", \"GoldenHamster\", \"Mouse\",\r\n  \"Rabbit\", \"Sheep\", \"Jaguar\", \"Chimpanzee\",\r\n  \"Rat\", \"Brachiosaurus\", \"Mole\", \"Pig\"\r\n)\r\n\r\nbodywt_kg <- c(\r\n  1.4, 465, 36.3, 27.7, 1., 11700, 2547, 187.1,\r\n  521, 10, 3.3, 529, 207, 62, 6654, 9400,\r\n  6.8, 35, 0.1, 0.02, 2.5, 55.5, 100, 52.2,\r\n  0.3, 87000, 0.1, 192\r\n)\r\n\r\nbrainwt_kg <- c(\r\n  0.0081, 0.423, 0.1195, 0.115, 0.0055, 0.05, \r\n  4.603, 0.419, 0.655, 0.115, 0.0256, 0.68, \r\n  0.406, 1.32, 5.712, 0.07, 0.179, 0.056,\r\n  0.001, 0.0004, 0.0121, 0.175, 0.157, 0.44,\r\n  0.0019, 0.1545, 0.003, 0.18\r\n)\r\n\r\n\r\nCopy and paste the vectors into your R script and solve the following tasks.\r\nTasks\r\nCheck which of the following animals are contained in the species vector:\r\n\r\n\r\nanimals_to_check <- c(\"Snail\", \"Goat\", \"Chimpanzee\", \"Rat\", \"Dragon\", \"Eagle\")\r\n\r\n\r\nCalculate mean and standard deviation of the brain weight\r\nHint: have a look at the summary slides to find the functions\r\n\r\nWhich species have a brain weight larger than the mean brain weight of all species?\r\nCalculate the ratio of brain weight to body weight in percent for all animals and save the result in a new vector\r\nAre there any animals with a larger brain to body weight ratio than humans? If yes, which ones?\r\nHint: calculate the ratio for humans and save it in a separate variable first\r\n\r\nExtras\r\nRound the ratio vector to 4 decimal places with the round function\r\nType ?round into the console to open the help of the round function\r\n\r\nWhich animal has the smallest brain to body weight ratio?\r\nHint: have a look at the min function\r\n\r\nAdd the following three animals to the data vectors\r\n\r\n\r\nspecies_new <- c(\"Eagle\", \"Snail\", \"Lion\")\r\nbrainwt_kg_new <- c(0.0004, NA, 0.5)\r\nbodywt_kg_new <- c(18, 0.01, 550)\r\n\r\n\r\nNow calculate the mean brain weight again. Can you explain what happens? Can you fix it?\r\nHint: have a look at ?mean\r\n\r\n3 Tibbles\r\n3.1 Getting started with tibbles\r\nBefore you start the task:\r\nInstall the tibble package by calling install.packages(\"tibble\") in the console.\r\nOpen your script for the task and put library(tibble) on top\r\nExecute this line and the tibble package is loaded into your R session and ready to use\r\n3.2 Creating a tibble\r\nUse the vectors species, brainwt_kg, bodywt_kg from before and combine them in a tibble.\r\n3.3 Exploring the tibble\r\nExplore the tibble you created with the different functions that you learned in the presentation.\r\nYou can for example try\r\nview() and explore what you can do in the view window that opens: searching, filtering, sorting columns\r\nstr() to view the structure of the data\r\nsummary()\r\n…\r\n3.4 Indexing and selecting\r\nNow let’s try some indexing on the data.\r\nSelect\r\nRows 1, 5, and 7 and the columns species and bodywt_kg\r\nselect rows 1 to 10, all columns\r\nselect the column bodywt_kg as a vector\r\nExtra\r\nSelect the last column of the last row without using the row and column index (so don’t use any numbers in this command)\r\nCalculate the mean of the bodywt_kg column and save it in a variable\r\nAdd a new column to the data called ratio_body_brain with the ratio of the columns bodywt_kg and brainwt_kg\r\n\r\n4 Reading and writing tibbles\r\n3.1 Getting started with readr and the tidyverse\r\nBefore you start, make sure to install the tidyverse packages by calling\r\n\r\n\r\ninstall.packages(\"tidyverse\")\r\n\r\n\r\nThis will install readr along with other tidyverse packages.\r\nRemember to put library(tidyverse) (or library(readr)) on top of your script to access the readr functions.\r\n3.2 Write a tibble to disk\r\nLet’s use the animals tibble from the previous task and write it into the data folder in our project.\r\nBefore writing the tibble\r\nCreate a data sub-directory in your RStudio project (if you don’t have one yet)\r\nHint: You can do that from within RStudio by using the New Folder button in the Files pane\r\n\r\nNow write the animals tibble to that /data sub-directory as animals.csv using a comma separator.\r\nCheck if the file was written into the correct folder.\r\n3.3 Read data into R\r\nNow, try to read the data set back into R using the appropriate read_* function.\r\nExtra\r\nNavigate to your data directory using the Files pane of RStudio.\r\nClick on both the .csv file that you just saved there. What can you do? Try the Import Dataset button and see what you can do there.\r\nTry reading some xlsx or csv tables that you have on your machine into R\r\n\r\nReference\r\nWolfram Research, “Sample Data: Animal Weights” from the Wolfram Data Repository (2016) https://doi.org/10.24097/wolfram.43616.data\r\n\r\n\r\n\r\n",
      "last_modified": "2023-02-25T22:02:56+01:00"
    },
    {
      "path": "02_solutions_controller.html",
      "title": "Solutions for day 2",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 ggplot2\r\n2 dplyr\r\n\r\n\r\n\r\n\r\n1 ggplot2\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n2 dplyr\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-02-25T22:02:58+01:00"
    },
    {
      "path": "02_tasks_controller.html",
      "title": "Tasks for day 2",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 ggplot2\r\n1.1 Getting started\r\n1.2 Getting the data\r\n1.3 Exploratory plotting\r\n1.4 Beautify the plots\r\n1.5 Save one of the plots on your machine\r\nReferences\r\n\r\n2 dplyr\r\n2.1 Getting started with dplyr\r\n2.2 Data transformation with dplyr\r\nExtras\r\n\r\n\r\n1 ggplot2\r\n1.1 Getting started\r\nA helpful resource to consult for this task can be the ggplot2 cheatsheet.\r\nRemember to put library(tidyverse) (or library(ggplot2)) on top of your script to access the ggplot functions.\r\n1.2 Getting the data\r\nTo practice plotting with the ggplot2 package, we will use a data set on 3 species of penguins on islands in Antarctica.\r\n\r\n\r\n\r\nFigure 1: Artwork by Allison Horst\r\n\r\n\r\n\r\nThe data is available from the palmerpenguins package. To get it, you have to:\r\nInstall the package with install.packages(\"palmerpenguins\")\r\nLoad the package at the beginning of your script with library(palmerpenguins)\r\nThe data set is called penguins:\r\nThe data set is available after you loaded the package\r\nJust type penguins in the console and you should see the penguins tibble\r\nFind a description of the variables in the help page ?penguins\r\nTake a moment to get familiar with the data set and its variables.\r\n1.3 Exploratory plotting\r\nExplore the data set and it’s variables with ggplot.\r\nBelow, you find some suggestions for plots.\r\nYou can start with the plot type your are most interested in and then continue from there.\r\nYou don’t have to finish all the plots\r\nIf you have your own ideas for interesting plots with the penguin data set,\r\nfeel free to do them instead of the tasks.\r\nIn the exploratory section, don’t worry about the beauty of your plots.\r\nThis task is about exploring the data and testing different visualization options in ggplot.\r\n1.3.1 Relationship between bill length and bill depth (scatterplot)\r\nWhat is the relationship between bill length and bill depth?\r\nCreate a scatterplot with bill length on the x-axis and bill depth on the y-axis\r\nCan you add a regression line?\r\nAdd species as color aesthetic. Does your interpretation of the data change?\r\nWhat is the difference between adding color as a global aesthetic or as a local aesthetic of the point layer?\r\n\r\nAdd species as shape aesthetic to distinguish the species\r\n1.3.2 Difference in flipper length between species (boxplot)\r\nIs there a difference in flipper length between the species?\r\nCreate a boxplot of the flipper length (y-axis) for the different species (x-axis)\r\nTry adding notches to the boxplots\r\nExtra: Add a layer with geom_point().\r\nTry setting position = position_jitter() as argument in the point layer. What does it do?\r\n1.3.3 Differences between body mass of male and female penguins (boxplot)\r\nAre male penguins heavier than female penguins? And is this different between the 3 species?\r\nCreate a boxplot with body mass on the y axis and sex on the x axis\r\nAdd the difference between penguin species to this plot. Try the different options ggplot offers\r\nSpecies as color aesthetic\r\nSpecies as fill aesthetic\r\nSpecies as facet using facet_wrap\r\n\r\nExtra: What happens if you use geom_violin instead of geom_boxplot? Can you combine both geoms in one plot?\r\n1.3.4 Distribution of flipper length between species (histogram)\r\nMake a histogram of the the flipper length separated by species.\r\nTry different methods of separating the species (color or facet).\r\nCompare stacked and overlapping histograms.\r\n1.3.5 Penguin flipper length by species and sex (heatmap)\r\nCreate a heat map that shows:\r\nThe categories sex and species on x- and y-axis\r\nThe flipper length as color\r\n1.4 Beautify the plots\r\nFirst, choose one of the tasks 1.4.1 or 1.4.2, then do 1.4.3.\r\nIf you still have time, you can come back to the task you didn’t do.\r\nBut also here, if you have other ideas, feel free to deviate from the tasks.\r\n1.4.1 Beautify the plots from 1.3\r\nTake the plot from before that you liked the most and try to make them look nicer.\r\nHere’s a list of ideas:\r\nAdd a theme layer\r\nCustomize the theme, e.g.\r\nChange the position of the legend\r\nMake the axis titles bold\r\n\r\nChange the color/fill scale of the plot\r\nUse scale_color_manual or scale_fill_manual\r\nTry scale_color_viridis_d() or scale_fill_viridis_d() with different options\r\nTry a color scale from the paletteer package\r\nFirst you have to install the package, then have a look at the available palettes\r\n\r\n\r\nChange the labels of the x- and y-axis and add a title to the plot\r\nMake the points transparent, give them a different shape, …\r\n1.4.2 Can you reproduce this plot?\r\nTake a look at this plot:\r\n\r\n\r\n\r\nFigure 2: Visualization from the palmerpenguins package\r\n\r\n\r\n\r\nIt is similar to the one from Task 1.3.1. but more beautiful.\r\nCan you reproduce this plot?\r\nThe colors that are used are:\r\n\r\n\r\npenguin_cols <- c(\"darkorange\", \"purple\", \"cyan4\")\r\n\r\n\r\n1.5 Save one of the plots on your machine\r\nSave one of the plots you produced in a variable and then use ggsave to save the plot on your machine.\r\nSave the plot in a dedicated plot directory in your RStudio project.\r\nNote: Make sure the path where you save the image exists. If you e.g. want to save in\r\nimg/, then you first have to create the img folder in your project directory.\r\nFor this you can use the Files pane of RStudio.\r\nReferences\r\nHorst AM, Hill AP, Gorman KB (2020). palmerpenguins: Palmer Archipelago (Antarctica) penguin data. R package version 0.1.0.\r\nhttps://allisonhorst.github.io/palmerpenguins/. doi: 10.5281/zenodo.3960218.\r\n\r\n2 dplyr\r\n2.1 Getting started with dplyr\r\nA helpful resource for to consult for this task can be the dplyr cheatsheet.\r\nBefore you start, make sure to load the tidyverse package and the palmerpenguins package.\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(palmerpenguins)\r\n\r\n\r\n2.2 Data transformation with dplyr\r\nIn the following, you find a lot of different data transformation tasks. First, do 2 from each category before you do the remaining ones. You don’t have to finish all the tasks but make sure you covered each category. Generally, the first tasks from a category are easier than the last tasks of a category.\r\nFind all penguins that …\r\n… have a bill length between 40 and 45 mm.\r\n… for which we know the sex.\r\n… which are of the species Adelie or Gentoo and live either on Dream or on Torgersen\r\n… lived on the island Dream in the year 2007. How many of them were from each of the 3 species?\r\nCount …\r\n… the number of penguins on each island.\r\n… the number of penguins of each species on each island.\r\nSort …\r\n… penguins to find penguins with lowest body mass\r\n… penguins to find penguins with highest body mass\r\n… penguins by species and sex, with longest flippers first\r\nSelect …\r\n… only the variables species, sex and year\r\n… variables based on the following vector\r\n\r\n\r\ncols <- c(\"species\", \"bill_length_mm\", \"flipper_length_mm\", \"body_mass_kg\")\r\n\r\n\r\n… only columns that contain measurements in mm\r\nAdd a column …\r\n… with the ratio of bill length to bill depth\r\n… with abbreviations for the species (Adelie = A, Gentoo = G, Chinstrap = C).\r\nCalculate …\r\n… mean flipper length and body mass for the 3 species and male and female penguins separately\r\nCan you do the same but remove the penguins for which we don’t know the sex first?\r\nExtras\r\nMake a boxplot of penguin body mass with sex on the x-axis and facets for the different species. Can you remove the penguins with missing values for sex first?\r\nMake a scatterplot with the ratio of bill length to bill depth on the y axis and flipper length on the x axis? Can you distinguish the point between male and female penguins and remove penguins with unknown sex before making the plot?\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-02-25T22:03:03+01:00"
    },
    {
      "path": "03_solutions_controller.html",
      "title": "Tasks for day 3",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 Tidyr\r\n2 Statistical tests\r\n\r\n\r\n\r\n\r\n1 Tidyr\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n2 Statistical tests\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-02-25T22:03:04+01:00"
    },
    {
      "path": "03_tasks_controller.html",
      "title": "Tasks for day 3",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 Tidyr\r\n4.1 Getting started with tidyr\r\n4.2 Let’s tidy some data sets\r\n\r\n2 Statistical tests\r\n1.1 Getting started\r\n1.2 Compare the flipper length of penguins using statistical tests\r\n\r\n\r\n1 Tidyr\r\n4.1 Getting started with tidyr\r\nBefore you start, make sure to load the tidyverse package.\r\n\r\n\r\n\r\n4.2 Let’s tidy some data sets\r\nFirst, complete all the tasks before you move to the extras.\r\n1. relig_incom\r\nHave a look at the relig_income data set that is included in tidyverse package.\r\nThe data set contains the results of a survey asking people about their religion and income category.\r\nWhat is not tidy about this data set? Can you fix it?\r\n2. billboard\r\nHave a look at the billboard data set that is included in the tidyverse package.\r\nThe data set contains information about the chart rank of songs in the year 2000.\r\nWhat is not tidy about this data set? Can you fix it?\r\nExtras\r\nCheck out the values_drop_na argument of pivot_longer. What does it do and how can you use it here?\r\nCheck out the names_prefix argument of pivot_longer. What does it do and how can you use it here?\r\n\r\n2 Statistical tests\r\n1.1 Getting started\r\nWe will again use the penguins tibble from the palmerpenguins package for this task.\r\nSo before you get started with the exercise, make sure that you load the palmerpenguins package and the tidyverse\r\n\r\n\r\nlibrary(palmerpenguins)\r\nlibrary(tidyverse)\r\n\r\n\r\n1.2 Compare the flipper length of penguins using statistical tests\r\nQuestion: Does the mean flipper length differ between the 3 penguin species?\r\nDo separate comparisons for\r\nGentoo vs. Adelie\r\nGentoo vs. Chinstrap\r\nAdelie vs. Chinstrap\r\nBefore you start, create a subset of each species as a vector.\r\nFor this, you can use the $ operator:\r\n\r\n\r\nlibrary(palmerpenguins)\r\nadelie <- filter(penguins, species == \"Adelie\")$flipper_length_mm\r\nchinstrap <- filter(penguins, species == \"Chinstrap\")$flipper_length_mm\r\ngentoo <- filter(penguins, species == \"Gentoo\")$flipper_length_mm\r\n\r\n\r\nFollow the decision tree for statistical tests:\r\n\r\n\r\n\r\nExtra\r\nCreate a plot to show the results of your tests. Choose one of the following:\r\nCreate a boxplot with notches to visually compare differences in flipper length between species\r\nMake a plot showing the mean and standard error of the mean as pointrange or point with\r\nerrorbars\r\nAdd a geom_signif() layer to the plot you just created to indicate your test results\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-02-25T22:03:06+01:00"
    },
    {
      "path": "04_solutions_controller.html",
      "title": "Extra tasks",
      "author": [],
      "contents": "\r\n\r\nContents\r\nLinear models\r\n1.1 Getting started\r\n1.2 Linear regression\r\n1.3 Analysis of covariance\r\n1.4 Anova\r\n\r\n\r\nDownload an R script with the solutions from day 1 from here.\r\n\r\nLinear models\r\n1.1 Getting started\r\n\r\n\r\n#install.packages(\"performance\")\r\nlibrary(palmerpenguins)\r\nlibrary(tidyverse)\r\nlibrary(performance)\r\n\r\n\r\n1.2 Linear regression\r\nIt looks like the bill depth increases with increasing bill length.\r\n\r\n\r\ng <- ggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\r\n  geom_point()\r\ng\r\n\r\n\r\n\r\nFit a linear model to test this relationship\r\nCheck for significant effects\r\nThe result of drop1 shows that if we remove the bill length from the model, we significantly increase the RSS. The model with bill length is the better model and we can assume a significant relationship between bill lenght and bill depth.\r\n\r\n\r\nlm1 <- lm(bill_depth_mm ~ bill_length_mm, data = penguins)\r\ndrop1(lm1, test = \"F\")\r\n\r\nSingle term deletions\r\n\r\nModel:\r\nbill_depth_mm ~ bill_length_mm\r\n               Df Sum of Sq    RSS    AIC F value   Pr(>F)    \r\n<none>                      1256.4 449.00                     \r\nbill_length_mm  1    73.473 1329.8 466.44  19.884 1.12e-05 ***\r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\nCheck the model assumptions using diagnostic plots\r\n\r\n\r\nperformance::check_model(lm1)\r\n\r\n\r\n\r\nThe diagnostic plots do not look perfect. The reason for this is probably that we did not consider all variable that we should have in the model. Maybe by adding the species as a predictor, we can improve the diagnostic plots?\r\nCan you add the model result to the scatter plot?\r\n\r\n\r\n# Option 1: geom_smooth\r\ng +\r\n  geom_smooth(method = \"lm\", se = FALSE)\r\n\r\n\r\n\r\n\r\n\r\n# Option 2: extract coefficients\r\nintercept <- lm1$coefficients[1]\r\nslope <- lm1$coefficients[2]\r\ng +\r\n  geom_abline(slope = slope, intercept = intercept)\r\n\r\n\r\n\r\n\r\n\r\n# Option 3: using predict (this is a bit overkill for this simple example)\r\n# Create data to predict from\r\npred_dat <- tibble(\r\n  bill_length_mm = seq(\r\n    from = min(penguins$bill_length_mm, na.rm = TRUE),\r\n    to = max(penguins$bill_length_mm, na.rm = TRUE)\r\n  )\r\n)\r\n# Predict the response and add it to pred_data\r\npred_dat$bill_depth_mm <- predict(lm1, newdata = pred_dat)\r\n# Add a line with the new predicted data\r\ng +\r\n  geom_line(data = pred_dat, color = \"cyan4\")\r\n\r\n\r\n\r\n1.3 Analysis of covariance\r\nDoes the relationship between bill length and bill depth differ between penguin species?\r\n\r\n\r\ng2 <- ggplot(penguins, aes(x = bill_length_mm, \r\n                     y = bill_depth_mm,\r\n                     color = species)) +\r\n  geom_point()\r\ng2\r\n\r\n\r\n\r\nNow fit the linear model again, this time including species as explanatory variable.\r\n\r\n\r\n# Without interaction\r\nlm2a <- lm(bill_depth_mm ~ bill_length_mm + species, data = penguins)\r\n# Without interaction\r\nlm2b <- lm(bill_depth_mm ~ bill_length_mm * species, data = penguins)\r\n\r\n\r\nTest model assumptions for both models.\r\nBoth models don’t violate the assumptions for linear models and the diagnostic plots look much better than the one for the model without species.\r\nNote that the diagnostic plots show a high collinearity between explanatory variables. This makes sense because of course the interaction between species and bill length is highly correlated with both species and bill length. However, in the case of this interaction it is not a problem, so we can ignore this.\r\n\r\n\r\ncheck_model(lm2a)\r\n\r\n\r\ncheck_model(lm2b)\r\n\r\n\r\n\r\nCheck for significant effects in both models\r\n\r\n\r\ndrop1(lm2a, test = \"F\")\r\n\r\nSingle term deletions\r\n\r\nModel:\r\nbill_depth_mm ~ bill_length_mm + species\r\n               Df Sum of Sq     RSS    AIC F value    Pr(>F)    \r\n<none>                       307.20 -28.70                      \r\nbill_length_mm  1    118.67  425.87  81.01  130.57 < 2.2e-16 ***\r\nspecies         2    949.16 1256.36 449.00  522.17 < 2.2e-16 ***\r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\ndrop1(lm2b, test = \"F\")\r\n\r\nSingle term deletions\r\n\r\nModel:\r\nbill_depth_mm ~ bill_length_mm * species\r\n                       Df Sum of Sq    RSS     AIC F value Pr(>F)\r\n<none>                              306.32 -25.676               \r\nbill_length_mm:species  2   0.87243 307.20 -28.704  0.4785 0.6202\r\n\r\nI will choose to plot the simpler model without the interaction because the interaction between species and bill length is not significant. Generally, a model should be as simple as possible (of course without loosing explanatory power).\r\nTo plot the model with interaction I could conveniently use geom_smooth\r\n\r\n\r\ng2 +\r\n  geom_smooth(method = \"lm\", se = FALSE)\r\n\r\n\r\n\r\nTo plot th model without interaction, you can either extract the model coefficients or use the predict function.\r\nExtracting the model coefficients starts to become complicated, as we have 3 intercepts and 1 slope to extract:\r\n\r\n\r\n# Option 1: extract model coefficients\r\nintercept_adelie <- lm2a$coefficients[1]\r\nslope <- lm2a$coefficients[2]\r\nintercept_chinstrap <- intercept_adelie + lm2a$coefficients[3]\r\nintercept_gentoo <- intercept_adelie + lm2a$coefficients[4]\r\n\r\n# lets add some custom colors\r\ncols <- c(\"darkorange\", \"cyan4\", \"purple\")\r\n\r\ng2 +\r\n  geom_abline(slope = slope, intercept = intercept_adelie, color = cols[1]) +\r\n  geom_abline(slope = slope, intercept = intercept_chinstrap, color = cols[2]) +\r\n  geom_abline(slope = slope, intercept = intercept_gentoo, color = cols[3]) +\r\n  scale_color_manual(values = cols)\r\n\r\n\r\n\r\nIt is easier to use the predict function in this case:\r\n\r\n\r\npred_dat <- expand_grid(\r\n  bill_length_mm = min(penguins$bill_length_mm, na.rm = TRUE):max(penguins$bill_length_mm, na.rm = TRUE),\r\n  species = c(\"Adelie\", \"Chinstrap\", \"Gentoo\")\r\n)\r\npred_dat$bill_depth_mm <- predict(lm2a, newdata = pred_dat)\r\n\r\ng2 +\r\n  geom_line(data = pred_dat) +\r\n  ggsci::scale_color_futurama()\r\n\r\n\r\n\r\n1.4 Anova\r\nDo male and female penguins differ in weight and does this depend on the species?\r\nFirst, we create a subset without penguins for which the sex is unknown\r\n\r\n\r\npenguins_sex <- filter(penguins, !is.na(sex))\r\n\r\n\r\nThe question can be represented for example with a boxplot\r\n\r\n\r\nggplot(penguins_sex, aes(x = species, y = body_mass_g, fill = sex)) +\r\n  geom_boxplot(notch = TRUE)\r\n\r\n\r\n\r\nFit a linear model that represents this question\r\n\r\n\r\n# Without interaction\r\nlm3a <- lm(body_mass_g ~ sex + species, data = penguins_sex)\r\n# Without interaction\r\nlm3b <- lm(body_mass_g ~ sex + species + sex:species, data = penguins_sex)\r\n\r\n\r\nTest for significant predictors\r\nBoth the single effect and the interaction is significant.\r\n\r\n\r\ndrop1(lm3a, test = \"F\")\r\n\r\nSingle term deletions\r\n\r\nModel:\r\nbody_mass_g ~ sex + species\r\n        Df Sum of Sq       RSS    AIC F value    Pr(>F)    \r\n<none>                32979185 3838.6                      \r\nsex      1  37090262  70069447 4087.5  370.01 < 2.2e-16 ***\r\nspecies  2 143401584 176380769 4392.9  715.29 < 2.2e-16 ***\r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\ndrop1(lm3b, test = \"F\")\r\n\r\nSingle term deletions\r\n\r\nModel:\r\nbody_mass_g ~ sex + species + sex:species\r\n            Df Sum of Sq      RSS    AIC F value    Pr(>F)    \r\n<none>                   31302628 3825.2                      \r\nsex:species  2   1676557 32979185 3838.6   8.757 0.0001973 ***\r\n---\r\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\r\n\r\nBoth look fine. Model can be used.\r\n\r\n\r\ncheck_model(lm3a)\r\n\r\n\r\ncheck_model(lm3b)\r\n\r\n\r\n\r\nExtra\r\nSome other plots with which we can represent the results of the Anova.\r\n\r\n\r\npenguins_sex %>%\r\n  ggplot(aes(\r\n    x = species,\r\n    y = body_mass_g,\r\n    color = sex\r\n  )) +\r\n  geom_boxplot() +\r\n  geom_point(\r\n    size = 2, alpha = 0.5,\r\n    position = position_jitterdodge(\r\n      seed = 123\r\n    )\r\n  ) +\r\n  coord_flip() +\r\n  ggsci::scale_color_d3() +\r\n  labs(y = \"Body mass [g]\", x = \"Species\") +\r\n  theme_bw() +\r\n  theme(legend.position = c(0.85, 0.15))\r\n\r\n\r\n\r\n\r\n\r\nggplot(penguins_sex, aes(x = species, y = body_mass_g, color = sex)) +\r\n  stat_summary(\r\n    position = position_dodge(width = 0.5)\r\n  ) +\r\n  scale_color_manual(values = c(\"#00AFBB\", \"#E7B800\")) +\r\n  labs(y = \"Body mass [g]\")\r\n\r\n\r\n\r\nIn the next plot, you need to make sure that the width of the position_dodge is\r\nthe same for both the bar and the errorbar.\r\n\r\n\r\nggplot(penguins_sex, aes(x = species, y = body_mass_g, fill = sex)) +\r\n  stat_summary(\r\n    fun.y = mean,\r\n    geom = \"bar\",\r\n    width = 0.7,\r\n    position = position_dodge(width = 0.8)\r\n  ) +\r\n  stat_summary(\r\n    fun.data = mean_se,\r\n    geom = \"errorbar\",\r\n    position = position_dodge(width = 0.8),\r\n    width = 0.3\r\n  ) +\r\n  scale_fill_manual(values = c(\"#00AFBB\", \"#E7B800\")) +\r\n  labs(y = \"Body mass [g]\")\r\n\r\n\r\n\r\n\r\n\r\n[1] FALSE\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-02-25T22:03:38+01:00"
    },
    {
      "path": "04_tasks_controller.html",
      "title": "Extra task: Linear models",
      "author": [],
      "contents": "\r\n\r\nContents\r\nLinear models\r\n2.1 Getting started\r\n2.2 Linear regression\r\n2.3 Analysis of covariance\r\n2.4 Anova\r\n\r\n\r\nLinear models\r\n2.1 Getting started\r\nTo test the assumptions of linear models, we will use the performance package. Make sure you install it once and then load it:\r\n\r\n\r\ninstall.packages(\"performance\")\r\nlibrary(performance)\r\n\r\n\r\nThe performance package depends on other packages. It might happen that you encounter an error when trying to load or use the package for the first time. Just read the error message and install the missing packages with install.packages() (likely this will be the case for the qqplotr package).\r\nNote: Finish all the tasks (2.2-2.4) first before you start with the extras.\r\n2.2 Linear regression\r\nLet’s start with a simple linear regression.\r\nDoes the bill depth depend on bill length?\r\nMake a scatter plot of bill length on the x and bill depth on the y axis.\r\nNow:\r\nFit a linear model to test this relationship\r\nCheck for significant effects: What do the results mean?\r\nCheck the model assumptions using diagnostic plots\r\nWhat do you think? Are the assumptions violated or do the plots look okay?\r\nCan you add the regression line to the scatter plot?\r\n2.3 Analysis of covariance\r\nDoes the relationship between bill length and bill depth differ between penguin species?\r\nAdd the species variable as color aesthetic to the scatter plot from 1.2\r\nFit the linear model again, including species as second explanatory variable\r\nFit a model without interaction between species and bill length\r\n\r\nTest model assumptions the both model\r\nCheck for significant effects models\r\nAdd the regression lines to the plot\r\nExtra\r\nNow fit a model with interaction between species and bill length. Test assumptions and significant effects also for this model. Which model would you choose? The one with or without interaction?\r\nWhich model would you choose? Add the model results in the scatter plot from before.\r\n2.4 Anova\r\nDo the weight of penguins depend on sex and species?\r\nBefore you start exploring this question, remove penguins with missing sex variable from the data\r\nThink of a plot that can represent this question and plot it\r\nFit a linear model that represents this question (with interaction between sex and species)\r\nTest for significant predictors\r\nTest model assumptions\r\nExtra\r\nImprove the looks of the Anova result plot. You can be as creative as you want, e.g. take inspiration from plots you saw in the presentation.\r\nSome ideas:\r\nMake a boxplot and try to add a combination of geom_point() and position = position_jitterdodge()\r\nMake a pointrange plot instead of a boxplot. Here, you need to use the position = position_dodge(width = 0.5) argument inside the stat_summary function. Otherwise the points for male and female penguins are plotted on top of each other. You can adjust the number width for width as you need.\r\nSame as above but with bars and errorbars instead of pointrange. This is a bit tricky. Make sure to use position = position_dodge(width = 0.5) in the stat_summary of both the bars and the errorbars.\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-02-25T22:03:40+01:00"
    },
    {
      "path": "download_material_blank.html",
      "title": "You can download the full material after the workshop is finished",
      "description": "For now, please use the material available from this website",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2023-02-25T22:03:42+01:00"
    },
    {
      "path": "index.html",
      "title": "Introduction to R for Data Analysis",
      "author": [],
      "contents": "\r\nWorkshop organization and schedule\r\n🕘 9 a.m. - 4 p.m. (🥪 ~ 12 a.m. - 1 p.m.)\r\n📍 We will meet every morning in the General meeting room of our Webex team.\r\nWorkshop Material\r\nYou can find all the workshop material on this website.\r\nOn top, you can navigate to the presentation slides and the tasks for each day.\r\nAt the end of each workshop day, I will upload the solutions for the tasks.\r\nTo download presentation slides in pdf format, you can use the following links:\r\n 01 - Introduction RStudio\r\n 01 - Introduction R\r\n01 - Functions\r\n01 - Data & Tibbles\r\n01 - Tidyverse and readr\r\n02 - ggplot2\r\n02 - Dplyr\r\n03 - Tidyr\r\n03 - Statistical tests\r\nExtras\r\nLinear models\r\nCommon errors\r\nAfter the workshop is finished, you can download a zipped version of the content (slides in pdf, data and R scripts) here\r\n\r\n\r\n\r\n",
      "last_modified": "2023-02-25T22:03:45+01:00"
    },
    {
      "path": "LICENSE.html",
      "author": [],
      "contents": "\r\nMIT License\r\nCopyright (c) 2021 Selina Baldauf\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the “Software”), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n\r\n",
      "last_modified": "2023-02-25T22:03:46+01:00"
    },
    {
      "path": "online_resources.html",
      "title": "Additional online resources",
      "description": "Below you can find a collection of helpful links to further online resources regarding the workshop topics.\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nGeneral\r\nTidyverse\r\nreadr\r\nggplot\r\ndplyr\r\ntidyr\r\n\r\nLinear models\r\nTwitter accounts to follow\r\n\r\nGeneral\r\nList of RStudio cheatsheets: You can find a list of all the cheat sheets that RStudio provides there. Below, I listed the individual cheat sheets that are interesting for our course.\r\nRStudio cheatsheet: Explains the most important buttons, options, keyboard shortcuts, etc that you have in RStudio.\r\nThe modern dive book explains how to get started with R and data analysis with the tidyverse.\r\nThe R for Data Science book by Hadley Wickham is a very good book to start with. It is specifically about data analysis using the tidyverse packages.\r\nThe Big book of R is a book that list all books about R that are freely available only. The book is sorted by topics and can be used to find resources to learn a specific topic.\r\nA curated collection of R resources. Not just books but also websites, tutorials, help channels, …\r\nThe Tidyverse style guide provides information on how to style your code according to good practice.\r\nTidyverse\r\nThe tidyverse website has links to all tidyverse packages which all have very good examples and use cases. These websites are an excelent point to get started with a package.\r\nreadr\r\ndata import cheatsheet\r\nggplot\r\nggplot cheatsheet offers an overview of all possibilities of ggplot\r\nCurated list of ggplot resources:\r\nReally great list with links to ggplot tutorials (sorted by topic and difficulty), books, additional packages to make your plots look nicer, …\r\nIn the R graph gallery you can browse through hundreds of different types of plots and find code to reproduce them.\r\nA great workshop on ggplot by Cédric Scherer with everything from basics of ggplot, over using colors, graphic design and plot composition.\r\ndplyr\r\ndplyr cheatsheet\r\ntidyr\r\ndata import cheatsheet\r\nLinear models\r\nanova with R: explanation why an anova is also a linear model\r\nTwitter accounts to follow\r\nI personally learn a lot of tricks and find a lot of inspiration and resources by following some R people and accounts on twitter. Often people post helpful tutorials or blogpost that you would not find otherwise. If you are a twitter user, you can try that as well.\r\nSome suggestions that are in no way complete are:\r\nCédric Scherer mainly data visualization and ggplot content\r\nAllison Horst\r\nRStudio official RStudio account\r\nHadley Wickham data visualisation, tidyverse\r\nJenny Bryan\r\nrOpenSci develop R tools for open science\r\nOne R Tip a Day one helpful R tip every day\r\nR posts you might have missed repost R blog posts from different topics\r\n\r\n\r\n\r\n",
      "last_modified": "2023-02-25T22:03:51+01:00"
    },
    {
      "path": "packages.html",
      "title": "List of R packages",
      "author": [],
      "contents": "\r\nIn the table below, you can find a list of R packages with a short description and\r\nsome links for further reading. The package selection is based on my personal experience and\r\npackages that I regularly use and like. The list is in no way complete. If you know a useful package\r\nthat I missed, let me know and I can add it to the list.\r\n\r\nPackage\r\nKeywords\r\nDescription\r\nLinks\r\ntidyverse\r\ntidyverse, data analysis\r\nCollection of packages designed for data analysis. The packages are designed to work smoothly together\r\nwebsite, learning resources\r\ndplyr\r\ntidyverse, data manipulation\r\nPart of the tidyverse. Package for data manipulation: filtering, selecting and arranging data, summarizing data (e.g. calculating summaries by group), …\r\nwebsite, cheatsheet\r\nreadr\r\ntidyverse, data import and export\r\nPart of the tidyverse. Package for data import and export (csv, txt, other delimited files)\r\nwebsite, cheatsheet\r\nreadxl\r\ndata import and export\r\nFunctions to import and export excel files from multiple sheets into R as tibbles\r\npackage documentation\r\nggplot2\r\ntidyverse, data visualization\r\nPart of the tidyverse. Data visualization\r\nwebsite, cheatsheet\r\npatchwork\r\ndata visualization\r\nEasy syntax for combining multiple plots into one. Easy control of plot layout, common legends, plot annotations and labels\r\nwebsite with different articles to get started\r\ntidyr\r\ntidyverse, data cleaning\r\nPart of the tidyverse. Transforming tables to bring them in a tidy format for further analysis\r\nwebsite, cheatsheet\r\nstringr\r\ntidyverse, string manipulation\r\nPart of the tidyverse. Toolkit for working with strings. String manipulation: extracting strings, substrings, find patterns in strings, replace patterns in strings, …\r\nwebsite, cheatsheet\r\nlubridate\r\ndates and times\r\nMakes it easy to work with dates and times: convert strings to date time objects, calculate with times (intervals, periods, …) and plot time series\r\ncheatsheet, website\r\nforcats\r\nfactors, categorical variables\r\nPart of the tidyverse. Working with factors (categorical data types). Renaming, reordering, summarizing categories, …\r\nwebsite, cheatsheet\r\ndata.table\r\nfast data analysis, big data\r\nExtremely fast and memory efficient data transofmrations in R. The package uses a different syntax from base R and the tidyverse. However, data.tables are also data frames so you can use them either with data.table syntax or with base R/tidyverse syntax\r\nwebsite, cheatsheet\r\ncollapse\r\nfast data analysis, big data\r\nPackag for fast data manipulation. Well integrated with dplyr and data.table. Provides fast functions for data transformation, aggregation, linear models, statistical functions, grouping, … Have a look at it if you have large data sets and your data operations take a long time\r\npackage on github, cheatsheet\r\nrmarkdown\r\nreports, markdown, documents\r\nInteractive and reproducible documents with R (pdf, word, html output).\r\nR Markdown - The definitive guide (book), reference guide, cheatsheet\r\nggsci\r\ncolors, data visualization\r\nProvides additional color scales to ggplot\r\nwebsite\r\nggthemes\r\ncolors, themes, data visualizations\r\nProvides additional color scales and themes to ggplot\r\ntheme gallery\r\nusethis\r\nutility, workflow\r\nProvides useful utility functions around R and Rstudio workflows: project setup, git, github, licenses, package development, …\r\nwebsite\r\nstyler\r\nutility\r\nAutomatically format your code according to the tidyverse style guide. This ensures that your coding style follows good practice\r\nwebsite\r\nhere\r\nutility\r\nMakes file referencing and relative paths easy\r\nwebsite\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2023-02-25T22:03:54+01:00"
    }
  ],
  "collections": []
}
