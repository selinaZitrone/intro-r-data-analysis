{
  "articles": [
    {
      "path": "01_solutions_controller.html",
      "title": "Solutions for day 1",
      "author": [],
      "contents": "\r\n\r\nContents\r\n2 Vectors in R\r\n2.1 Type conversion\r\n2.2 Working with vectors\r\nExtras\r\nReferences\r\n\r\n3 Tibbles in R\r\nCreating a tibble\r\nExploring the tibble\r\nIndexing\r\nReference\r\n\r\n2 Vectors in R\r\nAims:\r\nLearn about type conversion\r\nWork with vectors\r\n\r\n\r\n\r\n2.1 Type conversion\r\nImplicit type conversion follows the following rules:\r\nnumeric (double & integer)  character\r\nlogical  numeric\r\nlogical  character\r\n\r\n\r\nv1 <- c(1, \"a\", 2, 3)\r\ntypeof(v1)\r\n\r\n\r\n[1] \"character\"\r\n\r\nv2 <- c(TRUE, TRUE, 1L, FALSE, 0L)\r\ntypeof(v2)\r\n\r\n\r\n[1] \"integer\"\r\n\r\nv3 <- c(0, \"23\", 5, 7)\r\ntypeof(v3)\r\n\r\n\r\n[1] \"character\"\r\n\r\nv4 <- c(4L, 6L, 23.5345)\r\ntypeof(v4)\r\n\r\n\r\n[1] \"double\"\r\n\r\nv5 <- c(TRUE, \"a\", FALSE, \"FALSE\")\r\ntypeof(v5)\r\n\r\n\r\n[1] \"character\"\r\n\r\nExplicit conversion to integer\r\nValues cannot be converted from type character to type integer. If you try to do this, you will get a warning that the conversion returned NA\r\n\r\n\r\nas.integer(v1)\r\n\r\n\r\nWarning: NAs introduced by coercion\r\n[1]  1 NA  2  3\r\n\r\nas.integer(v2)\r\n\r\n\r\n[1] 1 1 1 0 0\r\n\r\nas.integer(v3)\r\n\r\n\r\n[1]  0 23  5  7\r\n\r\nas.integer(v4)\r\n\r\n\r\n[1]  4  6 23\r\n\r\nas.integer(v5)\r\n\r\n\r\nWarning: NAs introduced by coercion\r\n[1] NA NA NA NA\r\n\r\nExplicit conversion to character\r\nVectors of all data types can be converted to character. No NA values are introduced.\r\n\r\n\r\nas.character(v1)\r\n\r\n\r\n[1] \"1\" \"a\" \"2\" \"3\"\r\n\r\nas.character(v2)\r\n\r\n\r\n[1] \"1\" \"1\" \"1\" \"0\" \"0\"\r\n\r\nas.character(v3)\r\n\r\n\r\n[1] \"0\"  \"23\" \"5\"  \"7\" \r\n\r\nas.character(v4)\r\n\r\n\r\n[1] \"4\"       \"6\"       \"23.5345\"\r\n\r\nas.character(v5)\r\n\r\n\r\n[1] \"TRUE\"  \"a\"     \"FALSE\" \"FALSE\"\r\n\r\n2.2 Working with vectors\r\n\r\n\r\nspecies <- c(\r\n  \"MountainBeaver\", \"Cow\", \"GreyWolf\", \"Goat\",\r\n  \"GuineaPig\", \"Diplodocus\", \"AsianElephant\", \"Donkey\",\r\n  \"Horse\", \"PotarMonkey\", \"Cat\", \"Giraffe\",\r\n  \"Gorilla\", \"Human\", \"AfricanElephant\", \"Triceratops\",\r\n  \"RhesusMonkey\", \"Kangaroo\", \"GoldenHamster\", \"Mouse\",\r\n  \"Rabbit\", \"Sheep\", \"Jaguar\", \"Chimpanzee\",\r\n  \"Rat\", \"Brachiosaurus\", \"Mole\", \"Pig\"\r\n)\r\n\r\nbodywt_kg <- c(\r\n  1.4, 465, 36.3, 27.7, 1., 11700, 2547, 187.1,\r\n  521, 10, 3.3, 529, 207, 62, 6654, 9400,\r\n  6.8, 35, 0.1, 0.02, 2.5, 55.5, 100, 52.2,\r\n  0.3, 87000, 0.1, 192\r\n)\r\n\r\nbrainwt_g <- c(\r\n  8.1, 423, 119.5, 115, 5.5, 50, 4603, 419, 655, 115, 25.6,\r\n  680, 406, 1320, 5712, 70, 179, 56, 1, 0.4, 12.1, 175,\r\n  157, 440, 1.9, 154.5, 3, 180\r\n)\r\n\r\n\r\n\r\nCheck if the following animals are contained in the data set\r\n\r\n\r\nanimals_to_check <- c(\"Snail\", \"Goat\", \"Chimpanzee\", \"Rat\", \"Dragon\", \"Eagle\")\r\n# Goes through every element in species and returns TRUE if it appears in animals_to_check\r\n\r\n\r\n\r\n\r\n\r\nspecies %in% animals_to_check\r\n\r\n\r\n [1] FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\r\n[12] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\r\n[23] FALSE  TRUE  TRUE FALSE FALSE FALSE\r\n\r\n# Goes through every element in animals_to_check and returns TRUE if it appears in species\r\nanimals_to_check %in% species\r\n\r\n\r\n[1] FALSE  TRUE  TRUE  TRUE FALSE FALSE\r\n\r\nNote: If you use %in% to check if elements are contained in a vector, the result vector is of the same length as the vector that is before the %in%\r\nConvert the brain weight from g to kg:\r\n\r\n\r\nbrainwt_kg <- brainwt_g / 1000\r\n\r\n\r\n\r\nWhat is the mean brain weight\r\n\r\n\r\nmean(brainwt_kg)\r\n\r\n\r\n[1] 0.5745214\r\n\r\nCalculate the ratio brain weight / body weight and save it in a vector:\r\n\r\n\r\nbrain_body_ratio <- brainwt_kg / bodywt_kg * 100\r\n\r\n\r\n\r\nWhich animals have a larger brain to body ratio than humans?\r\nStep 1: Look at the brain to body ratio of humans\r\n\r\n\r\nbrain_body_ratio[species == \"Human\"]\r\n\r\n\r\n[1] 2.129032\r\n\r\nStep 2: Commpare it with the other animals\r\n\r\n\r\nbbr_human <- brain_body_ratio[species == \"Human\"]\r\n# Are there animals that have a larger brain to body ratio than humans?\r\nbrain_body_ratio > bbr_human\r\n\r\n\r\n [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE\r\n[12] FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE FALSE\r\n[23] FALSE FALSE FALSE FALSE  TRUE FALSE\r\n\r\n# Which are these animals\r\nspecies[brain_body_ratio > bbr_human]\r\n\r\n\r\n[1] \"RhesusMonkey\" \"Mole\"        \r\n\r\nExtras\r\nRound the vector to 4 decimal places:\r\n\r\n\r\nbrain_body_ratio <- round(brain_body_ratio, digits = 4)\r\n\r\n\r\n\r\nWhich animal has the smallest brain to body ratio?\r\n\r\n\r\nspecies[brain_body_ratio == min(brain_body_ratio)]\r\n\r\n\r\n[1] \"Brachiosaurus\"\r\n\r\nThe Brachiosaurus has a really small brain with a weight of just 154.5 g at a body weight of 87000 kg!\r\nAdd elements to the vector\r\n\r\n\r\nspecies_new <- c(\"Eagle\", \"Snail\", \"Lion\")\r\nbrainwt_g_new <- c(40, NA, 500)\r\nbodywt_kg_new <- c(18, 0.01, 550)\r\n\r\nspecies <- c(species, species_new)\r\nbrainwt_g <- c(brainwt_g, brainwt_g_new)\r\nbodywt_kg <- c(bodywt_kg, bodywt_kg_new)\r\n\r\n\r\n\r\nWhat is the mean brain weight now?\r\n\r\n\r\nmean(brainwt_g)\r\n\r\n\r\n[1] NA\r\n\r\n# na.rm = TRUE\r\nmean(brainwt_g, na.rm = TRUE)\r\n\r\n\r\n[1] 554.22\r\n\r\nReferences\r\nWolfram Research, “Sample Data: Animal Weights” from the Wolfram Data Repository (2016) https://doi.org/10.24097/wolfram.43616.data\r\n\r\n3 Tibbles in R\r\nAims:\r\nCreate and manipulate tibbles with base R:\r\nindexing\r\nadding columns\r\nchanging values\r\n\r\nCreating a tibble\r\nUse the vectors species, brainwt_kg, bodywt_kg from the last task and put them in a tibble.\r\n\r\n\r\n# install.packages(\"tibble\")\r\nlibrary(tibble)\r\n\r\nspecies <- c(\r\n  \"MountainBeaver\", \"Cow\", \"GreyWolf\", \"Goat\",\r\n  \"GuineaPig\", \"Diplodocus\", \"AsianElephant\", \"Donkey\",\r\n  \"Horse\", \"PotarMonkey\", \"Cat\", \"Giraffe\",\r\n  \"Gorilla\", \"Human\", \"AfricanElephant\", \"Triceratops\",\r\n  \"RhesusMonkey\", \"Kangaroo\", \"GoldenHamster\", \"Mouse\",\r\n  \"Rabbit\", \"Sheep\", \"Jaguar\", \"Chimpanzee\",\r\n  \"Rat\", \"Brachiosaurus\", \"Mole\", \"Pig\"\r\n)\r\n\r\nbodywt_kg <- c(\r\n  1.4, 465, 36.3, 27.7, 1., 11700, 2547, 187.1,\r\n  521, 10, 3.3, 529, 207, 62, 6654, 9400,\r\n  6.8, 35, 0.1, 0.02, 2.5, 55.5, 100, 52.2,\r\n  0.3, 87000, 0.1, 192\r\n)\r\n\r\nbrainwt_g <- c(\r\n  8.1, 423, 119.5, 115, 5.5, 50, 4603, 419, 655, 115, 25.6,\r\n  680, 406, 1320, 5712, 70, 179, 56, 1, 0.4, 12.1, 175,\r\n  157, 440, 1.9, 154.5, 3, 180\r\n)\r\n# Creating the tibble \r\nanimals <- tibble(\r\n  species = species,\r\n  bodywt_kg = bodywt_kg,\r\n  brainwt_kg = brainwt_g / 1000\r\n)\r\n\r\n\r\n\r\nAdding several columns to this tibble:\r\n\r\n\r\n# Add brain to body ratio (%)\r\nanimals$bbr <- animals$brainwt_kg / animals$bodywt_kg * 100\r\n# Add the brain size category\r\nanimals$brainwt_category <- ifelse(\r\n  animals$bbr > 1,\r\n  \"large\",\r\n  \"small\"\r\n)\r\n# Add the order of the species\r\norder <- c(\r\n  \"Rodentia\", \"Artiodactyla\", \"Carnivora\", \"Artiodactyla\", \"Rodentia\", NA,\r\n  \"Proboscidea\", rep(\"Perissodactyla\", 2), NA, \"Carnivora\", \"Artiodactyla\",\r\n  rep(\"Primates\", 2), \"Proboscidea\", \"Ornithischia\", \"Primates\", \"Diprotodontia\",\r\n  \"Rodentia\", \"Rodentia\", \"Lagomorpha\", \"Artiodactyla\", \"Carnivora\", \"Primates\",\r\n  \"Rodentia\", NA, \"Eulipotyphla\", \"Artiodactyla\"\r\n)\r\nanimals$order <- order\r\n\r\n\r\n\r\nExploring the tibble\r\n\r\n\r\nview(animals)\r\nsummary(animals)\r\n\r\n\r\n   species            bodywt_kg          brainwt_kg     \r\n Length:28          Min.   :    0.02   Min.   :0.00040  \r\n Class :character   1st Qu.:    3.10   1st Qu.:0.02223  \r\n Mode  :character   Median :   53.85   Median :0.13700  \r\n                    Mean   : 4278.44   Mean   :0.57452  \r\n                    3rd Qu.:  479.00   3rd Qu.:0.42000  \r\n                    Max.   :87000.00   Max.   :5.71200  \r\n      bbr            brainwt_category      order          \r\n Min.   :0.0001776   Length:28          Length:28         \r\n 1st Qu.:0.1278383   Class :character   Class :character  \r\n Median :0.3222582   Mode  :character   Mode  :character  \r\n Mean   :0.6528434                                        \r\n 3rd Qu.:0.7925462                                        \r\n Max.   :3.0000000                                        \r\n\r\nstr(animals)\r\n\r\n\r\ntibble [28 x 6] (S3: tbl_df/tbl/data.frame)\r\n $ species         : chr [1:28] \"MountainBeaver\" \"Cow\" \"GreyWolf\" \"Goat\" ...\r\n $ bodywt_kg       : num [1:28] 1.4 465 36.3 27.7 1 ...\r\n $ brainwt_kg      : num [1:28] 0.0081 0.423 0.1195 0.115 0.0055 ...\r\n $ bbr             : num [1:28] 0.579 0.091 0.329 0.415 0.55 ...\r\n $ brainwt_category: chr [1:28] \"small\" \"small\" \"small\" \"small\" ...\r\n $ order           : chr [1:28] \"Rodentia\" \"Artiodactyla\" \"Carnivora\" \"Artiodactyla\" ...\r\n\r\nnrow(animals)\r\n\r\n\r\n[1] 28\r\n\r\nncol(animals)\r\n\r\n\r\n[1] 6\r\n\r\nnames(animals)\r\n\r\n\r\n[1] \"species\"          \"bodywt_kg\"        \"brainwt_kg\"      \r\n[4] \"bbr\"              \"brainwt_category\" \"order\"           \r\n\r\nIndexing\r\nWarm up\r\n\r\n\r\nanimals[c(1,5,7), c(\"species\", \"bodywt_kg\")]\r\n\r\n\r\n# A tibble: 3 x 2\r\n  species        bodywt_kg\r\n  <chr>              <dbl>\r\n1 MountainBeaver       1.4\r\n2 GuineaPig            1  \r\n3 AsianElephant     2547  \r\n\r\nanimals[1:10, ]\r\n\r\n\r\n# A tibble: 10 x 6\r\n   species     bodywt_kg brainwt_kg     bbr brainwt_category order    \r\n   <chr>           <dbl>      <dbl>   <dbl> <chr>            <chr>    \r\n 1 MountainBe~       1.4     0.0081 5.79e-1 small            Rodentia \r\n 2 Cow             465       0.423  9.10e-2 small            Artiodac~\r\n 3 GreyWolf         36.3     0.120  3.29e-1 small            Carnivora\r\n 4 Goat             27.7     0.115  4.15e-1 small            Artiodac~\r\n 5 GuineaPig         1       0.0055 5.5 e-1 small            Rodentia \r\n 6 Diplodocus    11700       0.05   4.27e-4 small            <NA>     \r\n 7 AsianEleph~    2547       4.60   1.81e-1 small            Probosci~\r\n 8 Donkey          187.      0.419  2.24e-1 small            Perissod~\r\n 9 Horse           521       0.655  1.26e-1 small            Perissod~\r\n10 PotarMonkey      10       0.115  1.15e+0 large            <NA>     \r\n\r\n# last row last column without using the index\r\nanimals[nrow(animals), ncol(animals)]\r\n\r\n\r\n# A tibble: 1 x 1\r\n  order       \r\n  <chr>       \r\n1 Artiodactyla\r\n\r\n# select specific orders\r\norders_select <- c(\"Primates\", \"Rodentia\", \"Carnivora\")\r\nanimals[animals$order %in% orders_select,]\r\n\r\n\r\n# A tibble: 12 x 6\r\n   species        bodywt_kg brainwt_kg   bbr brainwt_category order   \r\n   <chr>              <dbl>      <dbl> <dbl> <chr>            <chr>   \r\n 1 MountainBeaver      1.4      0.0081 0.579 small            Rodentia\r\n 2 GreyWolf           36.3      0.120  0.329 small            Carnivo~\r\n 3 GuineaPig           1        0.0055 0.55  small            Rodentia\r\n 4 Cat                 3.3      0.0256 0.776 small            Carnivo~\r\n 5 Gorilla           207        0.406  0.196 small            Primates\r\n 6 Human              62        1.32   2.13  large            Primates\r\n 7 RhesusMonkey        6.8      0.179  2.63  large            Primates\r\n 8 GoldenHamster       0.1      0.001  1     small            Rodentia\r\n 9 Mouse               0.02     0.0004 2     large            Rodentia\r\n10 Jaguar            100        0.157  0.157 small            Carnivo~\r\n11 Chimpanzee         52.2      0.44   0.843 small            Primates\r\n12 Rat                 0.3      0.0019 0.633 small            Rodentia\r\n\r\nCreate two subsets for large and small brained animals and calculate the mean and standard deviation of the brain to body ratio in these subsets.\r\nCreate subsets\r\n\r\n\r\nlarge_brain <- animals[animals$brainwt_category == \"large\", ]\r\nsmall_brain <- animals[animals$brainwt_category == \"small\", ]\r\n\r\n\r\n\r\nCalculate the means and standard deviation\r\n\r\n\r\n# Large brains\r\nmean(animals[animals$brainwt_category == \"large\", ]$bbr) # or\r\n\r\n\r\n[1] 2.182277\r\n\r\nmean(large_brain$bbr)\r\n\r\n\r\n[1] 2.182277\r\n\r\nsd(large_brain$bbr)\r\n\r\n\r\n[1] 0.7022989\r\n\r\n# small brain\r\nmean(animals[animals$brainwt_category == \"small\", ]$bbr) # or\r\n\r\n\r\n[1] 0.3203578\r\n\r\nmean(small_brain$bbr)\r\n\r\n\r\n[1] 0.3203578\r\n\r\nsd(small_brain$bbr)\r\n\r\n\r\n[1] 0.2886404\r\n\r\n\r\nReference\r\nWolfram Research, “Sample Data: Animal Weights” from the Wolfram Data Repository (2016) https://doi.org/10.24097/wolfram.43616.data\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-29T17:42:00+02:00"
    },
    {
      "path": "01_tasks_controller.html",
      "title": "Tasks for day 1",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 Set up RStudio project\r\n1.1 Change settings\r\n1.2 Create an RStudio project\r\n1.3 Add an R script to the project\r\n\r\n2 Vectors in R\r\n2.1 Type conversion\r\n2.2 Working with vectors\r\n\r\n3 Tibbles in R\r\n3.1 Getting started with tibbles\r\n3.2 Creating a tibble\r\n3.3 Exploring the tibble\r\n3.4 Indexing\r\n\r\nReference\r\n\r\n1 Set up RStudio project\r\nAims:\r\nGet familiar with RStudio\r\nCreate a new RStudio project for the workshop\r\nChange settings of RStudio\r\n1.1 Change settings\r\nBefore you get started, there is an important setting that you should change in RStudio. By default, RStudio will save an the workspace of your current session in an .Rdata file. This would allow you to start the next session exactly where you left by loading this .Rdata file.\r\nThis is not a good default. We always want to start R from a clean slate to ensure reproducibility and minimize error potential.\r\nIn RStudio go to Tools -> Global Options -> General and set the following workspace options:\r\n\r\n\r\n\r\n1.2 Create an RStudio project\r\nCreate an RStudio project that you can use for all the scripts, notes, data, etc. from this workshop.\r\nCreate a project in a directory of your choice following the instructions from the slides\r\nUse the File pane in RStudio to create a basic folder structure in your project which will be filled with files in the next days\r\ne.g. create folders for data, scripts, documents,…\r\nyou can always change the structure of your project later, but for now, we want some basic folders that we can navigate\r\n\r\nNow close the project\r\nFind the project your computer’s file explorer and open it\r\nYou can add files to your project either directly in RStudio, or in the file explorer of your operating system.\r\n1.3 Add an R script to the project\r\ncreate a new R script, save it in the appropriate folder of your project (e.g. scripts or R)\r\ncopy paste the code from below into your script\r\ndon’t worry if you don’t understand the code yet, we will learn all this later\r\n\r\nrun the code in the script line by line. Try both, running code using the Run button and the keyboard shortcut Ctrl/Cmd + Enter/Return\r\nfor each line that you run, observe what is happening to the other panes (console, environment, …) in RStudio. Can you explain what is happening?\r\n\r\n\r\n\r\n# Look at the first lines of the iris dataset\r\nhead(iris)\r\n# What is the iris dataset -> Call the help\r\n?iris\r\n# How many rows and columns does the data set have?\r\nrownum <- nrow(iris)\r\ncolnum <- ncol(iris)\r\nprint(paste0(\"The iris dataset has \", rownum, \" rows and \", colnum, \" columns.\"))\r\n# Some summary statistics on the iris data set\r\nsummary(iris)\r\n\r\n# create a plot\r\nplot(iris$Petal.Length, iris$Petal.Width, \r\n     xlab = \"Petal Length\",\r\n     ylab = \"Petal Width\",\r\n     main = \"Petal Width vs Petal Length\",\r\n     pch = 20,\r\n     col=ifelse(iris$Species == \"setosa\",\"coral1\", \r\n                ifelse(iris$Species == \"virginica\",\"cyan4\", \r\n                       ifelse(iris$Species ==  \"versicolor\",\r\n                              \"darkgoldenrod2\", \"grey\"))))\r\n# add a legend\r\nlegend(\"bottomright\", c(\"setosa\",\"virginica\", \"versicolor\"),\r\n       col = c(\"coral1\",\"cyan4\", \"darkgoldenrod2\"), pch=20)\r\n\r\n\r\n\r\n\r\n2 Vectors in R\r\nAims:\r\nLearn about type conversion\r\nWork with vectors\r\nCreate a new script for the code of this task. Use comments in your code to take notes.\r\n2.1 Type conversion\r\nLook at the vectors below. What do you think will happen?\r\n\r\n\r\nv1 <- c(1, \"a\", 2, 3)\r\nv2 <- c(TRUE, TRUE, 1, FALSE, 0)\r\nv3 <- c(0, \"23\", 5, 7)\r\nv4 <- c(4L, 6L, 23.5345)\r\n\r\n\r\n\r\nCopy the vectors to your script and check out the data types of the vectors using typeof.\r\nTry to explicitly convert the vectors to integer and to character. What happens?\r\n2.2 Working with vectors\r\nYou have the following vectors:\r\nspecies: name of species\r\nbodywt_kg: body weight of the species in kg\r\nbrainwt_g: brain weight of the species in kg\r\n\r\n\r\nspecies <- c(\r\n  \"MountainBeaver\", \"Cow\", \"GreyWolf\", \"Goat\",\r\n  \"GuineaPig\", \"Diplodocus\", \"AsianElephant\", \"Donkey\",\r\n  \"Horse\", \"PotarMonkey\", \"Cat\", \"Giraffe\",\r\n  \"Gorilla\", \"Human\", \"AfricanElephant\", \"Triceratops\",\r\n  \"RhesusMonkey\", \"Kangaroo\", \"GoldenHamster\", \"Mouse\",\r\n  \"Rabbit\", \"Sheep\", \"Jaguar\", \"Chimpanzee\",\r\n  \"Rat\", \"Brachiosaurus\", \"Mole\", \"Pig\"\r\n)\r\n\r\nbodywt_kg <- c(\r\n  1.4, 465, 36.3, 27.7, 1., 11700, 2547, 187.1,\r\n  521, 10, 3.3, 529, 207, 62, 6654, 9400,\r\n  6.8, 35, 0.1, 0.02, 2.5, 55.5, 100, 52.2,\r\n  0.3, 87000, 0.1, 192\r\n)\r\n\r\nbrainwt_g <- c(\r\n  8.1, 423, 119.5, 115, 5.5, 50, 4603, 419, 655, 115, 25.6,\r\n  680, 406, 1320, 5712, 70, 179, 56, 1, 0.4, 12.1, 175,\r\n  157, 440, 1.9, 154.5, 3, 180\r\n)\r\n\r\n\r\n\r\nTasks\r\nCheck if the following animals are contained in the data set:\r\n\r\n\r\nanimals_to_check <- c(\"Snail\", \"Goat\", \"Chimpanzee\", \"Rat\", \"Dragon\", \"Eagle\")\r\n\r\n\r\n\r\nConvert brain weight from g to kg and save result it in a new vector brainwt_kg\r\nCalculate the mean brain weight\r\nWhat is the ratio of brain weight to body weight in percent? Calculate it and save the result in a new vector\r\nAre there any animals with a larger brain to body ratio than humans? If yes, which ones?\r\nHint: extract human ratio and save it in a variable first\r\n\r\nExtras\r\nRound the ratio values to 4 decimal places with the round function\r\nhave a look at ?round to check out how to use it\r\n\r\nWhich animal has the smallest brain to body ratio?\r\nAdd the following three animals to the data vectors\r\n\r\n\r\nspecies_new <- c(\"Eagle\", \"Snail\", \"Lion\")\r\nbrainwt_g_new <- c(40, NA, 500)\r\nbodywt_kg_new <- c(18, 0.01, 550)\r\n\r\n\r\n\r\nNow calculate the mean brain weight again. Can you explain what happens? Can you fix it?\r\nhint: have a look at ?mean\r\n\r\n3 Tibbles in R\r\nAims:\r\nCreate and manipulate tibbles with base R:\r\nindexing\r\nadding columns\r\nchanging values\r\n\r\n3.1 Getting started with tibbles\r\nBefore you start the task:\r\nInstall the tibble package by calling install.packages(\"tibble\") in the console.\r\nOpen your script for the task and put library(tibble) on top\r\nExecute this line and the tibble package is loaded into your R session and ready to use\r\n3.2 Creating a tibble\r\nUse the vectors species, brainwt_kg, bodywt_kg from the last task and combine them in a tibble.\r\nAdd the following 3 columns to this tibble:\r\nThe ratio of brain weight to body weight\r\nA column that indicates whether an animal has a large or a small brain\r\nPut the string \"large\" into this column if the brain-body weight ratio is higher than 1%\r\nElse put \"small\" into the column\r\n\r\nThe order of the animals to the data:\r\n\r\n\r\norder <- c(\r\n  \"Rodentia\", \"Artiodactyla\", \"Carnivora\", \"Artiodactyla\", \"Rodentia\", NA,\r\n  \"Proboscidea\", rep(\"Perissodactyla\", 2), NA, \"Carnivora\", \"Artiodactyla\",\r\n  rep(\"Primates\", 2), \"Proboscidea\", \"Ornithischia\", \"Primates\", \"Diprotodontia\",\r\n  \"Rodentia\", \"Rodentia\", \"Lagomorpha\", \"Artiodactyla\", \"Carnivora\", \"Primates\",\r\n  \"Rodentia\", NA, \"Eulipotyphla\", \"Artiodactyla\"\r\n)\r\n\r\n\r\n\r\n3.3 Exploring the tibble\r\nExplore the tibble you created with the different function that you learned in the presentation. You can for example try\r\nview() and explore what you can do in the view window that opens: searching, filtering, sorting columns\r\nstr() to view the structure of the data\r\nsummary()\r\n…\r\n3.4 Indexing\r\nNow let’s try some indexing on our data.\r\nTry the following selections\r\nrows 1, 5, and 7 and the columns species and bodywt_kg\r\nselect rows 1 to 10, all columns\r\nselect the last column of the last row without using the row and column index (so don’t use any numbers in this command)\r\nselect only rows that belong to the order of primates, rodentia and carnivora\r\nNow, create two subsets of the data: one for the small brained animals and one for the large brained animals. To create the subset, you can use the new column with the brain size category that you added before.\r\nCalculate the mean and the standard deviation (sd()) of the brain to body ratio for both subsets.\r\n\r\nReference\r\nWolfram Research, “Sample Data: Animal Weights” from the Wolfram Data Repository (2016) https://doi.org/10.24097/wolfram.43616.data\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-29T17:42:03+02:00"
    },
    {
      "path": "02_solutions_controller.html",
      "title": "Solutions for day 2",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 ggplot2\r\n1.1 and 1.2 Getting started with ggplot and palmerpenguins\r\n1.3 Exploratory plotting\r\n1.4 Beautify the plots\r\n1.5 Save one of the plots on your machine\r\nReferences\r\n\r\n2 dplyr\r\nselect\r\narrange\r\nmutate\r\ntransmute\r\nsummarize\r\npipe\r\n3 readr\r\n3 tidyr\r\n\r\n\r\n1 ggplot2\r\n1.1 and 1.2 Getting started with ggplot and palmerpenguins\r\n\r\n\r\n# install.packages(\"tidyverse\")\r\n# install.packages(\"palmerpenguins\")\r\nlibrary(tidyverse)\r\nlibrary(palmerpenguins)\r\n\r\n\r\n\r\nHave a look at the penguin data set\r\n\r\n\r\npenguins\r\n\r\n\r\n\r\n\r\n# A tibble: 344 x 8\r\n  species island    bill_length_mm bill_depth_mm flipper_length_mm\r\n  <fct>   <fct>              <dbl>         <dbl>             <int>\r\n1 Adelie  Torgersen           39.1          18.7               181\r\n2 Adelie  Torgersen           39.5          17.4               186\r\n3 Adelie  Torgersen           40.3          18                 195\r\n4 Adelie  Torgersen           NA            NA                  NA\r\n5 Adelie  Torgersen           36.7          19.3               193\r\n6 Adelie  Torgersen           39.3          20.6               190\r\n# ... with 338 more rows, and 3 more variables: body_mass_g <int>,\r\n#   sex <fct>, year <int>\r\n\r\n1.3 Exploratory plotting\r\n1.3.1 Relationship between bill length and bill depth (scatterplot)\r\nWhat is the relationship between bill length and bill depth?\r\nCreate a scatterplot with bill length on the x-axis and bill depth on the y-axis\r\nCan you add a regression line?\r\nAdd species as color aesthetic. Does your interpretation of the data change?\r\nWhat is the difference between adding color as a global aesthetic or as a local aesthetic of the point layer?\r\n\r\nAdd species as shape aesthetic as well to distinguish the species\r\n\r\n\r\n# Bill length vs. bill depth scatterplot with regression line\r\nggplot(\r\n  data = penguins,\r\n  aes(\r\n    x = bill_length_mm,\r\n    y = bill_depth_mm\r\n  )\r\n) +\r\n  geom_point() +\r\n  geom_smooth(method = \"lm\", se = FALSE)\r\n\r\n\r\n\r\n\r\n\r\n\r\n# or short\r\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\r\n  geom_point() +\r\n  geom_smooth(method = \"lm\", se = FALSE)\r\n\r\n\r\n\r\nIf we add the color aesthetic locally to the point layer, only this layer will be affected by it. The regression line is not separated by species but still calculated and plotted for all data points together:\r\n\r\n\r\n# Bill length vs. bill depth scatterplot with regression line\r\n# color as aesthetic local to the point layer\r\nggplot(penguins, aes(bill_length_mm, bill_depth_mm)) +\r\n  geom_point(aes(color = species)) +\r\n  geom_smooth(method = \"lm\", se = FALSE)\r\n\r\n\r\n\r\n\r\nWe can see an example of the Simpson’s paradox here. If you don’t consider species, it looks like the bill depth decreases with bill length. But after separating the data by species, we see that the effect is actually the opposite.\r\nTo draw separate regression lines for the species, we need to either add the color aesthetic to the smooth layer as well, or define the color aesthetic gloablly in the top layer ggplot call.\r\n\r\n\r\n# Option A: Define color aesthetic in smooth layer as well\r\nggplot(penguins, aes(x = bill_length_mm, y = bill_depth_mm)) +\r\n  geom_point(aes(color = species)) +\r\n  geom_smooth(aes(color = species),\r\n    method = \"lm\", se = FALSE\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n\r\n# Option B: Define color aesthetic once globally\r\nggplot(penguins, aes(\r\n  x = bill_length_mm,\r\n  y = bill_depth_mm,\r\n  color = species\r\n)) +\r\n  geom_point() +\r\n  geom_smooth(method = \"lm\", se = FALSE)\r\n\r\n\r\n\r\n1.3.2 Difference in flipper length between species (boxplot)\r\nIs there a difference in flipper length between the species?\r\nCreate a boxplot of the flipper length (y-axis) for the different species (x-axis)\r\nTry adding notches to the boxplots by setting notch = TRUE in the boxplot layer\r\nExtra: Add a layer with geom_jitter(). What does it do?\r\n\r\n\r\n# Basic boxplot of flipper length with notches\r\nggplot(penguins, aes(species, flipper_length_mm)) +\r\n  geom_boxplot(notch = TRUE)\r\n\r\n\r\n\r\n\r\nA geom_jitter will add the individual data points to the plot. It’s important to set a seed here to get the same result for the point position on the x-axis every time. Otherwise your plot is not reproducible.\r\n\r\n\r\nggplot(penguins, aes(species, flipper_length_mm)) +\r\n  geom_boxplot() +\r\n  geom_jitter(position = position_jitter(seed = 123))\r\n\r\n\r\n\r\n\r\n1.3.3 Differences between bodymass of male and female penguins (boxplot)\r\nAre male penguins heavier than female penguins? And is this different between the 3 species?\r\nCreate a boxplot with body mass on the y axis and sex on the x axis\r\nAdd the difference between penguin species to this plot. Try the different options ggplot offers\r\nspecies as color aesthetic\r\nspecies as fill aesthetic\r\nspecies as facet using facet_wrap\r\n\r\nExtra: What happens if you use geom_violin instead of geom_boxplot? Can you combine both geoms in one plot?\r\n\r\n\r\n# Basic boxplot of body mass for penguins of different sex\r\nggplot(penguins, aes(x = sex, y = body_mass_g)) +\r\n  geom_boxplot()\r\n\r\n\r\n\r\n\r\nSpecies as color aesthetic:\r\n\r\n\r\nggplot(penguins, aes(x = sex, \r\n                     y = body_mass_g)) +\r\n  geom_boxplot(aes(color = species))\r\n\r\n\r\n\r\n\r\nSpecies as fill aesthetic\r\n\r\n\r\nggplot(penguins, aes(x = sex, y = body_mass_g)) +\r\n  geom_boxplot(aes(fill = species))\r\n\r\n\r\n\r\n\r\nSpecies as facets:\r\n\r\n\r\nggplot(penguins, aes(x = sex, y = body_mass_g)) +\r\n  geom_boxplot() +\r\n  facet_wrap(~species)\r\n\r\n\r\n\r\n\r\nWith geom_violin\r\n\r\n\r\nggplot(penguins, aes(x = sex, y = body_mass_g)) +\r\n  geom_violin() +\r\n  geom_boxplot(width = .4) +\r\n  facet_wrap(~species)\r\n\r\n\r\n\r\n\r\n1.4 Beautify the plots\r\n1.4.1 Beatuify plots from 1.3\r\nHere are just some examples of how to make the plots from before prettier. Of course there a many other options as well.\r\nExample one: Boxplot of flipper length and species\r\n\r\n\r\nggplot(penguins, aes(species, flipper_length_mm, color = species)) +\r\n  geom_boxplot(width = 0.3) +\r\n  geom_jitter(alpha = 0.5, position = position_jitter(width = 0.2, seed = 123)) +\r\n  ggsci::scale_color_uchicago() +\r\n  labs(x = \"Species\", y = \"Flipper length (mm)\") +\r\n  theme_minimal() +\r\n  theme(legend.position = \"none\")\r\n\r\n\r\n\r\n\r\nWhat was changed compared to the basic plot?\r\nAdd color for each species by setting a global color aesthetic\r\nMake boxes and jitter points less wide by setting width for both layers\r\nMake jitter points slightly transparent by specifying alpha = 0.5 for the jitter layer\r\nChange the color to nicer colors from the ggsci package\r\nChange from default theme to theme_minimal()\r\nRemove the legend with legend.position = \"none\"\r\nChange the axis labels with labs()\r\nExample two: Reproducing the plot from the presentation\r\nThe following code is adapted from the palmerpengins package website.\r\n\r\n\r\nggplot(\r\n  data = penguins,\r\n  aes(\r\n    x = bill_length_mm,\r\n    y = bill_depth_mm,\r\n    color = species,\r\n    shape = species\r\n  )\r\n) +\r\n  geom_point(size = 3, alpha = 0.8) +\r\n  geom_smooth(method = \"lm\", se = FALSE) +\r\n  scale_color_manual(values = c(\"darkorange\", \"purple\", \"cyan4\")) +\r\n  labs(\r\n    title = \"Penguin bill dimensions\",\r\n    subtitle = \"Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER\",\r\n    x = \"Bill length (mm)\",\r\n    y = \"Bill depth (mm)\",\r\n    color = \"Penguin species\",\r\n    shape = \"Penguin species\"\r\n  ) +\r\n  theme_minimal() +\r\n  theme(\r\n    legend.position = c(0.85, 0.15),\r\n    legend.background = element_rect(fill = \"white\", color = NA)\r\n  )\r\n\r\n\r\n\r\n\r\nWhat was changed compared to the basic plot?\r\nMake points larger and slightly transparent by setting size and alpha for the point layer\r\nChange to custom color scale\r\nAdd title and subtitle with labs\r\nChange title of x-axis, y-axis and legend for color and shape aesthetic with labs\r\nUse theme_minimal() instead of default theme\r\nChange legend position to bottom right corner within the plot\r\nPositions are relative to the bottom left corner of the plot\r\n0.85 (85% of plot width) to the right\r\n0.15 (15% of plot height) towards the top\r\n\r\n1.5 Save one of the plots on your machine\r\nExample with one of the plots from above:\r\n\r\n\r\nflipper_box <- ggplot(penguins, aes(species, flipper_length_mm, color = species)) +\r\n  geom_boxplot(width = 0.3) +\r\n  geom_jitter(alpha = 0.5, position = position_jitter(width = 0.2, seed = 123)) +\r\n  ggsci::scale_color_uchicago() +\r\n  labs(x = \"Species\", y = \"Flipper length (mm)\") +\r\n  theme_minimal() +\r\n  theme(legend.position = \"none\")\r\n\r\n# save as png in /img directory of the project\r\nggsave(filename = \"./img/flipper_box.png\", flipper_box)\r\n# save as pdf in /img directory of the project\r\nggsave(filename = \"./img/flipper_box.pdf\", flipper_box)\r\n\r\n\r\n\r\nReferences\r\nCheck out the package website of the palmerpenguin package. They have more nice examples of data visualizations that you can do with ggplot.\r\nHorst AM, Hill AP, Gorman KB (2020). palmerpenguins: Palmer Archipelago (Antarctica) penguin data. R package version 0.1.0. https://allisonhorst.github.io/palmerpenguins/. doi: 10.5281/zenodo.3960218.\r\n\r\n2 dplyr\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(palmerpenguins)\r\n\r\n\r\n\r\nFilter\r\nFind all penguins that\r\nlive on the island Dream in the year 2007\r\n\r\n\r\nfilter(penguins, island == \"Dream\" & year == 2007)\r\n\r\n\r\n# A tibble: 46 x 8\r\n   species island bill_length_mm bill_depth_mm flipper_length_mm\r\n   <fct>   <fct>           <dbl>         <dbl>             <int>\r\n 1 Adelie  Dream            39.5          16.7               178\r\n 2 Adelie  Dream            37.2          18.1               178\r\n 3 Adelie  Dream            39.5          17.8               188\r\n 4 Adelie  Dream            40.9          18.9               184\r\n 5 Adelie  Dream            36.4          17                 195\r\n 6 Adelie  Dream            39.2          21.1               196\r\n 7 Adelie  Dream            38.8          20                 190\r\n 8 Adelie  Dream            42.2          18.5               180\r\n 9 Adelie  Dream            37.6          19.3               181\r\n10 Adelie  Dream            39.8          19.1               184\r\n# ... with 36 more rows, and 3 more variables: body_mass_g <int>,\r\n#   sex <fct>, year <int>\r\n\r\nhave a bill length between 40 and 45 mm\r\n\r\n\r\nfilter(penguins, between(bill_length_mm, 40, 45))\r\n\r\n\r\n# A tibble: 77 x 8\r\n   species island    bill_length_mm bill_depth_mm flipper_length_mm\r\n   <fct>   <fct>              <dbl>         <dbl>             <int>\r\n 1 Adelie  Torgersen           40.3          18                 195\r\n 2 Adelie  Torgersen           42            20.2               190\r\n 3 Adelie  Torgersen           41.1          17.6               182\r\n 4 Adelie  Torgersen           42.5          20.7               197\r\n 5 Adelie  Biscoe              40.6          18.6               183\r\n 6 Adelie  Biscoe              40.5          17.9               187\r\n 7 Adelie  Biscoe              40.5          18.9               180\r\n 8 Adelie  Dream               40.9          18.9               184\r\n 9 Adelie  Dream               42.2          18.5               180\r\n10 Adelie  Dream               40.8          18.4               195\r\n# ... with 67 more rows, and 3 more variables: body_mass_g <int>,\r\n#   sex <fct>, year <int>\r\n\r\n# same as \r\nfilter(penguins, bill_length_mm < 45 & bill_length_mm > 40)\r\n\r\n\r\n# A tibble: 76 x 8\r\n   species island    bill_length_mm bill_depth_mm flipper_length_mm\r\n   <fct>   <fct>              <dbl>         <dbl>             <int>\r\n 1 Adelie  Torgersen           40.3          18                 195\r\n 2 Adelie  Torgersen           42            20.2               190\r\n 3 Adelie  Torgersen           41.1          17.6               182\r\n 4 Adelie  Torgersen           42.5          20.7               197\r\n 5 Adelie  Biscoe              40.6          18.6               183\r\n 6 Adelie  Biscoe              40.5          17.9               187\r\n 7 Adelie  Biscoe              40.5          18.9               180\r\n 8 Adelie  Dream               40.9          18.9               184\r\n 9 Adelie  Dream               42.2          18.5               180\r\n10 Adelie  Dream               40.8          18.4               195\r\n# ... with 66 more rows, and 3 more variables: body_mass_g <int>,\r\n#   sex <fct>, year <int>\r\n\r\nfor which we know the sex\r\n\r\n\r\nfilter(penguins, !is.na(sex))\r\n\r\n\r\n# A tibble: 333 x 8\r\n   species island    bill_length_mm bill_depth_mm flipper_length_mm\r\n   <fct>   <fct>              <dbl>         <dbl>             <int>\r\n 1 Adelie  Torgersen           39.1          18.7               181\r\n 2 Adelie  Torgersen           39.5          17.4               186\r\n 3 Adelie  Torgersen           40.3          18                 195\r\n 4 Adelie  Torgersen           36.7          19.3               193\r\n 5 Adelie  Torgersen           39.3          20.6               190\r\n 6 Adelie  Torgersen           38.9          17.8               181\r\n 7 Adelie  Torgersen           39.2          19.6               195\r\n 8 Adelie  Torgersen           41.1          17.6               182\r\n 9 Adelie  Torgersen           38.6          21.2               191\r\n10 Adelie  Torgersen           34.6          21.1               198\r\n# ... with 323 more rows, and 3 more variables: body_mass_g <int>,\r\n#   sex <fct>, year <int>\r\n\r\nof the species Adelie or Gentoo\r\n\r\n\r\nfilter(penguins, species %in% c(\"Adelie\", \"Gentoo\"))\r\n\r\n\r\n# A tibble: 276 x 8\r\n   species island    bill_length_mm bill_depth_mm flipper_length_mm\r\n   <fct>   <fct>              <dbl>         <dbl>             <int>\r\n 1 Adelie  Torgersen           39.1          18.7               181\r\n 2 Adelie  Torgersen           39.5          17.4               186\r\n 3 Adelie  Torgersen           40.3          18                 195\r\n 4 Adelie  Torgersen           NA            NA                  NA\r\n 5 Adelie  Torgersen           36.7          19.3               193\r\n 6 Adelie  Torgersen           39.3          20.6               190\r\n 7 Adelie  Torgersen           38.9          17.8               181\r\n 8 Adelie  Torgersen           39.2          19.6               195\r\n 9 Adelie  Torgersen           34.1          18.1               193\r\n10 Adelie  Torgersen           42            20.2               190\r\n# ... with 266 more rows, and 3 more variables: body_mass_g <int>,\r\n#   sex <fct>, year <int>\r\n\r\n# or\r\nfilter(penguins, species == \"Adelie\" | species == \"Gentoo\")\r\n\r\n\r\n# A tibble: 276 x 8\r\n   species island    bill_length_mm bill_depth_mm flipper_length_mm\r\n   <fct>   <fct>              <dbl>         <dbl>             <int>\r\n 1 Adelie  Torgersen           39.1          18.7               181\r\n 2 Adelie  Torgersen           39.5          17.4               186\r\n 3 Adelie  Torgersen           40.3          18                 195\r\n 4 Adelie  Torgersen           NA            NA                  NA\r\n 5 Adelie  Torgersen           36.7          19.3               193\r\n 6 Adelie  Torgersen           39.3          20.6               190\r\n 7 Adelie  Torgersen           38.9          17.8               181\r\n 8 Adelie  Torgersen           39.2          19.6               195\r\n 9 Adelie  Torgersen           34.1          18.1               193\r\n10 Adelie  Torgersen           42            20.2               190\r\n# ... with 266 more rows, and 3 more variables: body_mass_g <int>,\r\n#   sex <fct>, year <int>\r\n\r\ncount\r\ncount the penguins on each island\r\n\r\n\r\ncount(penguins, island)\r\n\r\n\r\n# A tibble: 3 x 2\r\n  island        n\r\n  <fct>     <int>\r\n1 Biscoe      168\r\n2 Dream       124\r\n3 Torgersen    52\r\n\r\ncount the penguins on each island and of each species\r\n\r\n\r\ncount(penguins, island, species)\r\n\r\n\r\n# A tibble: 5 x 3\r\n  island    species       n\r\n  <fct>     <fct>     <int>\r\n1 Biscoe    Adelie       44\r\n2 Biscoe    Gentoo      124\r\n3 Dream     Adelie       56\r\n4 Dream     Chinstrap    68\r\n5 Torgersen Adelie       52\r\n\r\nArrange\r\nsort penguins to find penguins with the highest body mass\r\n\r\n\r\narrange(penguins, desc(body_mass_g))\r\n\r\n\r\n# A tibble: 344 x 8\r\n   species island bill_length_mm bill_depth_mm flipper_length_mm\r\n   <fct>   <fct>           <dbl>         <dbl>             <int>\r\n 1 Gentoo  Biscoe           49.2          15.2               221\r\n 2 Gentoo  Biscoe           59.6          17                 230\r\n 3 Gentoo  Biscoe           51.1          16.3               220\r\n 4 Gentoo  Biscoe           48.8          16.2               222\r\n 5 Gentoo  Biscoe           45.2          16.4               223\r\n 6 Gentoo  Biscoe           49.8          15.9               229\r\n 7 Gentoo  Biscoe           48.4          14.6               213\r\n 8 Gentoo  Biscoe           49.3          15.7               217\r\n 9 Gentoo  Biscoe           55.1          16                 230\r\n10 Gentoo  Biscoe           49.5          16.2               229\r\n# ... with 334 more rows, and 3 more variables: body_mass_g <int>,\r\n#   sex <fct>, year <int>\r\n\r\nsort penguins to find penguins with the lowest body mass\r\n\r\n\r\narrange(penguins, body_mass_g)\r\n\r\n\r\n\r\n# A tibble: 344 x 8\r\n   species   island    bill_length_mm bill_depth_mm flipper_length_mm\r\n   <fct>     <fct>              <dbl>         <dbl>             <int>\r\n 1 Chinstrap Dream               46.9          16.6               192\r\n 2 Adelie    Biscoe              36.5          16.6               181\r\n 3 Adelie    Biscoe              36.4          17.1               184\r\n 4 Adelie    Biscoe              34.5          18.1               187\r\n 5 Adelie    Dream               33.1          16.1               178\r\n 6 Adelie    Torgersen           38.6          17                 188\r\n 7 Chinstrap Dream               43.2          16.6               187\r\n 8 Adelie    Biscoe              37.9          18.6               193\r\n 9 Adelie    Dream               37.5          18.9               179\r\n10 Adelie    Dream               37            16.9               185\r\n# ... with 334 more rows, and 3 more variables: body_mass_g <int>,\r\n#   sex <fct>, year <int>\r\n\r\nsort penguins by species and sex\r\n\r\n\r\narrange(penguins, species, sex)\r\n\r\n\r\n# A tibble: 344 x 8\r\n   species island    bill_length_mm bill_depth_mm flipper_length_mm\r\n   <fct>   <fct>              <dbl>         <dbl>             <int>\r\n 1 Adelie  Torgersen           39.5          17.4               186\r\n 2 Adelie  Torgersen           40.3          18                 195\r\n 3 Adelie  Torgersen           36.7          19.3               193\r\n 4 Adelie  Torgersen           38.9          17.8               181\r\n 5 Adelie  Torgersen           41.1          17.6               182\r\n 6 Adelie  Torgersen           36.6          17.8               185\r\n 7 Adelie  Torgersen           38.7          19                 195\r\n 8 Adelie  Torgersen           34.4          18.4               184\r\n 9 Adelie  Biscoe              37.8          18.3               174\r\n10 Adelie  Biscoe              35.9          19.2               189\r\n# ... with 334 more rows, and 3 more variables: body_mass_g <int>,\r\n#   sex <fct>, year <int>\r\n\r\nSelect\r\nselect only the columns species, sex and year\r\n\r\n\r\nselect(penguins, species, sex, year)\r\n\r\n\r\n# A tibble: 344 x 3\r\n   species sex     year\r\n   <fct>   <fct>  <int>\r\n 1 Adelie  male    2007\r\n 2 Adelie  female  2007\r\n 3 Adelie  female  2007\r\n 4 Adelie  <NA>    2007\r\n 5 Adelie  female  2007\r\n 6 Adelie  male    2007\r\n 7 Adelie  female  2007\r\n 8 Adelie  male    2007\r\n 9 Adelie  <NA>    2007\r\n10 Adelie  <NA>    2007\r\n# ... with 334 more rows\r\n\r\nselect the variables based on the following vector\r\n\r\n\r\ncols <- c(\"species\", \"bill_length_mm\", \"flipper_length_mm\", \"i_dont_exits\")\r\nselect(penguins, any_of(cols))\r\n\r\n\r\n# A tibble: 344 x 3\r\n   species bill_length_mm flipper_length_mm\r\n   <fct>            <dbl>             <int>\r\n 1 Adelie            39.1               181\r\n 2 Adelie            39.5               186\r\n 3 Adelie            40.3               195\r\n 4 Adelie            NA                  NA\r\n 5 Adelie            36.7               193\r\n 6 Adelie            39.3               190\r\n 7 Adelie            38.9               181\r\n 8 Adelie            39.2               195\r\n 9 Adelie            34.1               193\r\n10 Adelie            42                 190\r\n# ... with 334 more rows\r\n\r\n# this would return  an error\r\nselect(penguins, all_of(cols))\r\n\r\n\r\nError: Can't subset columns that don't exist.\r\nx Column `i_dont_exits` doesn't exist.\r\n\r\nselect only columns that contain measurements in mm\r\nselect\r\npick columns based on their name\r\nhelpers starts_with() ends_with() contains() matches() from:to\r\narrange\r\ndesc()\r\nmutate\r\nmultiple columns ifelse case_when\r\ntransmute\r\nsummarize\r\ngroup_by ungroup\r\npipe\r\n\r\n3 readr\r\nNo tasks yet\r\n\r\n3 tidyr\r\nNo tasks yet\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-29T17:42:29+02:00"
    },
    {
      "path": "02_tasks_controller.html",
      "title": "Tasks for day 2",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 ggplot2\r\n1.1 Getting started with ggplot and the tidyverse\r\n1.2 Getting the data\r\n1.3 Exploratory plotting\r\n1.4 Beautify the plots\r\n1.5 Save one of the plots on your machine\r\nReferences\r\n\r\n2 dplyr\r\n2.1 Getting started with dplyr\r\n\r\n3 readr\r\n3 tidyr\r\n\r\n1 ggplot2\r\nAims:\r\n\r\n\r\n\r\n1.1 Getting started with ggplot and the tidyverse\r\nA helpful resource for to consult for this task can be the ggplot2 cheatsheet.\r\nBefore you start, make sure to install the tidyverse packages by calling\r\n\r\n\r\ninstall.packages(\"tidyverse\")\r\n\r\n\r\n\r\nThis will install ggplot2 along with other tidyverse packages.\r\nRemember to put library(tidyverse) (or library(ggplot2)) on top of your script to access the ggplot functions.\r\n1.2 Getting the data\r\nTo practice plotting with the ggplot2 package, we will use a data set on 3 species of penguins on islands in Antarctica.\r\n\r\n\r\n\r\nFigure 1: Artwork by Allison Horst\r\n\r\n\r\n\r\nThe data is available from the palmerpenguins package. To get it, you have to:\r\nInstall the package with install.packages(\"palmerpenguins\")\r\nLoad the package at the beginning of your script with library(palmerpenguins)\r\nAfter you have done that, take a moment to get familiar with the data set and its variables. The data set is called penguins: - The data set is available after you loaded the package - Just type penguins in the console and you should see the penguin tibble\r\n1.3 Exploratory plotting\r\nExplore the data set and it’s variables with ggplot. Below, you find some ideas and tasks for plots. I suggest you start with one of them. If you have your own ideas for interesting plots with the penguin data set, feel free to do them instead of continuing with the tasks.\r\nIn the exploratory section, don’t care too much about the beauty of your plots and just use the default theme and colors. This is about exploring the data and testing different visualization options in ggplot.\r\n1.3.1 Relationship between bill length and bill depth (scatterplot)\r\nWhat is the relationship between bill length and bill depth?\r\nCreate a scatterplot with bill length on the x-axis and bill depth on the y-axis\r\nCan you add a regression line?\r\nAdd species as color aesthetic. Does your interpretation of the data change?\r\nWhat is the difference between adding color as a global aesthetic or as a local aesthetic of the point layer?\r\n\r\nAdd species as shape aesthetic as well to distinguish the species\r\n1.3.2 Difference in flipper length between species (boxplot)\r\nIs there a difference in flipper length between the species?\r\nCreate a boxplot of the flipper length (y-axis) for the different species (x-axis)\r\nTry adding notches to the boxplots by setting notch = TRUE in the boxplot layer\r\nExtra: Add a layer with geom_jitter(). What does it do?\r\n1.3.3 Differences between bodymass of male and female penguins (boxplot)\r\nAre male penguins heavier than female penguins? And is this different between the 3 species?\r\nCreate a boxplot with body mass on the y axis and sex on the x axis\r\nAdd the difference between penguin species to this plot. Try the different options ggplot offers\r\nspecies as color aesthetic\r\nspecies as fill aesthetic\r\nspecies as facet using facet_wrap\r\n\r\nExtra: What happens if you use geom_violin instead of geom_boxplot? Can you combine both geoms in one plot?\r\n1.4 Beautify the plots\r\nAlso here: Chose the task that you like more.\r\n1.4.1 Beautify the plots from 1.3\r\nTake the plot from before that you liked the most and try to make it look nice.\r\nHere’s a list of ideas:\r\nAdd a theme layer\r\nCustomize the theme, e.g.\r\nChange the position of the legend\r\nMake the axis titles bold\r\n\r\nChange the color/fill scale of the plot\r\nUse scale_color_manual or scale_fill_manual\r\nTry scale_color_viridis_d() or scale_fill_viridis_d() with different options\r\nTry a color scale from an additional package, e.g. ggsci::scale_color_uchicago() or ggsci::scale_fill_uchicago()\r\nFirst you have to install the ggsci package\r\n\r\n\r\nChange the labels of the x- and y-axis and add a title to the plot\r\n…\r\n1.4.2 Can you reproduce this plot?\r\nTake a look at the plot, we discussed during the presentation:\r\n\r\n\r\n\r\nFigure 2: Visualization from the palmerpenguins package\r\n\r\n\r\n\r\nCan you reproduce this plot? It is similar to the one from Task 1.3.1.\r\nThe colors that are used are:\r\n\r\n\r\n\r\n1.5 Save one of the plots on your machine\r\nSave one of the plots you produced in a variable and then use ggsave to save the plot on your machine. Save the plot in a dedicated plot directory in your RStudio project.\r\nReferences\r\nHorst AM, Hill AP, Gorman KB (2020). palmerpenguins: Palmer Archipelago (Antarctica) penguin data. R package version 0.1.0. https://allisonhorst.github.io/palmerpenguins/. doi: 10.5281/zenodo.3960218.\r\n\r\n2 dplyr\r\nAims:\r\n2.1 Getting started with dplyr\r\nA helpful resource for to consult for this task can be the data wrangling cheatsheet.\r\nBefore you start, make sure to load the tidyverse package and the palmerpenguins package.\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(palmerpenguins)\r\n\r\n\r\n\r\n\r\n3 readr\r\nAims:\r\nNo tasks yet\r\n\r\n3 tidyr\r\nAims:\r\nNo tasks yet\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-29T17:42:32+02:00"
    },
    {
      "path": "03_solutions_controller.html",
      "title": "Tasks for day 3",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 Linear models\r\n2 Linear models transformation\r\n3 Poisson and binary glm\r\n3 Proportion glm\r\n\r\n1 Linear models\r\nAims:\r\nNo tasks yet\r\n\r\n2 Linear models transformation\r\nAims:\r\nNo tasks yet\r\n\r\n3 Poisson and binary glm\r\nAims:\r\nNo tasks yet\r\n\r\n3 Proportion glm\r\nAims:\r\nNo tasks yet\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-29T17:42:36+02:00"
    },
    {
      "path": "03_tasks_controller.html",
      "title": "Tasks for day 3",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 Linear models\r\n2 Linear models transformation\r\n3 Poisson and binary glm\r\n3 Proportion glm\r\n\r\n1 Linear models\r\nAims:\r\nNo tasks yet\r\n\r\n2 Linear models transformation\r\nAims:\r\nNo tasks yet\r\n\r\n3 Poisson and binary glm\r\nAims:\r\nNo tasks yet\r\n\r\n3 Proportion glm\r\nAims:\r\nNo tasks yet\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-29T17:42:38+02:00"
    },
    {
      "path": "download_material_blank.html",
      "title": "You can download the full material after the workshop is finished",
      "description": "For now, please use the material avaialble from this website",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-29T17:42:41+02:00"
    },
    {
      "path": "index.html",
      "title": "Introduction to R for Data Analysis",
      "description": "Welcome to the workshop. You can find all material and information that you need to follow on this website.\n",
      "author": [],
      "contents": "\r\nWorkshop organization and schedule\r\n🕘 9 a.m. - 4 p.m. (🥪 ~ 12 a.m. - 1 p.m.) 📍 We will meet in this webex meeting\r\nI set up a shared document where we can collect questions, additional resources, etc. that come up during the workshop. You can find the document here, please feel free to edit it as you like.\r\nWorkshop Material\r\nYou can find all the material for the workshop on this website. On top, you can navigate to the presentation slides, the tasks for each day and the code for all examples from the presentations and the solutions for the tasks.\r\nThe task solutions will be uploaded after the respective workshop day is finished.\r\nIf you want to download the slides in pdf format, you can do that here.\r\nAfter the workshop, you can download a zipped version of the content from here\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-29T17:42:44+02:00"
    },
    {
      "path": "online_resources.html",
      "title": "Additional online resources",
      "description": "Below you can find a collection of helpful links to further online resources regarding the workshop topics.\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nGeneral\r\nIntroduction to R\r\nTidyverse\r\nggplot\r\ndplyr\r\n\r\n\r\nGeneral\r\ncheatsheet collection by RStudio, including cheat sheets for ggplot2, dplyr, readr,…\r\nIntroduction to R\r\nTidyverse\r\nThe R for Data Science book by Hadley Wickham is a very good book to start with.\r\nggplot\r\nggplot cheatsheet offers an overview of all possibilities of ggplot\r\ndplyr\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-07-29T17:42:46+02:00"
    }
  ],
  "collections": []
}
