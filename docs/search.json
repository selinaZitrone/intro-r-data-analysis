{
  "articles": [
    {
      "path": "01_solutions_controller.html",
      "title": "Solutions for day 1",
      "author": [],
      "contents": "\r\n\r\nContents\r\n2 Data types and vectors\r\n3 Tibbles\r\n4 Reading and writing tibbles\r\nReference\r\n\r\n2 Data types and vectors\r\n\r\n\r\nFALSE\r\n\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n3 Tibbles\r\n\r\n\r\nFALSE\r\n\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n4 Reading and writing tibbles\r\n\r\n\r\nFALSE\r\n\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\nReference\r\nWolfram Research, “Sample Data: Animal Weights” from the Wolfram Data Repository (2016) https://doi.org/10.24097/wolfram.43616.data\r\n\r\n\r\n\r\n",
      "last_modified": "2021-08-01T13:12:59+02:00"
    },
    {
      "path": "01_tasks_controller.html",
      "title": "Tasks for day 1",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 Set up an RStudio project\r\n1.1 Change settings\r\n1.2 Create an RStudio project\r\n1.3 Add an R script to the project\r\n\r\n2 Data types and vectors\r\n2.1 Type conversion\r\n2.2 Working with vectors\r\n\r\n3 Tibbles\r\n3.1 Getting started with tibbles\r\n3.2 Creating a tibble\r\n3.3 Exploring the tibble\r\n\r\n4 Reading and writing tibbles\r\n3.1 Getting started with readr and the tidyverse\r\n3.2 Create a tibble and write it\r\n3.3 Read data into R\r\n\r\nReference\r\n\r\n1 Set up an RStudio project\r\n1.1 Change settings\r\nBefore you get started, there is an important setting that you should change in RStudio. By default, RStudio will save the workspace of your current session in an .Rdata file. This would allow you to start the next session exactly where you left it by loading the .Rdata file.\r\nThis is not a good default. We always want to start R from a clean slate to ensure reproducibility and minimize error potential.\r\nIn RStudio go to Tools -> Global Options -> General and\r\nremove the check mark for “Restore .RData into workspace at setup”\r\nNever save workspace to .RData on exit\r\n\r\n\r\n\r\n1.2 Create an RStudio project\r\nCreate an RStudio project for all the scripts, notes, data, etc. from this workshop.\r\nCreate a project in a directory of your choice following the instructions from the slides\r\nUse the File pane in RStudio to create a basic folder structure in your project which will be filled with files in the next days\r\ne.g. create the folders data, R, documents,…\r\nyou can always change the structure of your project later, but for now, we want some basic folders that we can navigate\r\n\r\nNow close RStudio\r\nFind the project in your computer’s file explorer and open it\r\nYou can add files to your project either directly in RStudio, or in the file explorer of your operating system.\r\n1.3 Add an R script to the project\r\ncreate a new R script and save it in the appropriate folder of your project (e.g. scripts or R)\r\ncopy and paste the code from below into your script\r\ndon’t worry if you don’t understand the code yet, we will learn all this later\r\n\r\nrun the code in the script line by line. Try both, running code using the Run button (in the top right corner of your script pane) and the keyboard shortcut Ctrl/Cmd + Enter/Return\r\nfor each line that you run, observe what is happening to the other panes (console, environment, …) in RStudio. Can you explain what is happening?\r\n\r\n\r\n\r\n# Look at the first lines of the iris dataset\r\nhead(iris)\r\n# What is the iris dataset -> Call the help\r\n?iris\r\n# How many rows and columns does the data set have?\r\nrownum <- nrow(iris)\r\ncolnum <- ncol(iris)\r\nprint(paste0(\"The iris dataset has \", rownum, \" rows and \", colnum, \" columns.\"))\r\n# Some summary statistics on the iris data set\r\nsummary(iris)\r\n\r\n# create a plot\r\nplot(iris$Petal.Length, iris$Petal.Width, \r\n     xlab = \"Petal Length\",\r\n     ylab = \"Petal Width\",\r\n     main = \"Petal Width vs Petal Length\",\r\n     pch = 20,\r\n     col=ifelse(iris$Species == \"setosa\",\"coral1\", \r\n                ifelse(iris$Species == \"virginica\",\"cyan4\", \r\n                       ifelse(iris$Species ==  \"versicolor\",\r\n                              \"darkgoldenrod2\", \"grey\"))))\r\n# add a legend\r\nlegend(\"bottomright\", c(\"setosa\",\"virginica\", \"versicolor\"),\r\n       col = c(\"coral1\",\"cyan4\", \"darkgoldenrod2\"), pch=20)\r\n\r\n\r\n\r\n\r\n2 Data types and vectors\r\nCreate a new script for this task. Use comments in your code to take notes.\r\n2.1 Type conversion\r\nLook at the vectors below. What do you think will happen? Which data type do they have?\r\n\r\n\r\nv1 <- c(1, \"a\", 2, 3)\r\nv2 <- c(TRUE, TRUE, 1, FALSE, 0)\r\nv3 <- c(0, \"23\", 5, 7)\r\nv4 <- c(4L, 6L, 23.5345)\r\n\r\n\r\n\r\nCopy the vectors to your script and check their data types using typeof.\r\nTry to explicitly convert the vectors to integer and to character. What happens?\r\n2.2 Working with vectors\r\nYou have the following vectors:\r\nspecies: name of the species\r\nbodywt_kg: body weight of the species in kg\r\nbrainwt_g: brain weight of the species in g\r\n\r\n\r\nspecies <- c(\r\n  \"MountainBeaver\", \"Cow\", \"GreyWolf\", \"Goat\",\r\n  \"GuineaPig\", \"Diplodocus\", \"AsianElephant\", \"Donkey\",\r\n  \"Horse\", \"PotarMonkey\", \"Cat\", \"Giraffe\",\r\n  \"Gorilla\", \"Human\", \"AfricanElephant\", \"Triceratops\",\r\n  \"RhesusMonkey\", \"Kangaroo\", \"GoldenHamster\", \"Mouse\",\r\n  \"Rabbit\", \"Sheep\", \"Jaguar\", \"Chimpanzee\",\r\n  \"Rat\", \"Brachiosaurus\", \"Mole\", \"Pig\"\r\n)\r\n\r\nbodywt_kg <- c(\r\n  1.4, 465, 36.3, 27.7, 1., 11700, 2547, 187.1,\r\n  521, 10, 3.3, 529, 207, 62, 6654, 9400,\r\n  6.8, 35, 0.1, 0.02, 2.5, 55.5, 100, 52.2,\r\n  0.3, 87000, 0.1, 192\r\n)\r\n\r\nbrainwt_g <- c(\r\n  8.1, 423, 119.5, 115, 5.5, 50, 4603, 419, 655, 115, 25.6,\r\n  680, 406, 1320, 5712, 70, 179, 56, 1, 0.4, 12.1, 175,\r\n  157, 440, 1.9, 154.5, 3, 180\r\n)\r\n\r\n\r\n\r\nTasks\r\nCheck if the following animals are contained in the species vector:\r\n\r\n\r\nanimals_to_check <- c(\"Snail\", \"Goat\", \"Chimpanzee\", \"Rat\", \"Dragon\", \"Eagle\")\r\n\r\n\r\n\r\nConvert brain weight from g to kg and save the result in a new vector brainwt_kg\r\nCalculate mean and standard deviation of the brain weight\r\nWhich species have a brain weight larger than the mean brain weight?\r\nCalculate the ratio of brain weight to body weight in percent and save the result in a new variable\r\nAre there any animals with a larger brain to body ratio than humans? If yes, which ones?\r\nHint: find the ratio for humans and save it in a variable first\r\n\r\nExtras\r\nRound the ratio vector to 4 decimal places with the round function\r\ntype ?round into the console to open the help of the round function\r\n\r\nWhich animal has the smallest brain to body ratio?\r\nHint: have a look at the min function\r\n\r\nAdd the following three animals to the data vectors\r\n\r\n\r\nspecies_new <- c(\"Eagle\", \"Snail\", \"Lion\")\r\nbrainwt_g_new <- c(40, NA, 500)\r\nbodywt_kg_new <- c(18, 0.01, 550)\r\n\r\n\r\n\r\nNow calculate the mean brain weight again. Can you explain what happens? Can you fix it?\r\nhint: have a look at ?mean\r\n\r\n3 Tibbles\r\n3.1 Getting started with tibbles\r\nBefore you start the task:\r\nInstall the tibble package by calling install.packages(\"tibble\") in the console.\r\nOpen your script for the task and put library(tibble) on top\r\nExecute this line and the tibble package is loaded into your R session and ready to use\r\n3.2 Creating a tibble\r\nUse the vectors species, brainwt_kg, bodywt_kg from before and combine them in a tibble.\r\n3.3 Exploring the tibble\r\nExplore the tibble you created with the different functions that you learned in the presentation. You can for example try\r\nview() and explore what you can do in the view window that opens: searching, filtering, sorting columns\r\nstr() to view the structure of the data\r\nsummary()\r\n…\r\n\r\n4 Reading and writing tibbles\r\n3.1 Getting started with readr and the tidyverse\r\nBefore you start, make sure to install the tidyverse packages by calling\r\n\r\n\r\ninstall.packages(\"tidyverse\")\r\n\r\n\r\n\r\nThis will install readr along with other tidyverse packages.\r\nRemember to put library(tidyverse) (or library(readr)) on top of your script to access the readr functions.\r\n3.2 Create a tibble and write it\r\nBefore we try the read_* functions, we will create a tibble in R and save it to disk.\r\nLet’s use the tibble with animal brain and body weights from the last task and write it to our project directory.\r\nBefore writing the data\r\ncreate a dedicated data sub-directory in your project (if you don’t have one yet)\r\nNow write the animals tibble to that sub-directory. Try writing a file with\r\ncomma separator as csv\r\ntab separator as txt\r\nCheck if the files were written into the correct folder.\r\n3.3 Read data into R\r\nNow, try to read the two data sets back into R using the appropriate read_*() functions for the separators.\r\nIf this was successful, navigate to your data directory using the Files pane of RStudio. Try clicking on both the .txt and the .csv file that you just saved there. What is different? Try the Import Dataset button for the .csv file.\r\n\r\nReference\r\nWolfram Research, “Sample Data: Animal Weights” from the Wolfram Data Repository (2016) https://doi.org/10.24097/wolfram.43616.data\r\n\r\n\r\n\r\n",
      "last_modified": "2021-08-01T13:13:01+02:00"
    },
    {
      "path": "02_solutions_controller.html",
      "title": "Solutions for day 2",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 ggplot2\r\n2 dplyr\r\n3 tidyr\r\n\r\n1 ggplot2\r\n\r\n\r\nFALSE\r\n\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n2 dplyr\r\n\r\n\r\nFALSE\r\n\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n3 tidyr\r\n\r\n\r\nFALSE\r\n\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-08-01T13:13:03+02:00"
    },
    {
      "path": "02_tasks_controller.html",
      "title": "Tasks for day 2",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 ggplot2\r\n1.1 Getting started\r\n1.2 Getting the data\r\n1.3 Exploratory plotting\r\n1.4 Beautify the plots\r\n1.5 Save one of the plots on your machine\r\nReferences\r\n\r\n2 dplyr\r\n2.1 Getting started with dplyr\r\n2.2 Data transformation with dplyr\r\nExtras\r\n\r\n3 tidyr\r\n4.1 Getting started with tidyr\r\n4.2 Let’s tidy some data sets\r\n\r\n\r\n1 ggplot2\r\n1.1 Getting started\r\nA helpful resource for to consult for this task can be the ggplot2 cheatsheet.\r\nRemember to put library(tidyverse) (or library(ggplot2)) on top of your script to access the ggplot functions.\r\n1.2 Getting the data\r\nTo practice plotting with the ggplot2 package, we will use a data set on 3 species of penguins on islands in Antarctica.\r\n\r\n\r\n\r\nFigure 1: Artwork by Allison Horst\r\n\r\n\r\n\r\nThe data is available from the palmerpenguins package. To get it, you have to:\r\nInstall the package with install.packages(\"palmerpenguins\")\r\nLoad the package at the beginning of your script with library(palmerpenguins)\r\nAfter you have done that, take a moment to get familiar with the data set and its variables. The data set is called penguins: - The data set is available after you loaded the package - Just type penguins in the console and you should see the penguin tibble\r\n1.3 Exploratory plotting\r\nExplore the data set and it’s variables with ggplot. Below, you find some ideas and tasks for plots. I suggest you start with one of them. If you have your own ideas for interesting plots with the penguin data set, feel free to do them instead of continuing with the tasks.\r\nIn the exploratory section, don’t care too much about the beauty of your plots and just use the default theme and colors. This is about exploring the data and testing different visualization options in ggplot.\r\n1.3.1 Relationship between bill length and bill depth (scatterplot)\r\nWhat is the relationship between bill length and bill depth?\r\nCreate a scatterplot with bill length on the x-axis and bill depth on the y-axis\r\nCan you add a regression line?\r\nAdd species as color aesthetic. Does your interpretation of the data change?\r\nWhat is the difference between adding color as a global aesthetic or as a local aesthetic of the point layer?\r\n\r\nAdd species as shape aesthetic as well to distinguish the species\r\n1.3.2 Difference in flipper length between species (boxplot)\r\nIs there a difference in flipper length between the species?\r\nCreate a boxplot of the flipper length (y-axis) for the different species (x-axis)\r\nTry adding notches to the boxplots by setting notch = TRUE in the boxplot layer\r\nExtra: Add a layer with geom_point(). Try setting position = position_jitter() as argument in the point layer. What does it do?\r\n1.3.3 Differences between bodymass of male and female penguins (boxplot)\r\nAre male penguins heavier than female penguins? And is this different between the 3 species?\r\nCreate a boxplot with body mass on the y axis and sex on the x axis\r\nAdd the difference between penguin species to this plot. Try the different options ggplot offers\r\nspecies as color aesthetic\r\nspecies as fill aesthetic\r\nspecies as facet using facet_wrap\r\n\r\nExtra: What happens if you use geom_violin instead of geom_boxplot? Can you combine both geoms in one plot?\r\n1.4 Beautify the plots\r\nAlso here: Chose the task that you like more.\r\n1.4.1 Beautify the plots from 1.3\r\nTake the plot from before that you liked the most and try to make it look nice.\r\nHere’s a list of ideas:\r\nAdd a theme layer\r\nCustomize the theme, e.g.\r\nChange the position of the legend\r\nMake the axis titles bold\r\n\r\nChange the color/fill scale of the plot\r\nUse scale_color_manual or scale_fill_manual\r\nTry scale_color_viridis_d() or scale_fill_viridis_d() with different options\r\nTry a color scale from an additional package, e.g. ggsci::scale_color_uchicago() or ggsci::scale_fill_uchicago()\r\nFirst you have to install the ggsci package\r\n\r\n\r\nChange the labels of the x- and y-axis and add a title to the plot\r\n…\r\n1.4.2 Can you reproduce this plot?\r\nTake a look at the plot, we discussed during the presentation:\r\n\r\n\r\n\r\nFigure 2: Visualization from the palmerpenguins package\r\n\r\n\r\n\r\nCan you reproduce this plot? It is similar to the one from Task 1.3.1.\r\nThe colors that are used are:\r\n\r\n\r\npenguin_cols <- c(\"darkorange\", \"purple\", \"cyan4\")\r\n\r\n\r\n\r\n1.5 Save one of the plots on your machine\r\nSave one of the plots you produced in a variable and then use ggsave to save the plot on your machine. Save the plot in a dedicated plot directory in your RStudio project.\r\nReferences\r\nHorst AM, Hill AP, Gorman KB (2020). palmerpenguins: Palmer Archipelago (Antarctica) penguin data. R package version 0.1.0. https://allisonhorst.github.io/palmerpenguins/. doi: 10.5281/zenodo.3960218.\r\n\r\n2 dplyr\r\n2.1 Getting started with dplyr\r\nA helpful resource for to consult for this task can be the dplyr cheatsheet.\r\nBefore you start, make sure to load the tidyverse package and the palmerpenguins package.\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(palmerpenguins)\r\n\r\n\r\n\r\n2.2 Data transformation with dplyr\r\nIn the following, you find a lot of different data transformation tasks. First, do 2 from each category before you do the remaining ones. You don’t have to finish all the tasks but make sure you covered each category.\r\nFind all penguins that …\r\n… have a bill length between 40 and 45 mm.\r\n… for which we know the sex.\r\n… which are of the species Adelie or Gentoo and live either on Dream or on Torgersen\r\n… lived on the island Dream in the year 2007. How many of them were from each of the 3 species?\r\nCount …\r\n… the number of penguins on each island.\r\n… the number of penguins of each species on each island.\r\nSort …\r\n… penguins to find penguins with lowest body mass\r\n… penguins to find penguins with highest body mass\r\n… penguins by species and sex, with longest flippers first\r\nSelect …\r\n… only the variables species, sex and year\r\n… variables based on the following vector\r\n\r\n\r\n\r\n… only columns that contain measurements in mm\r\nAdd a column …\r\n… with abbreviations for the species (Adelie = A, Gentoo = G, Chinstrap = C).\r\n… with the ratio of bill length to bill depth\r\nCalculate …\r\n… mean flipper length and body mass for the 3 species and male and female penguins separately\r\nCan you do the same but remove the penguins for which we don’t know the sex first?\r\nExtras\r\nMake a boxplot of penguin body mass with sex on the y-axis and facets for the different species. Can you remove the penguins with missing values for sex first?\r\nMake a scatterplot with the ratio of bill length to bill depth on the y axis and flipper length on the x axis? Can you distinguish the point between male and female penguins and remove penguins with unknown sex before making the plot?\r\n\r\n3 tidyr\r\n4.1 Getting started with tidyr\r\nBefore you start, make sure to load the tidyverse package.\r\n\r\n\r\n\r\n4.2 Let’s tidy some data sets\r\n1. relig_incom\r\nHave a look at the relig_income data set that is included in tidyverse package. The data set contains the results of a survey asking people about their religion and income category.\r\nWhat is not tidy about this data set? Can you fix it?\r\n2. billboard\r\nHave a look at the billboard data set that is included in the tidyverse package. The data set contains information about the chart rank of songs in the year 2000.\r\nWhat is not tidy about this data set? Can you fix it?\r\nExtras\r\nCheck out the values_drop_na argument of pivot_longer. What does it do and how can you use it here?\r\nCheck out the names_prefix argument of pivot_longer. What does it do and how can you use it here?\r\n3. fish_encounters\r\nHave a look at the fish_encounters data set that is included in the tidyverse package. The data set contains records of fish detected by different automatic monitoring stations. Check out summary(fish_encounters) - the column seen only contains values of 1 to indicate that the fish was seen at the respective station.\r\nWhat is not tidy about this data set? Can you fix it?\r\nExtra\r\nHave a look at the values_fill argument of pivot_wider. How could you use it in this case to replace the missing values that are created?\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-08-01T13:13:04+02:00"
    },
    {
      "path": "03_solutions_controller.html",
      "title": "Tasks for day 3",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 Linear models\r\n2 Linear models transformation\r\n3 Poisson and binary glm\r\n4 Proportion glm\r\n\r\n1 Linear models\r\n\r\n\r\nFALSE\r\n\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n2 Linear models transformation\r\n\r\n\r\nFALSE\r\n\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n3 Poisson and binary glm\r\n\r\n\r\nFALSE\r\n\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n4 Proportion glm\r\n\r\n\r\nFALSE\r\n\r\n\r\n[1] FALSE\r\n\r\nSolution will be uploaded later\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-08-01T13:13:08+02:00"
    },
    {
      "path": "03_tasks_controller.html",
      "title": "Tasks for day 3",
      "author": [],
      "contents": "\r\n\r\nContents\r\n1 Linear models\r\n1.1 Getting started\r\n1.2 Linear regression\r\n1.3 Analysis of covariance\r\n1.4 Anova\r\n\r\n2 Linear models with transformation\r\n3 Poisson and binary glm\r\n1.1 Poisson glm\r\n1.2 Binary glm\r\n\r\n3 Proportion glm\r\n\r\n1 Linear models\r\n1.1 Getting started\r\nBefore you get started with the exercise, make sure that you load the palmerpenguins package and the tidyverse\r\n\r\n\r\n\r\nTo test the assumptions of linear models, we will use the performance package. Make sure you install it once and then load it:\r\n\r\n\r\n\r\nThe performance package depends on other packages. It might happen that you encounter an error when trying to load or use the package for the first time. Just read the error message and install the missing packages with install.packages() (likely this will be the case for the qqplotr package).\r\n1.2 Linear regression\r\nLet’s start with a simple linear regression.\r\nDoes the bill depth in crease with bill length?\r\nMake a scatter plot of bill length on the x and bill depth on the y axis.\r\nNow:\r\nFit a linear model to test this relationship\r\nCheck for significant effects: What do the results mean?\r\nCheck the model assumptions using diagnostic plots\r\nWhat do you think? Are the assumptions violated or do the plots look okay?\r\nCan you add the model result to the scatter plot?\r\n1.3 Analysis of covariance\r\nDoes the relationship between bill length and bill depth differ between penguin species?\r\nAdd the species variable to the scatter plot from 1.2\r\nFit the linear model again, including species as second explanatory variable\r\nFit two different models:\r\nEffect of bill length and species on bill depth with interaction 2 . Effect of bill length and species on bill depth without interaction\r\n\r\n\r\nTest model assumptions for both models.\r\nCheck for significant effects in both models\r\nWhich model would you choose? It the model results in the scatter plot from before.\r\n1.4 Anova\r\nDo male and female penguins differ in weight and does this depend on the species?\r\nBefore you start exploring this question, remove penguins with missing sex variable from the data\r\nThink of a plot that can represent this question\r\nFit a linear model that represents this question\r\nTest for significant predictors\r\nTest model assumptions\r\nExtra\r\nImprove the looks of the Anova result plot. You can be as creative as you want, e.g. take inspiration from plots you saw in the presentation.\r\nSome ideas:\r\nMake a boxplot and try to add a combination of geom_point() and position = position_jitterdodge()\r\nA bit tricky: Summarize the data (calculate mean and standard deviation) grouped by species and sex. The plot points + errorbars for mean + sd. Have a look here to see how you can do this.\r\nSame as above but with bars instead of points to represent means\r\n\r\n2 Linear models with transformation\r\nNo tasks yet\r\n\r\n3 Poisson and binary glm\r\n1.1 Poisson glm\r\nThe data set rabbit contains data on a highly threatened rabbit species.\r\nThe variables in this data set are:\r\nsights: integer variable of camera trap sightings\r\ndistance: distance to river (m)\r\ndegredation: level of degradation (low, medium, very high)\r\nQuestion: How does the degradation level of the site and the distance to the river influence the sightings of rabbits?\r\nYou can get the data with:\r\n\r\n\r\n\r\nTasks\r\nPlot the data\r\nFit a poisson glm (with or without interaction)\r\nTest the significant of the explanatory variables\r\nAdd the model to the plot\r\nExtra\r\nMake the plot look nicer\r\nAdd the model using a different option\r\n1.2 Binary glm\r\nThe data set is about the occurrence of woodpeckers at forest sites depending on the amount of deadwood and the dominant tree species.\r\nThe variables in the data set are:\r\nbird_pres: binary response variable (presence/absence of the bird at the site)\r\nspecies: dominant tree species at the site\r\ndeadwood: amount of deadwood at the site\r\nQuestion: How does the the amount of deadwood and the dominant tree species influence the probability of woodpecker presence?\r\nYou can get the data with:\r\n\r\n\r\n\r\nPlot the data\r\nFit a binary glm (family = \"binomial\")\r\nTest the significance of the predictors\r\nPlot the data and add model predictions\r\nExtra\r\nMake the plot look nicer\r\nAdd the model using a different option\r\n\r\n3 Proportion glm\r\nNo tasks yet\r\n\r\n\r\n\r\n\r\n",
      "last_modified": "2021-08-01T13:13:09+02:00"
    },
    {
      "path": "download_material_blank.html",
      "title": "You can download the full material after the workshop is finished",
      "description": "For now, please use the material avaialble from this website",
      "author": [],
      "contents": "\r\n\r\n\r\n\r\n",
      "last_modified": "2021-08-01T13:13:10+02:00"
    },
    {
      "path": "index.html",
      "title": "Introduction to R for Data Analysis",
      "description": "Welcome to the workshop. You can find all material and further information this website.\n",
      "author": [],
      "contents": "\r\nWorkshop organization and schedule\r\n🕘 9 a.m. - 4 p.m. (🥪 ~ 12 a.m. - 1 p.m.) 📍 We will meet every morning in the General meeting room of our Webex team.\r\nI set up a shared document to collect additional resources, feedback, etc. You can find the document here, please feel free to edit it as you like.\r\nWorkshop Material\r\nYou can find all the workshop material on this website. On top, you can navigate to the presentation slides and the tasks for each day. At the end of each workshop day, I will upload the solutions for the tasks.\r\nIf you want to download presentation slides in pdf format, you can do that with the following links:\r\n 01 - Introduction R and RStudio\r\n01 - Functions\r\n01 - Data & Tibbles\r\n01 - Tidyverse and Readr\r\n01 - Common errors\r\n02 - Ggplot2\r\n02 - Dplyr\r\n02 - Tidyr\r\n03 - Linear models\r\n03 - Generalized linear models\r\nAfter the workshop is finished, you can download a zipped version of the entire content from here.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-08-01T13:13:13+02:00"
    },
    {
      "path": "online_resources.html",
      "title": "Additional online resources",
      "description": "Below you can find a collection of helpful links to further online resources regarding the workshop topics.\n",
      "author": [],
      "contents": "\r\n\r\nContents\r\nGeneral\r\nTidyverse\r\nreadr\r\nggplot\r\ndplyr\r\ntidyr\r\n\r\nLinear models\r\nTwitter accounts to follow\r\n\r\nGeneral\r\nList of RStudio cheatsheets: You can find a list of all the cheat sheets that RStudio provides there. Below, I listed the individual cheat sheets that are interesting for our course.\r\nRStudio cheatsheet: Explains the most important buttons, options, keyboard shortcuts, etc that you have in RStudio.\r\nThe modern dive book explains how to get started with R and data analysis with the tidyverse.\r\nThe R for Data Science book by Hadley Wickham is a very good book to start with.\r\nThe Big book of R is a book that list all books about R that are freely available only. The book is sorted by topics and can be used to find resources to learn a specific topic.\r\nA curated collection of R resources. Not just books but also websites, tutorials, help channels, …\r\nTidyverse\r\nThe tidyverse website has links to all tidyverse packages which all have very good examples and use cases. These websites are an excelent point to get started with a package.\r\nreadr\r\ndata import cheatsheet\r\nggplot\r\nggplot cheatsheet offers an overview of all possibilities of ggplot\r\nerror bars with ggplot A good summary of how to plot different types of means and errorbars (barplots, mean and errorbar, …).\r\nIn the R graph gallery you can browse through hundreds of different types of plots and find code to reproduce them.\r\nA great presentation by Cédric Scherer with examples of how to beautify your ggplots.\r\ndplyr\r\ndplyr cheatsheet\r\ntidyr\r\ndata import cheatsheet\r\nLinear models\r\nanova with R: explanation why an anova is also a linear model\r\nTwitter accounts to follow\r\nI personally learn a lot of tricks and find a lot of inspiration and resources by following some R people and accounts on twitter. Often people post helpful tutorials or blogpost that you would not find otherwise. If you are a twitter user, you can try that as well. Some suggestions are:\r\nCédric Scherer mainly data visualization and ggplot content\r\nAllison Horst\r\nRStudio official RStudio account\r\nHadley Wickham data visualisation, tidyverse\r\nJenny Bryan\r\nrOpenSci develop R tools for open science\r\nOne R Tip a Day one helpful R tip every day\r\n\r\n\r\n\r\n",
      "last_modified": "2021-08-01T13:13:15+02:00"
    }
  ],
  "collections": []
}
