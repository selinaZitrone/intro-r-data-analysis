---
code-line-numbers: false
---

## Get started with readr and the tidyverse

Before you start, make sure to install the `tidyverse` packages by calling

```{r eval=FALSE, echo=TRUE}
install.packages("tidyverse")
```

This will install readr along with other tidyverse packages.

Remember to put `library(tidyverse)` (or `library(readr)`) on top of your script to access the readr functions.

### Write a tibble to disk

Let's use the `animals` tibble from the previous task and write it into the data folder in our project.

Before writing the tibble

- Create a `data` sub-folder in your RStudio project (if you don't have one yet)
  - Hint: You can do that from within RStudio by using the `New Folder` button in the *Files pane* 

Now write the `animals` tibble into that `/data` sub-directory as `animals.csv` using a comma separator.

Check if the file was written into the correct folder.

## Read data into R

Now, try to read the data set back into R using the appropriate `read_*` function.

Make sure that you save the table you read in in a new variable to have it available for later use.

:::{.callout-tip}

Don't type the path of the table to read. Instead, type only the "", then us the tab key on your keyboard to auto-complete the path. This way you avoid typing mistakes.

:::

## For the fast ones

- Download the csv or excel file below. The files are a bit messy. Find out what is messy 
about the data sets (try reading them in R and see what happens, open the files in Excel or a text editor and check out the structure).
Then read them into R correctly. Try the `janitor::clean_names` function on the data after you read it in.

:::{.columns}

::: {.column}

```{r echo = FALSE}
path_files <- list.files(
  path = here::here("data/read_challenge/"),
  full.names = TRUE
)

downloadthis::download_file(
  path = path_files[[1]],
  output_name = "Readr challenge files",
  button_label = "Download csv",
  button_type = "default",
  has_icon = TRUE,
  icon = "fa fa-save",
  self_contained = FALSE
)
```

:::

::: {.column}

```{r echo = FALSE}
downloadthis::download_file(
  path = path_files[[2]],
  output_name = "Readr challenge files",
  button_label = "Download xlsx",
  button_type = "default",
  has_icon = TRUE,
  icon = "fa fa-save",
  self_contained = FALSE
)
```

:::

:::

<br>

- Try reading in some of your own research data. First, add them to the `/data` folder of your project. 
Then read them into R using the appropriate `read_*` function. Can you manage to read the data in a clean format? What are the challenges you face?



